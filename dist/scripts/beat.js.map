{"version":3,"sources":["../assets/scripts/beat.js","../bower_components/d3/d3.js","../bower_components/paper/dist/paper-full.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/transition.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/alert.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/button.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/carousel.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/collapse.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/dropdown.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/modal.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/tooltip.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/popover.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/scrollspy.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/tab.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/affix.js"],"names":["heartbeat","currentColor","document","body","style","backgroundColor","beatNow","getElementById","innerHTML","moment","format","console","log","init","globalTime","hours","minutes","d3_documentElement","node","ownerDocument","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","length","mid","right","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","this","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","i","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","call","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","hsl","toLowerCase","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","p","ceil","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","hour","timezone","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","define","amd","module","exports","paper","undefined","Base","inject","dest","src","beans","preserve","val","describe","bean","isFunc","res","prev","beansNames","isPlainObject","writable","configurable","hidden","part","obj","iter","getLength","forIn","props","exclude","proto","getOwnPropertyDescriptor","__lookupGetter__","__lookupSetter__","_define","desc","__defineGetter__","__defineSetter__","statics","extend","initialize","clone","constructor","pick","_id","_class","_name","Formatter","instance","getClassName","exportJSON","options","toJSON","serialize","_set","dontCheck","_filtering","obj1","obj2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","definitions","references","item","ref","_serialize","_compact","deserialize","_data","_isDictionary","isRoot","isDictionary","importJSON","isTarget","Item","Layer","items","amount","_index","removed","capitalize","str","camelize","all","chr","hyphenate","Emitter","func","types","_eventTypes","handlers","_callbacks","install","uninstall","once","emit","responds","attach","detach","fire","_installEvents","events","_events","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","projects","tools","palettes","_scopes","support","ctx","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","browser","agent","platform","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","setup","element","Project","activate","handleAttribute","el","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","TOLERANCE","EPSILON","MACHINE_EPSILON","KAPPA","isZero","integrate","Ax","findRoot","df","tolerance","solveQuadratic","roots","gmC","mult","LOG10E","solveCubic","qd","tmp","ec","UID","_pools","pool","arg0","arg1","hasY","setAngle","setLength","_angle","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","div","dot","getQuadrant","getDirectedAngle","getDistance","squared","normalize","subtract","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","isClose","isCollinear","isColinear","isOrthogonal","op","LinkedPoint","owner","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","getTop","setTop","getRight","setRight","getBottom","setBottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","unite","include","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","shear","toRadians","concatenate","a2","b2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","apx","apy","avx","avy","bpx","bpy","bvx","bvy","vx","vy","v2x","v2y","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","draw","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","strokeWidth","_drawSelection","Symbol","dontCenter","setDefinition","_definition","flags","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","PlacedSymbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","setParent","mouseFlags","mousedrag","doubleclick","mouseEvent","counters","_eventCounters","onFrame","_animateItem","onLoad","animate","fontSize","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","_children","namedChildren","_namedChildren","orig","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","_updateBoundsCache","setBounds","cache","cached","_internal","_boundsCache","ids","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","includeMatrix","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","Path","getIntersections","checkBounds","pt","tolerancePadding","guides","parentTotalMatrix","_totalMatrix","totalMatrix","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matchObject","firstOnly","overlapping","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","namedArray","notifyParent","replaceWith","reverseChildren","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","fillStyle","toCanvasStyle","getStrokeWidth","strokeStyle","lineWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","getViewMatrix","globalMatrix","mainCtx","itemOffset","prevOffset","normalBlend","nativeBlend","direct","dontStart","_canComposite","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","process","_isUpdated","CompoundPath","updated","_drawSelected","getSelectedColor","half","beginPath","stroke","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","kappa","bezierCurveTo","getWindingRule","getCornerCenter","halfSize","dir","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","crossOrigin","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","_crossOrigin","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","toDataURL","loaded","Image","DomEvent","getCrossOrigin","setCrossOrigin","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","Color","getPixel","setPixel","components","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","isStraight","_point","_handleIn","_handleOut","_path","curves","_curves","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","hasHandles","isLinear","getNext","getPrevious","isOrthogonalArc","isArc","_selectionState","state","oldState","flag","getPath","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","removeSegment","seg1","seg2","seg3","seg4","handle1","handle2","pt1","pt2","Curve","arg6","arg7","_segment2","segment1","segment2","_length","getPoint1","setPoint1","getPoint2","setPoint2","getHandle1","setHandle1","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getPart","getPartLength","Ssegment","filterIntersections","_getParameter","isParameter","parameter","getParameterAt","ignoreLinear","subdivide","h2","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","txs","tys","isFlatEnough","ux","uy","getEdgeSum","_addBounds","v3","tMin","tMax","getLocationAt","getLocationOf","getOffsetOf","loc","getOffset","getNearestLocation","refine","dist","minDist","minT","getNearestPoint","evaluateMethods","getLengthIntegrand","getIterations","evaluate","normalized","len","ds","rangeLength","guess","getTangent","getWeightedTangent","getNormal","getWeightedNormal","getCurvature","addLocation","locations","curve1","curve2","addCurveIntersections","uMin","uMax","oldTDiff","recursion","tMinNew","tMaxNew","tDiff","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","tMinClip","tMaxClip","getConvexHull","clipConvexHull","dq0","dq1","dq2","dq3","dist1","dist2","flip","pmax","distZero","hullTop","hullBottom","clipConvexHullPart","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rlx2","rvl","rvc","tc","tl","addLineIntersection","linear1","linear2","c1p1","c1p2","c2p1","c2p2","_expand","loc1","loc2","path1","path2","getParameter","last","_curve","next2","_curve2","_parameter","_parameter2","getIntersection","_point2","_distance","_version","getPointAt","getSegment","_preferFirst","_segment","_getOffset","getCurveOffset","_intersection","curves1","curves2","matrix1","matrix2","length1","length2","values2","values1","setPathData","getCoord","relative","control","command","cubicCurveTo","quadraticCurveTo","arcTo","_getWinding","setSegments","_clockwise","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","addSegment","skipLine","curX","curY","inX","inY","outX","prevX","outY","prevY","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","pos","simplify","fitter","PathFitter","fit","isClockwise","setClockwise","clockwise","last1","last2","first2","first1","toShape","topCenter","shape","isCloseEnough","checkSegmentPoint","seg","anchor","strokePadding","checkSegmentPoints","addToArea","checkSegmentStroke","cap","numSegments","_addBevelJoin","_addSquareCap","hitStroke","hitFill","hitCurves","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","overlap","knots","f1","f2","ie","je","getCurrentSegment","moveBy","curveTo","through","middle","large","epsilon","rxSq","rySq","xSq","ySq","l2","throughSide","centerSide","ext","inc","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","processSegment","prevCoords","addRound","joinBounds","addJoin","addCap","phi","addPoint","normal1","getNormalAt","normal2","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","createPath","createEllipse","ellipseSegments","getBottomLeft","tr","getTopRight","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","getCurrentPath","check","computeBoolean","operation","preparePath","reorient","collect","monoCurves","_getMonoCurves","operator","operators","_path1","_path2","splitPath","_winding","startSeg","totalLength","windingSum","curveLength","getTangentAt","getWinding","tracePaths","intersections","resetLinear","linearHandles","newCurve","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","prevCurve","prevT","xBefore","xAfter","startCounted","slope","counted","selfOp","_visited","inter","startInterSeg","added","interSeg","c4","c3","t4","w3","w4","nextCurve","nextSeg","lastSegment","firstSegment","insertCurve","handleCurve","getInteriorPoint","xIntercepts","maxRecursion","addCurve","computeParts","maxT","minDifference","halfT","prevVal","prevLen","weighted","fitCubic","tan1","tan2","uPrime","chordLengthParameterize","maxError","parametersInOrder","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","b3","alpha1","alpha2","detC0C1","detC0X","detXC1","segLength","eps","diff","degree","maxDist","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","leading","getLeading","font","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","fromCSS","colorCache","colorCtx","hsb","gradient","componentParsers","hsbIndices","converters","rgb-hsb","delta","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","hasOverlap","parser","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","canvasGradient","_stops","destination","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","acronym","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontFamily","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","getStyles","doc","viewport","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","targetTouches","getTarget","srcElement","getRelatedTarget","toElement","stopPropagation","requestAnimationFrame","handleCallbacks","callbacks","focused","nativeRequest","requested","focus","blur","setInterval","getCanvasSize","_element","_pixelRatio","devicePixelRatio","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","_windowEvents","setViewSize","_setViewSize","Stats","_stats","stats","domElement","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","onResize","_time","_count","_requestFrame","_requested","_handleFrame","_before","_handlingFrame","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","isVisible","projectToView","viewToProject","CanvasView","tempFocus","handleMouseMove","_handleEvent","tool","prevFocus","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","HTMLCanvasElement","deviceRatio","backingStoreRatio","firefox","temp","prevFont","measureText","callEvent","lastPoint","MouseEvent","isStopped","downPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","handleKey","charCode","specialKey","specialKeys","charCodeMap","mac","commandFixMap","downCode",8,9,13,16,17,18,19,20,27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","which","keypress","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","async","ActiveXObject","canvases","getLum","setLum","dg","mn","lmn","ln","mxl","getSat","setSat","md","sg","sb","sa","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","average","negation","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","lookup","attribute","toSVG","fromSVG","exportFilter","SVGNamespaces","href","setAttributes","attrs","tag","getTransform","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","embedImages","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","gradientUnits","stopColor","stop-color","exportText","applyStyle","visibility","svgs","exportDefinitions","defs","firstChild","XMLSerializer","serializeToString","exporter","exporters","onExport","setOptions","xmlns:xlink","getValue","allowNull","convertValue","importGroup","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","applyTransform","transforms","applyOpacity","styles","attributes","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","importers","onImport","expandShapes","#document","clippath","polyline","lineargradient","radialgradient","use","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","__$__","handler","binaryOperators","$__","unaryOperators","acorn","compile","insertions","insertion","getCode","getBetween","replaceCode","walkAST","argument","between","parentType","computed","sourceMap","lineBreaks","getElementsByTagName","substr","mappings","file","sourceRoot","sources","sourcesContent","btoa","unescape","encodeURIComponent","expose","params","toolHandlers","script","head","createTextNode","_execute","setOnResize","setOnFrame","loadScript","canvasId","scopeAttribute","baseURI","loadAll","fr","mr","hr","sourceFile","vr","column","SyntaxError","raisedAt","Ar","Sr","Er","gr","kr","wr","Cr","beforeExpr","onComment","Kt","pr","Jt","E","xt","Et","wt","Dt","Lt","Ut","Rt","Tt","Vt","Gt","Lr","St","At","jt","Ot","qt","Ct","It","mt","vt","yt","bt","ft","ht","gt","kt","yr","xr","Br","Qt","$t","jr","Or","Tr","Dr","Bt","Yt","Fr","Wt","lt","forbidReserved","ecmaVersion","Mt","zt","Xt","Ir","Ur","V","T","O","expression","strictSemicolons","Nt","Rr","Vr","J","Mr","Nr","label","lr","kind","keyword","Wr","Pr","Zt","tt","_r","declarations","ut","K","Gr","Kr","consequent","alternate","Hr","Qr","Yr","discriminant","cases","en","zr","Jr","Zr","et","block","Xr","guard","guardedHandlers","qr","finalizer","$r","nt","isLoop","Q","expressions","isAssign","er","rr","binop","isUpdate","postfix","nr","callee","ur","ot","it","st","ct","atomValue","elements","ir","at","or","allowTrailingCommas","program","defaultOptions","getLineInfo","tokenize","startLoc","endLoc","jumpTo","break","case","catch","continue","debugger","do","else","finally","for","function","if","return","switch","throw","try","var","while","with","null","new","instanceof","typeof","void","delete","tokTypes","bracketL","bracketR","braceL","braceR","parenL","parenR","semi","colon","question","slash","eq","eof","num","regexp","Ft","Pt","Ht","_t","isIdentifierStart","isIdentifierChar","+","*","/","==","!=","transitionEnd","transEndEventNames","WebkitTransition","MozTransition","OTransition","fn","emulateTransitionEnd","$el","one","trigger","special","bsTransitionEnd","bindType","delegateType","is","handleObj","jQuery","Plugin","$this","Alert","dismiss","close","VERSION","TRANSITION_DURATION","removeElement","$parent","closest","isDefaultPrevented","removeClass","hasClass","alert","Constructor","noConflict","Button","toggle","setState","$element","DEFAULTS","isLoading","loadingText","resetText","proxy","addClass","removeAttr","$input","toggleClass","button","$btn","Carousel","action","slide","cycle","$indicators","paused","sliding","$active","$items","keyboard","tagName","clearInterval","getItemIndex","getItemForDirection","activeIndex","willWrap","itemIndex","$next","isCycling","slideEvent","$nextIndicator","slidEvent","offsetWidth","carousel","clickHandler","$target","slideIndex","$carousel","getTargetFromTrigger","$trigger","Collapse","transitioning","addAriaAndCollapsedClass","hasWidth","show","activesData","actives","startEvent","scrollSize","camelCase","hide","offsetHeight","isOpen","collapse","clearMenus","backdrop","Dropdown","insertAfter","dropdown","_relatedTarget","Modal","$body","$dialog","$backdrop","isShown","originalBodyPad","scrollbarWidth","ignoreBackdropClick","remote","BACKDROP_TRANSITION_DURATION","checkScrollbar","setScrollbar","escape","appendTo","adjustDialog","enforceFocus","hideModal","handleUpdate","resetAdjustments","resetScrollbar","removeBackdrop","doAnimate","currentTarget","callbackRemove","modalIsOverflowing","scrollHeight","css","paddingLeft","bodyIsOverflowing","paddingRight","fullWindowWidth","documentElementRect","measureScrollbar","bodyPad","scrollDiv","className","modal","showEvent","Tooltip","enabled","timeout","hoverState","inState","animation","placement","title","$viewport","isFunction","hover","triggers","eventIn","eventOut","leave","_options","fixTitle","getDefaults","getDelegateOptions","tip","isInStateTrue","hasContent","inDom","$tip","tipId","getUID","autoToken","autoPlace","actualWidth","actualHeight","orgPlacement","viewportDim","calculatedOffset","getCalculatedOffset","applyPlacement","prevHoverState","marginTop","marginLeft","setOffset","using","getViewportAdjustedDelta","isVertical","arrowDelta","arrowOffsetPosition","replaceArrow","arrow","getTitle","$e","isBody","elRect","elOffset","outerDims","viewportPadding","viewportDimensions","topEdgeOffset","bottomEdgeOffset","leftEdgeOffset","rightEdgeOffset","$arrow","enable","disable","toggleEnabled","destroy","removeData","tooltip","Popover","popover","ScrollSpy","$scrollElement","activeTarget","refresh","getScrollHeight","offsetMethod","offsetBase","isWindow","$href","maxScroll","parents","parentsUntil","scrollspy","$spy","Tab","$ul","$previous","hideEvent","tab","Affix","checkPosition","checkPositionWithEventLoop","affixed","unpin","pinnedOffset","RESET","getState","offsetTop","offsetBottom","targetHeight","initializing","colliderTop","colliderHeight","getPinnedOffset","affix","affixType","toObject"],"mappings":"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","file":"beat.js","sourcesContent":["// time\n\n// refresh time, structure as object\nvar\tglobalTime; \n  \nwindow.onload = function() {\n  globalTime = moment().toObject();\n  init();\n};  \n\nsetInterval(function() {\n  globalTime = moment().toObject();\n  \n  console.log(\"Beat.\");\n\n\theartbeat();\n  // call function to change body background color\n  init();\n}, 1000);\t\n\t\n\n\n\nfunction heartbeat() {\n\n\t\t// refresh time, structure as object\n\t\tvar currentColor = document.body.style.backgroundColor;\n    \n    // clock\n    var beatNow = document.getElementById(\"beatNow\");\n    beatNow.innerHTML = moment().format('h');\n    beatNow.innerHTML = moment().format('mm');\n    beatNow.innerHTML = moment().format('ss');\n    \n    // css3 class \t\t\n\t\tconsole.log(currentColor);\n    console.log(beatNow);\n\t\t\n}\n\n\n\n\nfunction init() {\n\t\n\t// body\n\tvar body = document.body;\n\t\n\t// logic to change backround color\n\tif (globalTime.hours > 1 && globalTime.minutes < 46) {\n\t\tbody.style.backgroundColor = 'green';\n\t\tconsole.log(globalTime.hours);\n\t} else {\n\t\tbody.style.backgroundColor = 'red';\n\t\tconsole.log(globalTime.minutes);\n\t}\n\n}\n","!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();","/*!\n * Paper.js v0.9.24 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Fri Aug 21 16:39:41 2015 +0200\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc && !val.base\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && !(exclude && exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor,\n\t\t\t\tproto;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tproto = ctor.prototype = create(this.prototype);\n\t\t\tdefine(proto, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\tif (arguments.length)\n\t\t\t\tthis.inject.apply(ctor, arguments);\n\t\t\tctor.base = base;\n\t\t\treturn ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function(a, b) {\n\t\t\t\treturn a !== undefined ? a : b;\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar keys = Object.keys(props._filtering || props);\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tif (!(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (obj1 && obj2\n\t\t\t\t\t&& typeof obj1 === 'object' && typeof obj2 === 'object') {\n\t\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\t\tvar length = obj1.length;\n\t\t\t\t\tif (length !== obj2.length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tif (!Base.equals(obj1[length], obj2[length]))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar keys = Object.keys(obj1),\n\t\t\t\t\t\tlength = keys.length;\n\t\t\t\t\tif (length !== Object.keys(obj2).length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tvar key = keys[length];\n\t\t\t\t\t\tif (!(obj2.hasOwnProperty(key)\n\t\t\t\t\t\t\t\t&& Base.equals(obj1[key], obj2[key])))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tvar keys = Object.keys(obj);\n\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\tres[key] = Base.serialize(obj[key], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\t}\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data, _isDictionary) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (json.length == 1 && /^#/.test(type))\n\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\ttype = Base.exports[type];\n\t\t\t\tres = [];\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data,\n\t\t\t\t\t\t\tisDictionary));\n\t\t\t\tif (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar types = this._eventTypes,\n\t\t\t\tentry = types && types[type],\n\t\t\t\thandlers = this._callbacks = this._callbacks || {};\n\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\thandlers.push(func);\n\t\t\t\tif (entry && entry.install && handlers.length == 1)\n\t\t\t\t\tentry.install.call(this, type);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar types = this._eventTypes,\n\t\t\tentry = types && types[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry && entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\thandlers = handlers.slice();\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false) {\n\t\t\t\tif (event && event.stop)\n\t\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar types = this._eventTypes,\n\t\t\t\t\tentry = types && types[type],\n\t\t\t\t\tfunc = entry && entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar agent = navigator.userAgent.toLowerCase(),\n\t\t\t\tplatform = (/(win)/.exec(agent)\n\t\t\t\t\t\t|| /(mac)/.exec(agent)\n\t\t\t\t\t\t|| /(linux)/.exec(agent)\n\t\t\t\t\t\t|| [])[0],\n\t\t\t\tbrowser = proto.browser = { platform: platform };\n\t\t\tif (platform)\n\t\t\t\tbrowser[platform] = true;\n\t\t\tagent.replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: '0.9.24',\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tTOLERANCE = 1e-6,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\treturn {\n\t\tTOLERANCE: TOLERANCE,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn abs(val) <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= 2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (D !== 0 && abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar gmC = pow(abs(a * b * c), 1 / 3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\tvar mult = pow(10, abs(\n\t\t\t\t\t\tMath.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\tif (abs(B) < EPSILON)\n\t\t\t\t\treturn abs(c) < EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else {\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tD = D < 0 ? 0 : D;\n\t\t\t\t\tvar R = sqrt(D);\n\t\t\t\t\tif (b >= MACHINE_EPSILON && b <= MACHINE_EPSILON) {\n\t\t\t\t\t\tx1 = abs(a) >= abs(c) ? R / a : -c / R;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar q = -(b + (b < 0 ? -1 : 1) * R);\n\t\t\t\t\t\tx1 = q / a;\n\t\t\t\t\t\tx2 = c / q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 >= min && x1 <= max))\n\t\t\t\troots[count++] = x1;\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 >= min && x2 <= max))\n\t\t\t\troots[count++] = x2;\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx, b1, c2;\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (abs(d) < EPSILON) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x >= min && x <= max))\n\t\t\t\troots[count++] = x;\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar UID = {\n\t_id: 1,\n\t_pools: {},\n\n\tget: function(ctor) {\n\t\tif (ctor) {\n\t\t\tvar name = ctor._class,\n\t\t\t\tpool = this._pools[name];\n\t\t\tif (!pool)\n\t\t\t\tpool = this._pools[name] = { _id: 1 };\n\t\t\treturn pool._id++;\n\t\t} else {\n\t\t\treturn this._id++;\n\t\t}\n\t}\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\ts = Math.sin(angle),\n\t\t\tc = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * c - point.y * s,\n\t\t\tpoint.x * s + point.y * c\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function(point, tolerance) {\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisCollinear: function(point) {\n\t\treturn Math.abs(this.cross(point)) < 0.000001;\n\t},\n\n\tisColinear: '#isCollinear',\n\n\tisOrthogonal: function(point) {\n\t\treturn Math.abs(this.dot(point)) < 0.000001;\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments);\n\t\tif (point.isZero()) {\n\t\t\treturn new Point(0, 0);\n\t\t} else {\n\t\t\tvar scale = this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n}, new function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = coords.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tstatics: {\n\t\tintersect: function(apx, apy, avx, avy, bpx, bpy, bvx, bvy, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tavx -= apx;\n\t\t\t\tavy -= apy;\n\t\t\t\tbvx -= bpx;\n\t\t\t\tbvy -= bpy;\n\t\t\t}\n\t\t\tvar cross = avx * bvy - avy * bvx;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = apx - bpx,\n\t\t\t\t\tdy = apy - bpy,\n\t\t\t\t\tta = (bvx * dy - bvy * dx) / cross,\n\t\t\t\t\ttb = (avx * dy - avy * dx) / cross;\n\t\t\t\tif (isInfinite || 0 <= ta && ta <= 1 && 0 <= tb && tb <= 1)\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tapx + ta * avx,\n\t\t\t\t\t\t\t\tapy + ta * avy);\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0) {\n\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\tif (ccw > 0) {\n\t\t\t\t\tv2x -= vx;\n\t\t\t\t\tv2y -= vy;\n\t\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\t\tif (ccw < 0)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn Numerical.isZero(vx)\n\t\t\t\t\t? vy >= 0 ? px - x : x - px\n\t\t\t\t\t: Numerical.isZero(vy)\n\t\t\t\t\t\t? vx >= 0 ? y - py : py - y\n\t\t\t\t\t\t: (vx * (y - py) - vy * (x - px)) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = UID.get();\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = UID.get();\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, project: true, parent: true },\n\t\t\t\t\ttrue);\n\t\treturn hasProps;\n\t},\n\n\t_events: new function() {\n\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\n\t\tvar mouseEvent = {\n\t\t\tinstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tuninstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = mouseEvent;\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis._animateItem(true);\n\t\t\t\t\t},\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis._animateItem(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t);\n\t},\n\n\t_animateItem: function(animate) {\n\t\tthis.getView()._animateItem(this, animate);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tItem._updateBoundsCache(this, cacheItem);\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tItem._updateBoundsCache(this._parent || this._parentSymbol, cacheItem);\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_updateBoundsCache: function(parent, item) {\n\t\t\tif (parent) {\n\t\t\t\tvar id = item._id,\n\t\t\t\t\tref = parent._boundsCache = parent._boundsCache || {\n\t\t\t\t\t\tids: {},\n\t\t\t\t\t\tlist: []\n\t\t\t\t\t};\n\t\t\t\tif (!ref.ids[id]) {\n\t\t\t\t\tref.list.push(item);\n\t\t\t\t\tref.ids[id] = item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++){\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert, includeMatrix) {\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide'],\n\t\t\tchildren = this._children;\n\t\tcopy.setStyle(this._style);\n\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\tcopy.addChild(children[i].clone(false), true);\n\t\t}\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tif (includeMatrix !== false)\n\t\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy.setApplyMatrix(this._applyMatrix);\n\t\tcopy.setPivot(this._pivot);\n\t\tcopy.setSelected(this._selected);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(),\n\t\t\t\t_matrix || item._matrix).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 0.000001)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tvar type = typeof name;\n\t\tif (type === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (type === 'function') {\n\t\t\treturn name(this);\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param && typeof match === 'object') {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect =\tbounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: !!inside,\n\t\t\t\t\toverlapping: !!overlapping,\n\t\t\t\t\trect: rect,\n\t\t\t\t\tpath: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param && param.items,\n\t\t\t\trect = param && param.rect;\n\t\t\tmatrix = rect && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (rect) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!rect.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(param.inside && rect.contains(bounds))\n\t\t\t\t\t\t\t&& !(param.overlapping && (bounds.contains(rect)\n\t\t\t\t\t\t\t\t|| param.path.intersects(child, childMatrix))))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio || 1,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2;\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = this._clone(new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t}), insert);\n\t\tif (paper.settings.applyMatrix)\n\t\t\tpath.setApplyMatrix(true);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tcrossOrigin: null,\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\tcopy._crossOrigin = this._crossOrigin;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\tcrossOrigin = this._crossOrigin,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\timage = document.getElementById(src) || new Image();\n\t\tif (crossOrigin)\n\t\t\timage.crossOrigin = crossOrigin;\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, { load: loaded });\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetCrossOrigin: function() {\n\t\treturn this._image && this._image.crossOrigin || this._crossOrigin || '';\n\t},\n\n\tsetCrossOrigin: function(crossOrigin) {\n\t\tthis._crossOrigin = crossOrigin;\n\t\tif (this._image)\n\t\t\tthis._image.crossOrigin = crossOrigin;\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL() : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif (arg0.point) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.isStraight() ? this._point\n\t\t\t\t: [this._point, this._handleIn, this._handleOut],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\thasHandles: function() {\n\t\treturn !this.isStraight();\n\t},\n\n\tisStraight: function() {\n\t\treturn this._handleIn.isZero() && this._handleOut.isZero();\n\t},\n\n\tisLinear: function() {\n\t\treturn Segment.isLinear(this, this.getNext());\n\t},\n\n\tisCollinear: function(segment) {\n\t\treturn Segment.isCollinear(this, this.getNext(),\n\t\t\t\tsegment, segment.getNext());\n\t},\n\n\tisColinear: '#isCollinear',\n\n\tisOrthogonal: function() {\n\t\treturn Segment.isOrthogonal(this.getPrevious(), this, this.getNext());\n\t},\n\n\tisOrthogonalArc: function() {\n\t\treturn Segment.isOrthogonalArc(this, this.getNext());\n\t},\n\n\tisArc: '#isOrthogonalArc',\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\treverse: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t},\n\n   statics: {\n\n\t\tisLinear: function(seg1, seg2) {\n\t\t\tvar l = seg2._point.subtract(seg1._point);\n\t\t\treturn l.isCollinear(seg1._handleOut)\n\t\t\t\t\t&& l.isCollinear(seg2._handleIn);\n\t\t},\n\n\t\tisCollinear: function(seg1, seg2, seg3, seg4) {\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg3._handleOut.isZero() && seg4._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isCollinear(\n\t\t\t\t\t\tseg4._point.subtract(seg3._point));\n\t\t},\n\n\t\tisOrthogonal: function(seg1, seg2, seg3) {\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t&& seg2._handleOut.isZero() && seg3._handleIn.isZero()\n\t\t\t\t&& seg2._point.subtract(seg1._point).isOrthogonal(\n\t\t\t\t\t\tseg3._point.subtract(seg2._point));\n\t\t},\n\n\t\tisOrthogonalArc: function(seg1, seg2) {\n\t\t\tvar handle1 = seg1._handleOut,\n\t\t\t\thandle2 = seg2._handleIn,\n\t\t\t\tkappa = 0.5522847498307936;\n\t\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\t\tvar pt1 = seg1._point,\n\t\t\t\t\tpt2 = seg2._point,\n\t\t\t\t\tcorner = new Line(pt1, handle1, true).intersect(\n\t\t\t\t\t\t\tnew Line(pt2, handle2, true), true);\n\t\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt1).getLength() - kappa)\n\t\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt2).getLength() - kappa);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tthis._segment1 = arg1;\n\t\t\tthis._segment2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tthis._segment1 = new Segment();\n\t\t\tthis._segment2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tthis._segment1 = new Segment(arg0.segment1);\n\t\t\tthis._segment2 = new Segment(arg0.segment2);\n\t\t} else if (count === 2) {\n\t\t\tthis._segment1 = new Segment(arg0);\n\t\t\tthis._segment2 = new Segment(arg1);\n\t\t} else {\n\t\t\tvar point1, handle1, handle2, point2;\n\t\t\tif (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = new Segment(point2, handle2, null);\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tthis._length = this.isLinear()\n\t\t\t\t? this._segment2._point.getDistance(this._segment1._point)\n\t\t\t\t: Curve.getLength(this.getValues(), 0, 1);\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\thasHandles: function() {\n\t\treturn !this._segment1._handleOut.isZero()\n\t\t\t\t|| !this._segment2._handleIn.isZero();\n\t},\n\n\tisLinear: function() {\n\t\treturn Segment.isLinear(this._segment1, this._segment2);\n\t},\n\n\tisCollinear: function(curve) {\n\t\treturn Ssegment.isCollinear(this._segment1, this._segment2,\n\t\t\t\tcurve._segment1, curve._segment2);\n\t},\n\n\tisOrthogonalArc: function() {\n\t\treturn Segment.isOrthogonalArc(this._segment1, this._segment2);\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve.filterIntersections(Curve.getIntersections(\n\t\t\t\tthis.getValues(), curve.getValues(), this, curve, []));\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, ignoreLinear) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttolerance = 0.000001,\n\t\t\tres = null;\n\t\tif (parameter > tolerance && parameter < 1 - tolerance) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tisLinear = ignoreLinear ? false : this.isLinear(),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1];\n\n\t\t\tif (!isLinear) {\n\t\t\t\tthis._segment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tthis._segment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t!isLinear && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t!isLinear && new Point(right[2] - x, right[3] - y));\n\n\t\t\tif (this._path) {\n\t\t\t\tif (this._segment1._index > 0 && this._segment2._index === 0) {\n\t\t\t\t\tthis._path.add(segment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._path.insert(this._segment2._index, segment);\n\t\t\t\t}\n\t\t\t\tres = this;\n\t\t\t} else {\n\t\t\t\tvar end = this._segment2;\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, end);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treverse: function() {\n\t\treturn new Curve(this._segment2.reverse(), this._segment1.reverse());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, x, y) {\n\t\tvar tolerance = 0.000001;\n\t\tif (Math.abs(v[0] - x) < tolerance && Math.abs(v[1] - y) < tolerance)\n\t\t\treturn 0;\n\t\tif (Math.abs(v[6] - x) < tolerance && Math.abs(v[7] - y) < tolerance)\n\t\t\treturn 1;\n\t\tvar txs = [],\n\t\t\ttys = [],\n\t\t\tsx = Curve.solveCubic(v, 0, x, txs, 0, 1),\n\t\t\tsy = Curve.solveCubic(v, 1, y, tys, 0, 1),\n\t\t\ttx, ty;\n\t\tfor (var cx = 0;  sx === -1 || cx < sx;) {\n\t\t\tif (sx === -1 || (tx = txs[cx++]) > 0 && tx < 1) {\n\t\t\t\tfor (var cy = 0; sy === -1 || cy < sy;) {\n\t\t\t\t\tif (sy === -1 || (ty = tys[cy++]) > 0 && ty < 1) {\n\t\t\t\t\t\tif (sx === -1) {\n\t\t\t\t\t\t\ttx = ty;\n\t\t\t\t\t\t} else if (sy === -1) {\n\t\t\t\t\t\t\tty = tx;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Math.abs(tx - ty) < tolerance)\n\t\t\t\t\t\t\treturn (tx + ty) * 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sx === -1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn v;\n\t},\n\n\thasHandles: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn !(isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]));\n\t},\n\n\tisLinear: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tl = new Point(p2x - p1x, p2y - p1y);\n\t\treturn l.isCollinear(new Point(v[2] - p1x, v[3] - p1y))\n\t\t\t\t&& l.isCollinear(new Point(v[4] - p2x, v[5] - p2y));\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn (  3.0 * c1y * p1x - 1.5 * c1y * c2x\n\t\t\t\t- 1.5 * c1y * p2x - 3.0 * p1y * c1x\n\t\t\t\t- 1.5 * p1y * c2x - 0.5 * p1y * p2x\n\t\t\t\t+ 1.5 * c2y * p1x + 1.5 * c2y * c1x\n\t\t\t\t- 3.0 * c2y * p2x + 0.5 * p2y * p1x\n\t\t\t\t+ 1.5 * p2y * c1x + 3.0 * p2y * c2x) / 10;\n\t},\n\n\tgetEdgeSum: function(v) {\n\t\treturn\t  (v[0] - v[2]) * (v[3] + v[1])\n\t\t\t\t+ (v[2] - v[4]) * (v[5] + v[3])\n\t\t\t\t+ (v[4] - v[6]) * (v[7] + v[5]);\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(\n\t['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name]([this._segment1,\n\t\t\t\t\t\tthis._segment2], false, this._path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), {\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Curve.getParameterOf(this.getValues(), point.x, point.y);\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar t = isParameter ? offset : this.getParameterAt(offset);\n\t\treturn t != null && t >= 0 && t <= 1\n\t\t\t\t? new CurveLocation(this, t)\n\t\t\t\t: null;\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tcount = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(Curve.getPoint(values, t), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 0.000001) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\tvar pt = Curve.getPoint(values, minT);\n\t\treturn new CurveLocation(this, minT, pt, null, null, null,\n\t\t\t\tpoint.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n},\nnew function() {\n\tvar methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent',\n\t\t'getWeightedNormal', 'getCurvature'];\n\treturn Base.each(methods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve[name](values, isParameter ? offset\n\t\t\t\t\t: Curve.getParameterAt(values, offset, 0));\n\t\t};\n\t}, {\n\t\tstatics: {\n\t\t\tevaluateMethods: methods\n\t\t}\n\t})\n},\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\tfunction evaluate(v, t, type, normalized) {\n\t\tif (t == null || t < 0 || t > 1)\n\t\t\treturn null;\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tolerance || t > 1 - tolerance)) {\n\t\t\tvar isZero = t < tolerance;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tolerance) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > 1 - tolerance) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (normalized) {\n\t\t\t\t\tif (x === 0 && y === 0\n\t\t\t\t\t\t\t&& (t < tolerance || t > 1 - tolerance)) {\n\t\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t\t}\n\t\t\t\t\tvar len = Math.sqrt(x * x + y * y);\n\t\t\t\t\tx /= len;\n\t\t\t\t\ty /= len;\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by,\n\t\t\t\t\t\td = Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t\tx = d !== 0 ? (x * y2 - y * x2) / d : 0;\n\t\t\t\t\ty = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t}\n\n\treturn {\n\t\tstatics: true,\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\tif (a === 0 && b === 1\n\t\t\t\t\t&& isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[6] - v[4]) && isZero(v[7] - v[5])) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar tolerance = 0.000001,\n\t\t\t\tabs = Math.abs,\n\t\t\t\tforward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (abs(offset - rangeLength) < tolerance) {\n\t\t\t\treturn forward ? b : a;\n\t\t\t} else if (abs(offset) > rangeLength) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 16,\n\t\t\t\t\ttolerance);\n\t\t},\n\n\t\tgetPoint: function(v, t) {\n\t\t\treturn evaluate(v, t, 0, false);\n\t\t},\n\n\t\tgetTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, true);\n\t\t},\n\n\t\tgetWeightedTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, false);\n\t\t},\n\n\t\tgetNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, true);\n\t\t},\n\n\t\tgetWeightedNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, false);\n\t\t},\n\n\t\tgetCurvature: function(v, t) {\n\t\t\treturn evaluate(v, t, 3, false).x;\n\t\t}\n\t};\n}, new function() {\n\tfunction addLocation(locations, include, curve1, t1, point1, curve2, t2,\n\t\t\tpoint2) {\n\t\tvar loc = new CurveLocation(curve1, t1, point1, curve2, t2, point2);\n\t\tif (!include || include(loc))\n\t\t\tlocations.push(loc);\n\t}\n\n\tfunction addCurveIntersections(v1, v2, curve1, curve2, locations, include,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (recursion > 32)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]) || 0,\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]) || 0,\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\ttMinNew, tMaxNew, tDiff;\n\t\tif (q0x === q3x && uMax - uMin < tolerance && recursion > 3) {\n\t\t\ttMaxNew = tMinNew = (tMax + tMin) / 2;\n\t\t\ttDiff = 0;\n\t\t} else {\n\t\t\tvar hull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip, tMaxClip;\n\t\t\ttMinClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\ttop.reverse();\n\t\t\tbottom.reverse();\n\t\t\ttMaxClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\tif (tMinClip == null || tMaxClip == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\ttDiff = tMaxClip - tMinClip;\n\t\t\ttMinNew = tMax * tMinClip + tMin * (1 - tMinClip);\n\t\t\ttMaxNew = tMax * tMaxClip + tMin * (1 - tMaxClip);\n\t\t}\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, curve2, curve1, locations, include,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew) < tolerance) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tif (reverse) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve2, t2, Curve.getPoint(v2, t2),\n\t\t\t\t\t\tcurve1, t1, Curve.getPoint(v1, t1));\n\t\t\t} else {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.getPoint(v1, t1),\n\t\t\t\t\t\tcurve2, t2, Curve.getPoint(v2, t2));\n\t\t\t}\n\t\t} else if (tDiff > 0) {\n\t\t\taddCurveIntersections(v2, v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\tdist1 = getSignedDistance(0, dq0, 1, dq3, 1 / 3, dq1),\n\t\t\tdist2 = getSignedDistance(0, dq0, 1, dq3, 2 / 3, dq2),\n\t\t\tflip = false,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\tflip = dist1 < 0;\n\t\t} else {\n\t\t\tvar pmax, cross = 0,\n\t\t\t\tdistZero = dist1 === 0 || dist2 === 0;\n\t\t\tif (Math.abs(dist1) > Math.abs(dist2)) {\n\t\t\t\tpmax = p1;\n\t\t\t\tcross = (dq3 - dq2 - (dq3 - dq0) / 3)\n\t\t\t\t\t\t* (2 * (dq3 - dq2) - dq3 + dq1) / 3;\n\t\t\t} else {\n\t\t\t\tpmax = p2;\n\t\t\t\tcross = (dq1 - dq0 + (dq0 - dq3) / 3)\n\t\t\t\t\t\t* (-2 * (dq0 - dq1) + dq0 - dq2) / 3;\n\t\t\t}\n\t\t\thull = cross < 0 || distZero\n\t\t\t\t\t? [[p0, pmax, p3], [p0, p3]]\n\t\t\t\t\t: [[p0, p1, p2, p3], [p0, p3]];\n\t\t\tflip = dist1 ? dist1 < 0 : dist2 < 0;\n\t\t}\n\t\treturn flip ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold)\n\t\t\t\treturn px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, curve1, curve2, locations,\n\t\t\tinclude) {\n\t\tvar flip = Curve.isLinear(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trlx2 = ldx * cos - ldy * sin,\n\t\t\trvl = [0, 0, 0, 0, rlx2, 0, rlx2, 0],\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\ty * cos + x * sin);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tx = Curve.getPoint(rvc, tc).x;\n\t\t\tif (x >= 0 && x <= rlx2) {\n\t\t\t\tvar tl = Curve.getParameterOf(rvl, x, 0),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.getPoint(v1, t1),\n\t\t\t\t\t\tcurve2, t2, Curve.getPoint(v2, t2));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, curve1, curve2, locations, include) {\n\t\tvar point = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tcurve1, Curve.getParameterOf(v1, x, y), point,\n\t\t\t\t\tcurve2, Curve.getParameterOf(v2, x, y), point);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\tgetIntersections: function(v1, v2, c1, c2, locations, include) {\n\t\t\tvar linear1 = Curve.isLinear(v1),\n\t\t\t\tlinear2 = Curve.isLinear(v2),\n\t\t\t\tc1p1 = c1.getPoint1(),\n\t\t\t\tc1p2 = c1.getPoint2(),\n\t\t\t\tc2p1 = c2.getPoint1(),\n\t\t\t\tc2p2 = c2.getPoint2(),\n\t\t\t\ttolerance = 0.000001;\n\t\t\tif (c1p1.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 0, c1p1);\n\t\t\tif (c1p1.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 1, c1p1);\n\t\t\t(linear1 && linear2\n\t\t\t\t? addLineIntersection\n\t\t\t\t: linear1 || linear2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, include,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (c1p2.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 0, c1p2);\n\t\t\tif (c1p2.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 1, c1p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\tfilterIntersections: function(locations, _expand) {\n\t\t\tvar last = locations.length - 1,\n\t\t\t\ttMax = 1 - 0.000001;\n\t\t\tfor (var i = last; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tnext = loc._curve.getNext(),\n\t\t\t\t\tnext2 = loc._curve2.getNext();\n\t\t\t\tif (next && loc._parameter >= tMax) {\n\t\t\t\t\tloc._parameter = 0;\n\t\t\t\t\tloc._curve = next;\n\t\t\t\t}\n\t\t\t\tif (next2 && loc._parameter2 >= tMax) {\n\t\t\t\t\tloc._parameter2 = 0;\n\t\t\t\t\tloc._curve2 = next2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction compare(loc1, loc2) {\n\t\t\t\tvar path1 = loc1.getPath(),\n\t\t\t\t\tpath2 = loc2.getPath();\n\t\t\t\treturn path1 === path2\n\t\t\t\t\t\t? (loc1.getIndex() + loc1.getParameter())\n\t\t\t\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t\t: path1._id - path2._id;\n\t\t\t}\n\n\t\t\tif (last > 0) {\n\t\t\t\tlocations.sort(compare);\n\t\t\t\tfor (var i = last; i > 0; i--) {\n\t\t\t\t\tif (locations[i].equals(locations[i - 1])) {\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tlast--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_expand) {\n\t\t\t\tfor (var i = last; i >= 0; i--)\n\t\t\t\t\tlocations.push(locations[i].getIntersection());\n\t\t\t\tlocations.sort(compare);\n\t\t\t}\n\t\t\treturn locations;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point, _curve2,\n\t\t\t_parameter2, _point2, _distance) {\n\t\tthis._id = UID.get(CurveLocation);\n\t\tvar path = curve._path;\n\t\tthis._version = path ? path._version : 0;\n\t\tthis._curve = curve;\n\t\tthis._parameter = parameter;\n\t\tthis._point = point || curve.getPointAt(parameter, true);\n\t\tthis._curve2 = _curve2;\n\t\tthis._parameter2 = _parameter2;\n\t\tthis._point2 = _point2;\n\t\tthis._distance = _distance;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t},\n\n\tgetSegment: function(_preferFirst) {\n\t\tif (!this._segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\tif (parameter === 1) {\n\t\t\t\tthis._segment = curve._segment2;\n\t\t\t} else if (parameter === 0 || _preferFirst) {\n\t\t\t\tthis._segment = curve._segment1;\n\t\t\t} else if (parameter == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis._segment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t}\n\t\treturn this._segment;\n\t},\n\n\tgetCurve: function() {\n\t\tvar curve = this._curve,\n\t\t\tpath = curve && curve._path;\n\t\tif (path && path._version !== this._version) {\n\t\t\tcurve = null;\n\t\t\tthis._parameter = null;\n\t\t}\n\t\tif (!curve) {\n\t\t\tcurve = this._segment1.getCurve();\n\t\t\tif (curve.getParameterOf(this._point) == null)\n\t\t\t\tcurve = this._segment2.getPrevious().getCurve();\n\t\t\tthis._curve = curve;\n\t\t\tpath = curve._path;\n\t\t\tthis._version = path ? path._version : 0;\n\t\t}\n\t\treturn curve;\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetParameter: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this._parameter;\n\t\treturn curve && parameter == null\n\t\t\t? this._parameter = curve.getParameterOf(this._point)\n\t\t\t: parameter;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tgetOffset: function() {\n\t\tvar path = this.getPath();\n\t\treturn path ? path._getOffset(this) : this.getCurveOffset();\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetIntersection: function() {\n\t\tvar intersection = this._intersection;\n\t\tif (!intersection && this._curve2) {\n\t\t\tthis._intersection = intersection = new CurveLocation(this._curve2,\n\t\t\t\t\tthis._parameter2, this._point2 || this._point, this);\n\t\t\tintersection._intersection = this;\n\t\t}\n\t\treturn intersection;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.divide(this.getParameter(), true);\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.split(this.getParameter(), true);\n\t},\n\n\tequals: function(loc) {\n\t\tvar abs = Math.abs,\n\t\t\ttolerance = 0.000001;\n\t\treturn this === loc\n\t\t\t\t|| loc instanceof CurveLocation\n\t\t\t\t\t&& this.getCurve() === loc.getCurve()\n\t\t\t\t\t&& abs(this.getParameter() - loc.getParameter()) < tolerance\n\t\t\t\t\t&& this._curve2 === loc._curve2\n\t\t\t\t\t&& abs(this._parameter2 - loc._parameter2) < tolerance\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t}\n}, Base.each(Curve.evaluateMethods, function(name) {\n\tif (name !== 'getPoint') {\n\t\tvar get = name + 'At';\n\t\tthis[name] = function() {\n\t\t\tvar parameter = this.getParameter(),\n\t\t\t\tcurve = this.getCurve();\n\t\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t\t};\n\t}\n}, {}));\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, _matrix, _expand) {\n\t\tif (this === path)\n\t\t\tpath = null;\n\t\tvar locations = [],\n\t\t\tcurves1 = this.getCurves(),\n\t\t\tcurves2 = path ? path.getCurves() : curves1,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = path ? (_matrix || path._matrix).orNullIfIdentity()\n\t\t\t\t: matrix1,\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = path ? curves2.length : length1,\n\t\t\tvalues2 = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tif (path && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = path ? curve1.getValues(matrix1) : values2[i];\n\t\t\tif (!path) {\n\t\t\t\tvar seg1 = curve1.getSegment1(),\n\t\t\t\t\tseg2 = curve1.getSegment2(),\n\t\t\t\t\th1 = seg1._handleOut,\n\t\t\t\t\th2 = seg2._handleIn;\n\t\t\t\tif (new Line(seg1._point.subtract(h1), h1.multiply(2), true)\n\t\t\t\t\t\t.intersect(new Line(seg2._point.subtract(h2),\n\t\t\t\t\t\th2.multiply(2), true), false)) {\n\t\t\t\t\tvar parts = Curve.subdivide(values1);\n\t\t\t\t\tCurve.getIntersections(\n\t\t\t\t\t\tparts[0], parts[1], curve1, curve1, locations,\n\t\t\t\t\t\tfunction(loc) {\n\t\t\t\t\t\t\tif (loc._parameter <= tMax) {\n\t\t\t\t\t\t\t\tloc._parameter /= 2;\n\t\t\t\t\t\t\t\tloc._parameter2 = 0.5 + loc._parameter2 / 2;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = path ? 0 : i + 1; j < length2; j++) {\n\t\t\t\tCurve.getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curves2[j], locations,\n\t\t\t\t\t!path && (j === i + 1 || j === length2 - 1 && i === 0)\n\t\t\t\t\t\t&& function(loc) {\n\t\t\t\t\t\t\tvar t = loc._parameter;\n\t\t\t\t\t\t\treturn t >= tMin && t <= tMax;\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Curve.filterIntersections(locations, _expand);\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tthis._version = 0;\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._clockwise = undefined;\n\t\t\tif (flags & 16) {\n\t\t\t\tthis._version++;\n\t\t\t} else if (this._curves) {\n\t\t\t   for (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t\tthis._monoCurves = undefined;\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\tisLinear: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tif (!segments[i].isLinear())\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tif (segments[i].hasHandles())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves || segs._curves) {\n\t\t\tif (!curves)\n\t\t\t\tcurves = this._curves = [];\n\t\t\tvar from = index > 0 ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, this._countCurves());\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves();\n\t\t\tthis._length = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tthis._length += curves[i].getLength();\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar curves = this.getCurves();\n\t\tvar area = 0;\n\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\tarea += curves[i].getArea();\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.getPointAt(pos)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (curve.isLinear() && curve.getLength() === 0)\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tolerance = 0.000001;\n\t\tif (parameter >= 1 - tolerance) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter > tolerance) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = this._clone(new Path().insertAbove(this, true));\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn Path.isClockwise(this._segments);\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isCollinear(i, j) {\n\t\t\treturn segments[i].isCollinear(segments[j]);\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\treturn segments[i].isOrthogonal();\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\treturn segments[i].isOrthogonalArc();\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (!this.hasHandles() && segments.length === 4\n\t\t\t\t&& isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = this._clone(new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t}), insert, false);\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\t_getOffset: function(location) {\n\t\tvar index = location && location.getIndex();\n\t\tif (index != null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\toffset = 0;\n\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\toffset += curves[i].getLength();\n\t\t\tvar curve = curves[index],\n\t\t\t\tparameter = location.getParameter();\n\t\t\tif (parameter > 0)\n\t\t\t\toffset += curve.getPartLength(0, parameter);\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset,\n\t\t\t\tcurve = curves[index];\n\t\t\treturn curve ? curve.getLocationAt(offset - index, true) : null;\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}), new function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n}, new function() {\n\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n}, new function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < epsilon)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tisClockwise: function(segments) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsum += Curve.getEdgeSum(Curve.getValues(\n\t\t\t\t\tsegments[i], segments[i + 1 < l ? i + 1 : 0]));\n\t\treturn sum > 0;\n\t},\n\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isCollinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().multiply(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tif (this._children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t} else {\n\t\t\treturn reduce.base.call(this);\n\t\t}\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : mx, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n}, new function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current : new Path();\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tvar operator = operators[operation];\n\t\tfunction preparePath(path) {\n\t\t\treturn path.clone(false).reduce().reorient().transform(null, true,\n\t\t\t\t\ttrue);\n\t\t}\n\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tsplitPath(_path1.getIntersections(_path2, null, true));\n\n\t\tvar chain = [],\n\t\t\tsegments = [],\n\t\t\tmonoCurves = [],\n\t\t\ttolerance = 0.000001;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tsegments.sort(function(a, b) {\n\t\t\tvar _a = a._intersection,\n\t\t\t\t_b = b._intersection;\n\t\t\treturn !_a && !_b || _a && _b ? 0 : _a ? -1 : 1;\n\t\t});\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding != null)\n\t\t\t\tcontinue;\n\t\t\tchain.length = 0;\n\t\t\tvar startSeg = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar length = segment.getCurve().getLength();\n\t\t\t\tchain.push({ segment: segment, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== startSeg);\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar length = totalLength * (j + 1) / 4;\n\t\t\t\tfor (var k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length < tolerance\n\t\t\t\t\t\t\t\t|| curveLength - length < tolerance)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.segment.getCurve(),\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isLinear() && Math.abs(curve\n\t\t\t\t\t\t\t\t\t.getTangentAt(0.5, true).y) < tolerance,\n\t\t\t\t\t\t\tpath = curve._path;\n\t\t\t\t\t\tif (path._parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = path._parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && _path2\n\t\t\t\t\t\t\t&& (path === _path1 && _path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === _path2 && !_path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.insertAbove(path1);\n\t\tresult.addChildren(tracePaths(segments, operator), true);\n\t\tresult = result.reduce();\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction splitPath(intersections) {\n\t\tvar tMin = 0.000001,\n\t\t\ttMax = 1 - tMin,\n\t\t\tlinearHandles;\n\n\t\tfunction resetLinear() {\n\t\t\tfor (var i = 0, l = linearHandles.length; i < l; i++)\n\t\t\t\tlinearHandles[i].set(0, 0);\n\t\t}\n\n\t\tfor (var i = intersections.length - 1, curve, prev; i >= 0; i--) {\n\t\t\tvar loc = intersections[i],\n\t\t\t\tt = loc._parameter;\n\t\t\tif (prev && prev._curve === loc._curve && prev._parameter > 0) {\n\t\t\t\tt /= prev._parameter;\n\t\t\t} else {\n\t\t\t\tcurve = loc._curve;\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tresetLinear();\n\t\t\t\tlinearHandles = curve.isLinear() ? [\n\t\t\t\t\t\tcurve._segment1._handleOut,\n\t\t\t\t\t\tcurve._segment2._handleIn\n\t\t\t\t\t] : null;\n\t\t\t}\n\t\t\tvar newCurve,\n\t\t\t\tsegment;\n\t\t\tif (newCurve = curve.divide(t, true, true)) {\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tcurve = newCurve.getPrevious();\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tlinearHandles.push(segment._handleOut, segment._handleIn);\n\t\t\t} else {\n\t\t\t\tsegment = t < tMin\n\t\t\t\t\t? curve._segment1\n\t\t\t\t\t: t > tMax\n\t\t\t\t\t\t? curve._segment2\n\t\t\t\t\t\t: curve.getPartLength(0, t) < curve.getPartLength(t, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tsegment._intersection = loc.getIntersection();\n\t\t\tloc._segment = segment;\n\t\t\tprev = loc;\n\t\t}\n\t\tif (linearHandles)\n\t\t\tresetLinear();\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar tolerance = 0.000001,\n\t\t\ttMin = tolerance,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - tolerance,\n\t\t\t\tyAfter = py + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.getPoint(values, roots[j]).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves);\n\t\t} else {\n\t\t\tvar xBefore = px - tolerance,\n\t\t\t\txAfter = px + tolerance;\n\t\t\tvar startCounted = false,\n\t\t\t\tprevCurve,\n\t\t\t\tprevT;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0];\n\t\t\t\t\tif (!(\n\t\t\t\t\t\tt > tMax && startCounted && curve.next !== curves[i + 1]\n\t\t\t\t\t\t|| t < tMin && prevT > tMax\n\t\t\t\t\t\t\t&& curve.previous === prevCurve)) {\n\t\t\t\t\t\tvar x = Curve.getPoint(values, t).x,\n\t\t\t\t\t\t\tslope = Curve.getTangent(values, t).y,\n\t\t\t\t\t\t\tcounted = false;\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isLinear(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (curve.previous !== curves[i - 1])\n\t\t\t\t\t\t\tstartCounted = t < tMin && counted;\n\t\t\t\t\t}\n\t\t\t\t\tprevCurve = curve;\n\t\t\t\t\tprevT = t;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction tracePaths(segments, operator, selfOp) {\n\t\tvar paths = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0, seg, startSeg, l = segments.length; i < l; i++) {\n\t\t\tseg = startSeg = segments[i];\n\t\t\tif (seg._visited || !operator(seg._winding))\n\t\t\t\tcontinue;\n\t\t\tvar path = new Path(Item.NO_INSERT),\n\t\t\t\tinter = seg._intersection,\n\t\t\t\tstartInterSeg = inter && inter._segment,\n\t\t\t\tadded = false,\n\t\t\t\tdir = 1;\n\t\t\tdo {\n\t\t\t\tvar handleIn = dir > 0 ? seg._handleIn : seg._handleOut,\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn,\n\t\t\t\t\tinterSeg;\n\t\t\t\tif (added && (!operator(seg._winding) || selfOp)\n\t\t\t\t\t\t&& (inter = seg._intersection)\n\t\t\t\t\t\t&& (interSeg = inter._segment)\n\t\t\t\t\t\t&& interSeg !== startSeg) {\n\t\t\t\t\tif (selfOp) {\n\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c1 = seg.getCurve();\n\t\t\t\t\t\tif (dir > 0)\n\t\t\t\t\t\t\tc1 = c1.getPrevious();\n\t\t\t\t\t\tvar t1 = c1.getTangentAt(dir < 1 ? tMin : tMax, true),\n\t\t\t\t\t\t\tc4 = interSeg.getCurve(),\n\t\t\t\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\t\t\t\tt3 = c3.getTangentAt(tMax, true),\n\t\t\t\t\t\t\tt4 = c4.getTangentAt(tMin, true),\n\t\t\t\t\t\t\tw3 = t1.cross(t3),\n\t\t\t\t\t\t\tw4 = t1.cross(t4);\n\t\t\t\t\t\tif (w3 * w4 !== 0) {\n\t\t\t\t\t\t\tvar curve = w3 < w4 ? c3 : c4,\n\t\t\t\t\t\t\t\tnextCurve = operator(curve._segment1._winding)\n\t\t\t\t\t\t\t\t\t? curve\n\t\t\t\t\t\t\t\t\t: w3 < w4 ? c4 : c3,\n\t\t\t\t\t\t\t\tnextSeg = nextCurve._segment1;\n\t\t\t\t\t\t\tdir = nextCurve === c3 ? -1 : 1;\n\t\t\t\t\t\t\tif (nextSeg._visited && seg._path !== nextSeg._path\n\t\t\t\t\t\t\t\t\t\t|| !operator(nextSeg._winding)) {\n\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\t\t\tif (nextSeg._visited)\n\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, added && handleIn, handleOut));\n\t\t\t\tadded = true;\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = dir > 0 ? seg.getNext() : seg. getPrevious();\n\t\t\t} while (seg && !seg._visited\n\t\t\t\t\t&& seg !== startSeg && seg !== startInterSeg\n\t\t\t\t\t&& (seg._intersection || operator(seg._winding)));\n\t\t\tif (seg && (seg === startSeg || seg === startInterSeg)) {\n\t\t\t\tpath.firstSegment.setHandleIn((seg === startInterSeg\n\t\t\t\t\t\t? startInterSeg : seg)._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else {\n\t\t\t\tpath.lastSegment._handleOut.set(0, 0);\n\t\t\t}\n\t\t\tif (path._segments.length >\n\t\t\t\t\t(path._closed ? path.isLinear() ? 2 : 0 : 1))\n\t\t\t\tpaths.push(path);\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn new Group([this.subtract(path), this.intersect(path)]);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isLinear(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttolerance = 0.000001,\n\t\t\t\t\troots = [];\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b, c, roots, tolerance,\n\t\t\t\t\t\t1 - tolerance);\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.getPoint(values, roots[j]).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 0.000001) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, weighted) {\n\t\t\tvar param = this.getParameterAt(offset);\n\t\t\treturn Curve[name](this.curves[param.index], param.value, weighted);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit,\n\t\t\tparametersInOrder = true;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error && parametersInOrder) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tparametersInOrder = this.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1),\n\t\t\teps = epsilon * segLength,\n\t\t\thandle1,\n\t\t\thandle2;\n\t\tif (alpha1 < eps || alpha2 < eps) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t} else {\n\t\t\tvar line = pt2.subtract(pt1);\n\t\t\thandle1 = tan1.normalize(alpha1);\n\t\t\thandle2 = tan2.normalize(alpha2);\n\t\t\tif (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t\thandle1 = handle2 = null;\n\t\t\t}\n\t\t}\n\n\t\treturn [pt1, pt1.add(handle1 || tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(handle2 || tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t\tfor (var i = 1, l = u.length; i < l; i++) {\n\t\t\tif (u[i] <= u[i - 1])\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 0.000001)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert, includeMatrix) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert, includeMatrix);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tthis._components[index] = parser.call(this, value);\n\t\t\t\tthis._changed();\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type];\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tthis._id = UID.get(Color);\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n}, new function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nBase.each(Color._types, function(properties, type) {\n\tvar ctor = this[Base.capitalize(type) + 'Color'] = function(arg) {\n\t\t\tvar argType = arg != null && typeof arg,\n\t\t\t\tcomponents = argType === 'object' && arg.length != null\n\t\t\t\t\t? arg\n\t\t\t\t\t: argType === 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: arguments;\n\t\t\treturn components\n\t\t\t\t\t? new Color(type, components)\n\t\t\t\t\t: new Color(arg);\n\t\t};\n\tif (type.length == 3) {\n\t\tvar acronym = type.toUpperCase();\n\t\tColor[acronym] = this[acronym + 'Color'] = ctor;\n\t}\n}, Base.exports);\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = UID.get();\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops, this._radial);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tDomEvent.add(window, {\n\t\tfocus: function() {\n\t\t\tfocused = true;\n\t\t},\n\t\tblur: function() {\n\t\t\tfocused = false;\n\t\t}\n\t});\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif (!this._pixelRatio)\n\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\tthis._id = element.getAttribute('id');\n\t\tif (this._id == null)\n\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\tDomEvent.add(element, this._viewEvents);\n\t\tvar none = 'none';\n\t\tDomElement.setPrefixed(element.style, {\n\t\t\tuserSelect: none,\n\t\t\ttouchAction: none,\n\t\t\ttouchCallout: none,\n\t\t\tcontentZooming: none,\n\t\t\tuserDrag: none,\n\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t});\n\n\t\tfunction getSize(name) {\n\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t};\n\n\t\tfunction getCanvasSize() {\n\t\t\tvar size = DomElement.getSize(element);\n\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t: size;\n\t\t};\n\n\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\tvar that = this;\n\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\tresize: function() {\n\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._setViewSize(size = getCanvasSize());\n\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\tthis._stats = new Stats();\n\t\t\tvar stats = this._stats.domElement,\n\t\t\t\tstyle = stats.style,\n\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\tstyle.position = 'absolute';\n\t\t\tstyle.left = offset.x + 'px';\n\t\t\tstyle.top = offset.y + 'px';\n\t\t\tdocument.body.appendChild(stats);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: {\n\t\tonFrame: {\n\t\t\tinstall: function() {\n\t\t\t\tthis.play();\n\t\t\t},\n\n\t\t\tuninstall: function() {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t},\n\n\t\tonResize: {}\n\t},\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n}, new function() {\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\tvar size = Size.read(arguments, 1);\n\t\t\tif (size.isZero())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t}\n\t\tthis._context = canvas.getContext('2d');\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar browser = paper.browser,\n\t\t\tpixels;\n\t\tif (browser && browser.firefox) {\n\t\t\tvar parent = this._element.parentNode,\n\t\t\t\ttemp = document.createElement('div');\n\t\t\ttemp.style.fontSize = size;\n\t\t\tparent.appendChild(temp);\n\t\t\tpixels = parseFloat(DomElement.getStyles(temp).fontSize);\n\t\t\tparent.removeChild(temp);\n\t\t} else {\n\t\t\tvar ctx = this._context,\n\t\t\t\tprevFont = ctx.font;\n\t\t\tctx.font = size + ' serif';\n\t\t\tpixels = parseFloat(ctx.font);\n\t\t\tctx.font = prevFont;\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function(force) {\n\t\tvar project = this._project;\n\t\tif (!project || !force && !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n}, new function() {\n\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tcommandFixMap,\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers) {\n\t\t\tmodifiers[name] = down;\n\t\t\tvar browser = paper.browser;\n\t\t\tif (name === 'command' && browser && browser.mac) {\n\t\t\t\tif (down) {\n\t\t\t\t\tcommandFixMap = {};\n\t\t\t\t} else {\n\t\t\t\t\tfor (var code in commandFixMap) {\n\t\t\t\t\t\tif (code in charCodeMap)\n\t\t\t\t\t\t\thandleKey(false, code, commandFixMap[code], event);\n\t\t\t\t\t}\n\t\t\t\t\tcommandFixMap = null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (down && commandFixMap) {\n\t\t\tcommandFixMap[keyCode] = charCode;\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (minDistance != null && this._maxDistance != null\n\t\t\t\t&& minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && maxDistance != null\n\t\t\t\t&& maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = distance;\n\t\tthis._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tif (maxDistance != null && maxDistance != 0) {\n\t\t\t\t\tif (distance > maxDistance) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDistance));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback, async) {\n\t\tasync = (async === undefined) ? true : async;\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, async);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize(),\n\t\t\timage = item.getImage();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = options.embedImages === false && image && image.src\n\t\t\t\t|| item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tvar matchShapes = options.matchShapes;\n\t\tif (matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (matchShapes && !item.hasHandles()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tif (isRoot) {\n\t\t\tvar defs = node.querySelectorAll('defs');\n\t\t\tfor (var i = 0, l = defs.length; i < l; i++) {\n\t\t\t\timportSVG(defs[i], options, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& childNode.nodeName.toLowerCase() !== 'defs'\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.set(Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {}), {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (item && Base.pick(options.applyMatrix, applyMatrix))\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\nBase.exports.PaperScript = (function() {\n\tvar exports, define,\n\t\tscope = this;\n!function(e,r){return\"object\"==typeof exports&&\"object\"==typeof module?r(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],r):(r(e.acorn||(e.acorn={})),void 0)}(this,function(e){\"use strict\";function r(e){fr=e||{};for(var r in mr)Object.prototype.hasOwnProperty.call(fr,r)||(fr[r]=mr[r]);hr=fr.sourceFile||null}function t(e,r){var t=vr(dr,e);r+=\" (\"+t.line+\":\"+t.column+\")\";var n=new SyntaxError(r);throw n.pos=e,n.loc=t,n.raisedAt=br,n}function n(e){function r(e){if(1==e.length)return t+=\"return str === \"+JSON.stringify(e[0])+\";\";t+=\"switch(str){\";for(var r=0;r<e.length;++r)t+=\"case \"+JSON.stringify(e[r])+\":\";t+=\"return true}return false;\"}e=e.split(\" \");var t=\"\",n=[];e:for(var a=0;a<e.length;++a){for(var o=0;o<n.length;++o)if(n[o][0].length==e[a].length){n[o].push(e[a]);continue e}n.push([e[a]])}if(n.length>3){n.sort(function(e,r){return r.length-e.length}),t+=\"switch(str.length){\";for(var a=0;a<n.length;++a){var i=n[a];t+=\"case \"+i[0].length+\":\",r(i)}t+=\"}\"}else r(e);return new Function(\"str\",t)}function a(){this.line=Ar,this.column=br-Sr}function o(){Ar=1,br=Sr=0,Er=!0,u()}function i(e,r){gr=br,fr.locations&&(kr=new a),wr=e,u(),Cr=r,Er=e.beforeExpr}function s(){var e=fr.onComment&&fr.locations&&new a,r=br,n=dr.indexOf(\"*/\",br+=2);if(-1===n&&t(br-2,\"Unterminated comment\"),br=n+2,fr.locations){Kt.lastIndex=r;for(var o;(o=Kt.exec(dr))&&o.index<br;)++Ar,Sr=o.index+o[0].length}fr.onComment&&fr.onComment(!0,dr.slice(r+2,n),r,br,e,fr.locations&&new a)}function c(){for(var e=br,r=fr.onComment&&fr.locations&&new a,t=dr.charCodeAt(br+=2);pr>br&&10!==t&&13!==t&&8232!==t&&8233!==t;)++br,t=dr.charCodeAt(br);fr.onComment&&fr.onComment(!1,dr.slice(e+2,br),e,br,r,fr.locations&&new a)}function u(){for(;pr>br;){var e=dr.charCodeAt(br);if(32===e)++br;else if(13===e){++br;var r=dr.charCodeAt(br);10===r&&++br,fr.locations&&(++Ar,Sr=br)}else if(10===e||8232===e||8233===e)++br,fr.locations&&(++Ar,Sr=br);else if(e>8&&14>e)++br;else if(47===e){var r=dr.charCodeAt(br+1);if(42===r)s();else{if(47!==r)break;c()}}else if(160===e)++br;else{if(!(e>=5760&&Jt.test(String.fromCharCode(e))))break;++br}}}function l(){var e=dr.charCodeAt(br+1);return e>=48&&57>=e?E(!0):(++br,i(xt))}function f(){var e=dr.charCodeAt(br+1);return Er?(++br,k()):61===e?x(Et,2):x(wt,1)}function d(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Dt,1)}function p(e){var r=dr.charCodeAt(br+1);return r===e?x(124===e?Lt:Ut,2):61===r?x(Et,2):x(124===e?Rt:Tt,1)}function h(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Vt,1)}function m(e){var r=dr.charCodeAt(br+1);return r===e?45==r&&62==dr.charCodeAt(br+2)&&Gt.test(dr.slice(Lr,br))?(br+=3,c(),u(),g()):x(St,2):61===r?x(Et,2):x(At,1)}function v(e){var r=dr.charCodeAt(br+1),t=1;return r===e?(t=62===e&&62===dr.charCodeAt(br+2)?3:2,61===dr.charCodeAt(br+t)?x(Et,t+1):x(jt,t)):33==r&&60==e&&45==dr.charCodeAt(br+2)&&45==dr.charCodeAt(br+3)?(br+=4,c(),u(),g()):(61===r&&(t=61===dr.charCodeAt(br+2)?3:2),x(Ot,t))}function b(e){var r=dr.charCodeAt(br+1);return 61===r?x(qt,61===dr.charCodeAt(br+2)?3:2):x(61===e?Ct:It,1)}function y(e){switch(e){case 46:return l();case 40:return++br,i(mt);case 41:return++br,i(vt);case 59:return++br,i(yt);case 44:return++br,i(bt);case 91:return++br,i(ft);case 93:return++br,i(dt);case 123:return++br,i(pt);case 125:return++br,i(ht);case 58:return++br,i(gt);case 63:return++br,i(kt);case 48:var r=dr.charCodeAt(br+1);if(120===r||88===r)return C();case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return E(!1);case 34:case 39:return A(e);case 47:return f(e);case 37:case 42:return d();case 124:case 38:return p(e);case 94:return h();case 43:case 45:return m(e);case 60:case 62:return v(e);case 61:case 33:return b(e);case 126:return x(It,1)}return!1}function g(e){if(e?br=yr+1:yr=br,fr.locations&&(xr=new a),e)return k();if(br>=pr)return i(Br);var r=dr.charCodeAt(br);if(Qt(r)||92===r)return L();var n=y(r);if(n===!1){var o=String.fromCharCode(r);if(\"\\\\\"===o||$t.test(o))return L();t(br,\"Unexpected character '\"+o+\"'\")}return n}function x(e,r){var t=dr.slice(br,br+r);br+=r,i(e,t)}function k(){for(var e,r,n=\"\",a=br;;){br>=pr&&t(a,\"Unterminated regular expression\");var o=dr.charAt(br);if(Gt.test(o)&&t(a,\"Unterminated regular expression\"),e)e=!1;else{if(\"[\"===o)r=!0;else if(\"]\"===o&&r)r=!1;else if(\"/\"===o&&!r)break;e=\"\\\\\"===o}++br}var n=dr.slice(a,br);++br;var s=I();return s&&!/^[gmsiy]*$/.test(s)&&t(a,\"Invalid regexp flag\"),i(jr,new RegExp(n,s))}function w(e,r){for(var t=br,n=0,a=0,o=null==r?1/0:r;o>a;++a){var i,s=dr.charCodeAt(br);if(i=s>=97?s-97+10:s>=65?s-65+10:s>=48&&57>=s?s-48:1/0,i>=e)break;++br,n=n*e+i}return br===t||null!=r&&br-t!==r?null:n}function C(){br+=2;var e=w(16);return null==e&&t(yr+2,\"Expected hexadecimal number\"),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\"),i(Or,e)}function E(e){var r=br,n=!1,a=48===dr.charCodeAt(br);e||null!==w(10)||t(r,\"Invalid number\"),46===dr.charCodeAt(br)&&(++br,w(10),n=!0);var o=dr.charCodeAt(br);(69===o||101===o)&&(o=dr.charCodeAt(++br),(43===o||45===o)&&++br,null===w(10)&&t(r,\"Invalid number\"),n=!0),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\");var s,c=dr.slice(r,br);return n?s=parseFloat(c):a&&1!==c.length?/[89]/.test(c)||Tr?t(r,\"Invalid number\"):s=parseInt(c,8):s=parseInt(c,10),i(Or,s)}function A(e){br++;for(var r=\"\";;){br>=pr&&t(yr,\"Unterminated string constant\");var n=dr.charCodeAt(br);if(n===e)return++br,i(Dr,r);if(92===n){n=dr.charCodeAt(++br);var a=/^[0-7]+/.exec(dr.slice(br,br+3));for(a&&(a=a[0]);a&&parseInt(a,8)>255;)a=a.slice(0,a.length-1);if(\"0\"===a&&(a=null),++br,a)Tr&&t(br-2,\"Octal literal in strict mode\"),r+=String.fromCharCode(parseInt(a,8)),br+=a.length-1;else switch(n){case 110:r+=\"\\n\";break;case 114:r+=\"\\r\";break;case 120:r+=String.fromCharCode(S(2));break;case 117:r+=String.fromCharCode(S(4));break;case 85:r+=String.fromCharCode(S(8));break;case 116:r+=\"\t\";break;case 98:r+=\"\\b\";break;case 118:r+=\"\u000b\";break;case 102:r+=\"\\f\";break;case 48:r+=\"\\0\";break;case 13:10===dr.charCodeAt(br)&&++br;case 10:fr.locations&&(Sr=br,++Ar);break;default:r+=String.fromCharCode(n)}}else(13===n||10===n||8232===n||8233===n)&&t(yr,\"Unterminated string constant\"),r+=String.fromCharCode(n),++br}}function S(e){var r=w(16,e);return null===r&&t(yr,\"Bad character escape sequence\"),r}function I(){Bt=!1;for(var e,r=!0,n=br;;){var a=dr.charCodeAt(br);if(Yt(a))Bt&&(e+=dr.charAt(br)),++br;else{if(92!==a)break;Bt||(e=dr.slice(n,br)),Bt=!0,117!=dr.charCodeAt(++br)&&t(br,\"Expecting Unicode escape sequence \\\\uXXXX\"),++br;var o=S(4),i=String.fromCharCode(o);i||t(br-1,\"Invalid Unicode escape\"),(r?Qt(o):Yt(o))||t(br-4,\"Invalid Unicode escape\"),e+=i}r=!1}return Bt?e:dr.slice(n,br)}function L(){var e=I(),r=Fr;return Bt||(Wt(e)?r=lt[e]:(fr.forbidReserved&&(3===fr.ecmaVersion?Mt:zt)(e)||Tr&&Xt(e))&&t(yr,\"The keyword '\"+e+\"' is reserved\")),i(r,e)}function U(){Ir=yr,Lr=gr,Ur=kr,g()}function R(e){if(Tr=e,br=Lr,fr.locations)for(;Sr>br;)Sr=dr.lastIndexOf(\"\\n\",Sr-2)+1,--Ar;u(),g()}function V(){this.type=null,this.start=yr,this.end=null}function T(){this.start=xr,this.end=null,null!==hr&&(this.source=hr)}function q(){var e=new V;return fr.locations&&(e.loc=new T),fr.ranges&&(e.range=[yr,0]),e}function O(e){var r=new V;return r.start=e.start,fr.locations&&(r.loc=new T,r.loc.start=e.loc.start),fr.ranges&&(r.range=[e.range[0],0]),r}function j(e,r){return e.type=r,e.end=Lr,fr.locations&&(e.loc.end=Ur),fr.ranges&&(e.range[1]=Lr),e}function D(e){return fr.ecmaVersion>=5&&\"ExpressionStatement\"===e.type&&\"Literal\"===e.expression.type&&\"use strict\"===e.expression.value}function F(e){return wr===e?(U(),!0):void 0}function B(){return!fr.strictSemicolons&&(wr===Br||wr===ht||Gt.test(dr.slice(Lr,yr)))}function M(){F(yt)||B()||X()}function z(e){wr===e?U():X()}function X(){t(yr,\"Unexpected token\")}function N(e){\"Identifier\"!==e.type&&\"MemberExpression\"!==e.type&&t(e.start,\"Assigning to rvalue\"),Tr&&\"Identifier\"===e.type&&Nt(e.name)&&t(e.start,\"Assigning to \"+e.name+\" in strict mode\")}function W(e){Ir=Lr=br,fr.locations&&(Ur=new a),Rr=Tr=null,Vr=[],g();var r=e||q(),t=!0;for(e||(r.body=[]);wr!==Br;){var n=J();r.body.push(n),t&&D(n)&&R(!0),t=!1}return j(r,\"Program\")}function J(){(wr===wt||wr===Et&&\"/=\"==Cr)&&g(!0);var e=wr,r=q();switch(e){case Mr:case Nr:U();var n=e===Mr;F(yt)||B()?r.label=null:wr!==Fr?X():(r.label=lr(),M());for(var a=0;a<Vr.length;++a){var o=Vr[a];if(null==r.label||o.name===r.label.name){if(null!=o.kind&&(n||\"loop\"===o.kind))break;if(r.label&&n)break}}return a===Vr.length&&t(r.start,\"Unsyntactic \"+e.keyword),j(r,n?\"BreakStatement\":\"ContinueStatement\");case Wr:return U(),M(),j(r,\"DebuggerStatement\");case Pr:return U(),Vr.push(Zt),r.body=J(),Vr.pop(),z(tt),r.test=P(),M(),j(r,\"DoWhileStatement\");case _r:if(U(),Vr.push(Zt),z(mt),wr===yt)return $(r,null);if(wr===rt){var i=q();return U(),G(i,!0),j(i,\"VariableDeclaration\"),1===i.declarations.length&&F(ut)?_(r,i):$(r,i)}var i=K(!1,!0);return F(ut)?(N(i),_(r,i)):$(r,i);case Gr:return U(),cr(r,!0);case Kr:return U(),r.test=P(),r.consequent=J(),r.alternate=F(Hr)?J():null,j(r,\"IfStatement\");case Qr:return Rr||t(yr,\"'return' outside of function\"),U(),F(yt)||B()?r.argument=null:(r.argument=K(),M()),j(r,\"ReturnStatement\");case Yr:U(),r.discriminant=P(),r.cases=[],z(pt),Vr.push(en);for(var s,c;wr!=ht;)if(wr===zr||wr===Jr){var u=wr===zr;s&&j(s,\"SwitchCase\"),r.cases.push(s=q()),s.consequent=[],U(),u?s.test=K():(c&&t(Ir,\"Multiple default clauses\"),c=!0,s.test=null),z(gt)}else s||X(),s.consequent.push(J());return s&&j(s,\"SwitchCase\"),U(),Vr.pop(),j(r,\"SwitchStatement\");case Zr:return U(),Gt.test(dr.slice(Lr,yr))&&t(Lr,\"Illegal newline after throw\"),r.argument=K(),M(),j(r,\"ThrowStatement\");case et:if(U(),r.block=H(),r.handler=null,wr===Xr){var l=q();U(),z(mt),l.param=lr(),Tr&&Nt(l.param.name)&&t(l.param.start,\"Binding \"+l.param.name+\" in strict mode\"),z(vt),l.guard=null,l.body=H(),r.handler=j(l,\"CatchClause\")}return r.guardedHandlers=qr,r.finalizer=F($r)?H():null,r.handler||r.finalizer||t(r.start,\"Missing catch or finally clause\"),j(r,\"TryStatement\");case rt:return U(),G(r),M(),j(r,\"VariableDeclaration\");case tt:return U(),r.test=P(),Vr.push(Zt),r.body=J(),Vr.pop(),j(r,\"WhileStatement\");case nt:return Tr&&t(yr,\"'with' in strict mode\"),U(),r.object=P(),r.body=J(),j(r,\"WithStatement\");case pt:return H();case yt:return U(),j(r,\"EmptyStatement\");default:var f=Cr,d=K();if(e===Fr&&\"Identifier\"===d.type&&F(gt)){for(var a=0;a<Vr.length;++a)Vr[a].name===f&&t(d.start,\"Label '\"+f+\"' is already declared\");var p=wr.isLoop?\"loop\":wr===Yr?\"switch\":null;return Vr.push({name:f,kind:p}),r.body=J(),Vr.pop(),r.label=d,j(r,\"LabeledStatement\")}return r.expression=d,M(),j(r,\"ExpressionStatement\")}}function P(){z(mt);var e=K();return z(vt),e}function H(e){var r,t=q(),n=!0,a=!1;for(t.body=[],z(pt);!F(ht);){var o=J();t.body.push(o),n&&e&&D(o)&&(r=a,R(a=!0)),n=!1}return a&&!r&&R(!1),j(t,\"BlockStatement\")}function $(e,r){return e.init=r,z(yt),e.test=wr===yt?null:K(),z(yt),e.update=wr===vt?null:K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForStatement\")}function _(e,r){return e.left=r,e.right=K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForInStatement\")}function G(e,r){for(e.declarations=[],e.kind=\"var\";;){var n=q();if(n.id=lr(),Tr&&Nt(n.id.name)&&t(n.id.start,\"Binding \"+n.id.name+\" in strict mode\"),n.init=F(Ct)?K(!0,r):null,e.declarations.push(j(n,\"VariableDeclarator\")),!F(bt))break}return e}function K(e,r){var t=Q(r);if(!e&&wr===bt){var n=O(t);for(n.expressions=[t];F(bt);)n.expressions.push(Q(r));return j(n,\"SequenceExpression\")}return t}function Q(e){var r=Y(e);if(wr.isAssign){var t=O(r);return t.operator=Cr,t.left=r,U(),t.right=Q(e),N(r),j(t,\"AssignmentExpression\")}return r}function Y(e){var r=Z(e);if(F(kt)){var t=O(r);return t.test=r,t.consequent=K(!0),z(gt),t.alternate=K(!0,e),j(t,\"ConditionalExpression\")}return r}function Z(e){return er(rr(),-1,e)}function er(e,r,t){var n=wr.binop;if(null!=n&&(!t||wr!==ut)&&n>r){var a=O(e);a.left=e,a.operator=Cr,U(),a.right=er(rr(),n,t);var o=j(a,/&&|\\|\\|/.test(a.operator)?\"LogicalExpression\":\"BinaryExpression\");return er(o,r,t)}return e}function rr(){if(wr.prefix){var e=q(),r=wr.isUpdate;return e.operator=Cr,e.prefix=!0,Er=!0,U(),e.argument=rr(),r?N(e.argument):Tr&&\"delete\"===e.operator&&\"Identifier\"===e.argument.type&&t(e.start,\"Deleting local variable in strict mode\"),j(e,r?\"UpdateExpression\":\"UnaryExpression\")}for(var n=tr();wr.postfix&&!B();){var e=O(n);e.operator=Cr,e.prefix=!1,e.argument=n,N(n),U(),n=j(e,\"UpdateExpression\")}return n}function tr(){return nr(ar())}function nr(e,r){if(F(xt)){var t=O(e);return t.object=e,t.property=lr(!0),t.computed=!1,nr(j(t,\"MemberExpression\"),r)}if(F(ft)){var t=O(e);return t.object=e,t.property=K(),t.computed=!0,z(dt),nr(j(t,\"MemberExpression\"),r)}if(!r&&F(mt)){var t=O(e);return t.callee=e,t.arguments=ur(vt,!1),nr(j(t,\"CallExpression\"),r)}return e}function ar(){switch(wr){case ot:var e=q();return U(),j(e,\"ThisExpression\");case Fr:return lr();case Or:case Dr:case jr:var e=q();return e.value=Cr,e.raw=dr.slice(yr,gr),U(),j(e,\"Literal\");case it:case st:case ct:var e=q();return e.value=wr.atomValue,e.raw=wr.keyword,U(),j(e,\"Literal\");case mt:var r=xr,t=yr;U();var n=K();return n.start=t,n.end=gr,fr.locations&&(n.loc.start=r,n.loc.end=kr),fr.ranges&&(n.range=[t,gr]),z(vt),n;case ft:var e=q();return U(),e.elements=ur(dt,!0,!0),j(e,\"ArrayExpression\");case pt:return ir();case Gr:var e=q();return U(),cr(e,!1);case at:return or();default:X()}}function or(){var e=q();return U(),e.callee=nr(ar(),!0),e.arguments=F(mt)?ur(vt,!1):qr,j(e,\"NewExpression\")}function ir(){var e=q(),r=!0,n=!1;for(e.properties=[],U();!F(ht);){if(r)r=!1;else if(z(bt),fr.allowTrailingCommas&&F(ht))break;var a,o={key:sr()},i=!1;if(F(gt)?(o.value=K(!0),a=o.kind=\"init\"):fr.ecmaVersion>=5&&\"Identifier\"===o.key.type&&(\"get\"===o.key.name||\"set\"===o.key.name)?(i=n=!0,a=o.kind=o.key.name,o.key=sr(),wr!==mt&&X(),o.value=cr(q(),!1)):X(),\"Identifier\"===o.key.type&&(Tr||n))for(var s=0;s<e.properties.length;++s){var c=e.properties[s];if(c.key.name===o.key.name){var u=a==c.kind||i&&\"init\"===c.kind||\"init\"===a&&(\"get\"===c.kind||\"set\"===c.kind);u&&!Tr&&\"init\"===a&&\"init\"===c.kind&&(u=!1),u&&t(o.key.start,\"Redefinition of property\")}}e.properties.push(o)}return j(e,\"ObjectExpression\")}function sr(){return wr===Or||wr===Dr?ar():lr(!0)}function cr(e,r){wr===Fr?e.id=lr():r?X():e.id=null,e.params=[];var n=!0;for(z(mt);!F(vt);)n?n=!1:z(bt),e.params.push(lr());var a=Rr,o=Vr;if(Rr=!0,Vr=[],e.body=H(!0),Rr=a,Vr=o,Tr||e.body.body.length&&D(e.body.body[0]))for(var i=e.id?-1:0;i<e.params.length;++i){var s=0>i?e.id:e.params[i];if((Xt(s.name)||Nt(s.name))&&t(s.start,\"Defining '\"+s.name+\"' in strict mode\"),i>=0)for(var c=0;i>c;++c)s.name===e.params[c].name&&t(s.start,\"Argument name clash in strict mode\")}return j(e,r?\"FunctionDeclaration\":\"FunctionExpression\")}function ur(e,r,t){for(var n=[],a=!0;!F(e);){if(a)a=!1;else if(z(bt),r&&fr.allowTrailingCommas&&F(e))break;t&&wr===bt?n.push(null):n.push(K(!0))}return n}function lr(e){var r=q();return r.name=wr===Fr?Cr:e&&!fr.forbidReserved&&wr.keyword||X(),Er=!1,U(),j(r,\"Identifier\")}e.version=\"0.4.0\";var fr,dr,pr,hr;e.parse=function(e,t){return dr=String(e),pr=dr.length,r(t),o(),W(fr.program)};var mr=e.defaultOptions={ecmaVersion:5,strictSemicolons:!1,allowTrailingCommas:!0,forbidReserved:!1,locations:!1,onComment:null,ranges:!1,program:null,sourceFile:null},vr=e.getLineInfo=function(e,r){for(var t=1,n=0;;){Kt.lastIndex=n;var a=Kt.exec(e);if(!(a&&a.index<r))break;++t,n=a.index+a[0].length}return{line:t,column:r-n}};e.tokenize=function(e,t){function n(e){return g(e),a.start=yr,a.end=gr,a.startLoc=xr,a.endLoc=kr,a.type=wr,a.value=Cr,a}dr=String(e),pr=dr.length,r(t),o();var a={};return n.jumpTo=function(e,r){if(br=e,fr.locations){Ar=1,Sr=Kt.lastIndex=0;for(var t;(t=Kt.exec(dr))&&t.index<e;)++Ar,Sr=t.index+t[0].length}Er=r,u()},n};var br,yr,gr,xr,kr,wr,Cr,Er,Ar,Sr,Ir,Lr,Ur,Rr,Vr,Tr,qr=[],Or={type:\"num\"},jr={type:\"regexp\"},Dr={type:\"string\"},Fr={type:\"name\"},Br={type:\"eof\"},Mr={keyword:\"break\"},zr={keyword:\"case\",beforeExpr:!0},Xr={keyword:\"catch\"},Nr={keyword:\"continue\"},Wr={keyword:\"debugger\"},Jr={keyword:\"default\"},Pr={keyword:\"do\",isLoop:!0},Hr={keyword:\"else\",beforeExpr:!0},$r={keyword:\"finally\"},_r={keyword:\"for\",isLoop:!0},Gr={keyword:\"function\"},Kr={keyword:\"if\"},Qr={keyword:\"return\",beforeExpr:!0},Yr={keyword:\"switch\"},Zr={keyword:\"throw\",beforeExpr:!0},et={keyword:\"try\"},rt={keyword:\"var\"},tt={keyword:\"while\",isLoop:!0},nt={keyword:\"with\"},at={keyword:\"new\",beforeExpr:!0},ot={keyword:\"this\"},it={keyword:\"null\",atomValue:null},st={keyword:\"true\",atomValue:!0},ct={keyword:\"false\",atomValue:!1},ut={keyword:\"in\",binop:7,beforeExpr:!0},lt={\"break\":Mr,\"case\":zr,\"catch\":Xr,\"continue\":Nr,\"debugger\":Wr,\"default\":Jr,\"do\":Pr,\"else\":Hr,\"finally\":$r,\"for\":_r,\"function\":Gr,\"if\":Kr,\"return\":Qr,\"switch\":Yr,\"throw\":Zr,\"try\":et,\"var\":rt,\"while\":tt,\"with\":nt,\"null\":it,\"true\":st,\"false\":ct,\"new\":at,\"in\":ut,\"instanceof\":{keyword:\"instanceof\",binop:7,beforeExpr:!0},\"this\":ot,\"typeof\":{keyword:\"typeof\",prefix:!0,beforeExpr:!0},\"void\":{keyword:\"void\",prefix:!0,beforeExpr:!0},\"delete\":{keyword:\"delete\",prefix:!0,beforeExpr:!0}},ft={type:\"[\",beforeExpr:!0},dt={type:\"]\"},pt={type:\"{\",beforeExpr:!0},ht={type:\"}\"},mt={type:\"(\",beforeExpr:!0},vt={type:\")\"},bt={type:\",\",beforeExpr:!0},yt={type:\";\",beforeExpr:!0},gt={type:\":\",beforeExpr:!0},xt={type:\".\"},kt={type:\"?\",beforeExpr:!0},wt={binop:10,beforeExpr:!0},Ct={isAssign:!0,beforeExpr:!0},Et={isAssign:!0,beforeExpr:!0},At={binop:9,prefix:!0,beforeExpr:!0},St={postfix:!0,prefix:!0,isUpdate:!0},It={prefix:!0,beforeExpr:!0},Lt={binop:1,beforeExpr:!0},Ut={binop:2,beforeExpr:!0},Rt={binop:3,beforeExpr:!0},Vt={binop:4,beforeExpr:!0},Tt={binop:5,beforeExpr:!0},qt={binop:6,beforeExpr:!0},Ot={binop:7,beforeExpr:!0},jt={binop:8,beforeExpr:!0},Dt={binop:10,beforeExpr:!0};e.tokTypes={bracketL:ft,bracketR:dt,braceL:pt,braceR:ht,parenL:mt,parenR:vt,comma:bt,semi:yt,colon:gt,dot:xt,question:kt,slash:wt,eq:Ct,name:Fr,eof:Br,num:Or,regexp:jr,string:Dr};for(var Ft in lt)e.tokTypes[\"_\"+Ft]=lt[Ft];var Bt,Mt=n(\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\"),zt=n(\"class enum extends super const export import\"),Xt=n(\"implements interface let package private protected public static yield\"),Nt=n(\"eval arguments\"),Wt=n(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\"),Jt=/[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/,Pt=\"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\",Ht=\"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\",$t=new RegExp(\"[\"+Pt+\"]\"),_t=new RegExp(\"[\"+Pt+Ht+\"]\"),Gt=/[\\n\\r\\u2028\\u2029]/,Kt=/\\r\\n|[\\n\\r\\u2028\\u2029]/g,Qt=e.isIdentifierStart=function(e){return 65>e?36===e:91>e?!0:97>e?95===e:123>e?!0:e>=170&&$t.test(String.fromCharCode(e))},Yt=e.isIdentifierChar=function(e){return 48>e?36===e:58>e?!0:65>e?!1:91>e?!0:97>e?95===e:123>e?!0:e>=170&&_t.test(String.fromCharCode(e))},Zt={kind:\"loop\"},en={kind:\"switch\"}});\n\n\tvar binaryOperators = {\n\t\t'+': '__add',\n\t\t'-': '__subtract',\n\t\t'*': '__multiply',\n\t\t'/': '__divide',\n\t\t'%': '__modulo',\n\t\t'==': 'equals',\n\t\t'!=': 'equals'\n\t};\n\n\tvar unaryOperators = {\n\t\t'-': '__negate',\n\t\t'+': null\n\t};\n\n\tvar fields = Base.each(\n\t\t['add', 'subtract', 'multiply', 'divide', 'modulo', 'negate'],\n\t\tfunction(name) {\n\t\t\tthis['__' + name] = '#' + name;\n\t\t},\n\t\t{}\n\t);\n\tPoint.inject(fields);\n\tSize.inject(fields);\n\tColor.inject(fields);\n\n\tfunction __$__(left, operator, right) {\n\t\tvar handler = binaryOperators[operator];\n\t\tif (left && left[handler]) {\n\t\t\tvar res = left[handler](right);\n\t\t\treturn operator === '!=' ? !res : res;\n\t\t}\n\t\tswitch (operator) {\n\t\tcase '+': return left + right;\n\t\tcase '-': return left - right;\n\t\tcase '*': return left * right;\n\t\tcase '/': return left / right;\n\t\tcase '%': return left % right;\n\t\tcase '==': return left == right;\n\t\tcase '!=': return left != right;\n\t\t}\n\t}\n\n\tfunction $__(operator, value) {\n\t\tvar handler = unaryOperators[operator];\n\t\tif (handler && value && value[handler])\n\t\t\treturn value[handler]();\n\t\tswitch (operator) {\n\t\tcase '+': return +value;\n\t\tcase '-': return -value;\n\t\t}\n\t}\n\n\tfunction parse(code, options) {\n\t\treturn scope.acorn.parse(code, options);\n\t}\n\n\tfunction compile(code, url, options) {\n\t\tif (!code)\n\t\t\treturn '';\n\t\toptions = options || {};\n\t\turl = url || '';\n\n\t\tvar insertions = [];\n\n\t\tfunction getOffset(offset) {\n\t\t\tfor (var i = 0, l = insertions.length; i < l; i++) {\n\t\t\t\tvar insertion = insertions[i];\n\t\t\t\tif (insertion[0] >= offset)\n\t\t\t\t\tbreak;\n\t\t\t\toffset += insertion[1];\n\t\t\t}\n\t\t\treturn offset;\n\t\t}\n\n\t\tfunction getCode(node) {\n\t\t\treturn code.substring(getOffset(node.range[0]),\n\t\t\t\t\tgetOffset(node.range[1]));\n\t\t}\n\n\t\tfunction getBetween(left, right) {\n\t\t\treturn code.substring(getOffset(left.range[1]),\n\t\t\t\t\tgetOffset(right.range[0]));\n\t\t}\n\n\t\tfunction replaceCode(node, str) {\n\t\t\tvar start = getOffset(node.range[0]),\n\t\t\t\tend = getOffset(node.range[1]),\n\t\t\t\tinsert = 0;\n\t\t\tfor (var i = insertions.length - 1; i >= 0; i--) {\n\t\t\t\tif (start > insertions[i][0]) {\n\t\t\t\t\tinsert = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinsertions.splice(insert, 0, [start, str.length - end + start]);\n\t\t\tcode = code.substring(0, start) + str + code.substring(end);\n\t\t}\n\n\t\tfunction walkAST(node, parent) {\n\t\t\tif (!node)\n\t\t\t\treturn;\n\t\t\tfor (var key in node) {\n\t\t\t\tif (key === 'range' || key === 'loc')\n\t\t\t\t\tcontinue;\n\t\t\t\tvar value = node[key];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (var i = 0, l = value.length; i < l; i++)\n\t\t\t\t\t\twalkAST(value[i], node);\n\t\t\t\t} else if (value && typeof value === 'object') {\n\t\t\t\t\twalkAST(value, node);\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch (node.type) {\n\t\t\tcase 'UnaryExpression':\n\t\t\t\tif (node.operator in unaryOperators\n\t\t\t\t\t\t&& node.argument.type !== 'Literal') {\n\t\t\t\t\tvar arg = getCode(node.argument);\n\t\t\t\t\treplaceCode(node, '$__(\"' + node.operator + '\", '\n\t\t\t\t\t\t\t+ arg + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'BinaryExpression':\n\t\t\t\tif (node.operator in binaryOperators\n\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\tright = getCode(node.right),\n\t\t\t\t\t\tbetween = getBetween(node.left, node.right),\n\t\t\t\t\t\toperator = node.operator;\n\t\t\t\t\treplaceCode(node, '__$__(' + left + ','\n\t\t\t\t\t\t\t+ between.replace(new RegExp('\\\\' + operator),\n\t\t\t\t\t\t\t\t'\"' + operator + '\"')\n\t\t\t\t\t\t\t+ ', ' + right + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'UpdateExpression':\n\t\t\tcase 'AssignmentExpression':\n\t\t\t\tvar parentType = parent && parent.type;\n\t\t\t\tif (!(\n\t\t\t\t\t\tparentType === 'ForStatement'\n\t\t\t\t\t\t|| parentType === 'BinaryExpression'\n\t\t\t\t\t\t\t&& /^[=!<>]/.test(parent.operator)\n\t\t\t\t\t\t|| parentType === 'MemberExpression' && parent.computed\n\t\t\t\t)) {\n\t\t\t\t\tif (node.type === 'UpdateExpression') {\n\t\t\t\t\t\tvar arg = getCode(node.argument),\n\t\t\t\t\t\t\texp = '__$__(' + arg + ', \"' + node.operator[0]\n\t\t\t\t\t\t\t\t\t+ '\", 1)',\n\t\t\t\t\t\t\tstr = arg + ' = ' + exp;\n\t\t\t\t\t\tif (!node.prefix\n\t\t\t\t\t\t\t\t&& (parentType === 'AssignmentExpression'\n\t\t\t\t\t\t\t\t\t|| parentType === 'VariableDeclarator')) {\n\t\t\t\t\t\t\tif (getCode(parent.left || parent.id) === arg)\n\t\t\t\t\t\t\t\tstr = exp;\n\t\t\t\t\t\t\tstr = arg + '; ' + str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplaceCode(node, str);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (/^.=$/.test(node.operator)\n\t\t\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\t\t\tright = getCode(node.right);\n\t\t\t\t\t\t\treplaceCode(node, left + ' = __$__(' + left + ', \"'\n\t\t\t\t\t\t\t\t\t+ node.operator[0] + '\", ' + right + ')');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar sourceMap = null,\n\t\t\tbrowser = paper.browser,\n\t\t\tversion = browser.versionNumber,\n\t\t\tlineBreaks = /\\r\\n|\\n|\\r/mg;\n\t\tif (browser.chrome && version >= 30\n\t\t\t\t|| browser.webkit && version >= 537.76\n\t\t\t\t|| browser.firefox && version >= 23) {\n\t\t\tvar offset = 0;\n\t\t\tif (window.location.href.indexOf(url) === 0) {\n\t\t\t\tvar html = document.getElementsByTagName('html')[0].innerHTML;\n\t\t\t\toffset = html.substr(0, html.indexOf(code) + 1).match(\n\t\t\t\t\t\tlineBreaks).length + 1;\n\t\t\t}\n\t\t\tvar mappings = ['AAAA'];\n\t\t\tmappings.length = (code.match(lineBreaks) || []).length + 1 + offset;\n\t\t\tsourceMap = {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: url,\n\t\t\t\tnames:[],\n\t\t\t\tmappings: mappings.join(';AACA'),\n\t\t\t\tsourceRoot: '',\n\t\t\t\tsources: [url]\n\t\t\t};\n\t\t\tvar source = options.source || !url && code;\n\t\t\tif (source)\n\t\t\t\tsourceMap.sourcesContent = [source];\n\t\t}\n\t\twalkAST(parse(code, { ranges: true }));\n\t\tif (sourceMap) {\n\t\t\tcode = new Array(offset + 1).join('\\n') + code\n\t\t\t\t\t+ \"\\n//# sourceMappingURL=data:application/json;base64,\"\n\t\t\t\t\t+ (btoa(unescape(encodeURIComponent(\n\t\t\t\t\t\tJSON.stringify(sourceMap)))))\n\t\t\t\t\t+ \"\\n//# sourceURL=\" + (url || 'paperscript');\n\t\t}\n\t\treturn code;\n\t}\n\n\tfunction execute(code, scope, url, options) {\n\t\tpaper = scope;\n\t\tvar view = scope.getView(),\n\t\t\ttool = /\\s+on(?:Key|Mouse)(?:Up|Down|Move|Drag)\\b/.test(code)\n\t\t\t\t\t? new Tool()\n\t\t\t\t\t: null,\n\t\t\ttoolHandlers = tool ? tool._events : [],\n\t\t\thandlers = ['onFrame', 'onResize'].concat(toolHandlers),\n\t\t\tparams = [],\n\t\t\targs = [],\n\t\t\tfunc;\n\t\tcode = compile(code, url, options);\n\t\tfunction expose(scope, hidden) {\n\t\t\tfor (var key in scope) {\n\t\t\t\tif ((hidden || !/^_/.test(key)) && new RegExp('([\\\\b\\\\s\\\\W]|^)'\n\t\t\t\t\t\t+ key.replace(/\\$/g, '\\\\$') + '\\\\b').test(code)) {\n\t\t\t\t\tparams.push(key);\n\t\t\t\t\targs.push(scope[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\texpose({ __$__: __$__, $__: $__, paper: scope, view: view, tool: tool },\n\t\t\t\ttrue);\n\t\texpose(scope);\n\t\thandlers = Base.each(handlers, function(key) {\n\t\t\tif (new RegExp('\\\\s+' + key + '\\\\b').test(code)) {\n\t\t\t\tparams.push(key);\n\t\t\t\tthis.push(key + ': ' + key);\n\t\t\t}\n\t\t}, []).join(', ');\n\t\tif (handlers)\n\t\t\tcode += '\\nreturn { ' + handlers + ' };';\n\t\tvar browser = paper.browser;\n\t\tif (browser.chrome || browser.firefox) {\n\t\t\tvar script = document.createElement('script'),\n\t\t\t\thead = document.head || document.getElementsByTagName('head')[0];\n\t\t\tif (browser.firefox)\n\t\t\t\tcode = '\\n' + code;\n\t\t\tscript.appendChild(document.createTextNode(\n\t\t\t\t'paper._execute = function(' + params + ') {' + code + '\\n}'\n\t\t\t));\n\t\t\thead.appendChild(script);\n\t\t\tfunc = paper._execute;\n\t\t\tdelete paper._execute;\n\t\t\thead.removeChild(script);\n\t\t} else {\n\t\t\tfunc = Function(params, code);\n\t\t}\n\t\tvar res = func.apply(scope, args) || {};\n\t\tBase.each(toolHandlers, function(key) {\n\t\t\tvar value = res[key];\n\t\t\tif (value)\n\t\t\t\ttool[key] = value;\n\t\t});\n\t\tif (view) {\n\t\t\tif (res.onResize)\n\t\t\t\tview.setOnResize(res.onResize);\n\t\t\tview.emit('resize', {\n\t\t\t\tsize: view.size,\n\t\t\t\tdelta: new Point()\n\t\t\t});\n\t\t\tif (res.onFrame)\n\t\t\t\tview.setOnFrame(res.onFrame);\n\t\t\tview.update();\n\t\t}\n\t}\n\n\tfunction loadScript(script) {\n\t\tif (/^text\\/(?:x-|)paperscript$/.test(script.type)\n\t\t\t\t&& PaperScope.getAttribute(script, 'ignore') !== 'true') {\n\t\t\tvar canvasId = PaperScope.getAttribute(script, 'canvas'),\n\t\t\t\tcanvas = document.getElementById(canvasId),\n\t\t\t\tsrc = script.src || script.getAttribute('data-src'),\n\t\t\t\tasync = PaperScope.hasAttribute(script, 'async'),\n\t\t\t\tscopeAttribute = 'data-paper-scope';\n\t\t\tif (!canvas)\n\t\t\t\tthrow new Error('Unable to find canvas with id \"'\n\t\t\t\t\t\t+ canvasId + '\"');\n\t\t\tvar scope = PaperScope.get(canvas.getAttribute(scopeAttribute))\n\t\t\t\t\t\t|| new PaperScope().setup(canvas);\n\t\t\tcanvas.setAttribute(scopeAttribute, scope._id);\n\t\t\tif (src) {\n\t\t\t\tHttp.request('get', src, function(code) {\n\t\t\t\t\texecute(code, scope, src);\n\t\t\t\t}, async);\n\t\t\t} else {\n\t\t\t\texecute(script.innerHTML, scope, script.baseURI);\n\t\t\t}\n\t\t\tscript.setAttribute('data-paper-ignore', 'true');\n\t\t\treturn scope;\n\t\t}\n\t}\n\n\tfunction loadAll() {\n\t\tBase.each(document.getElementsByTagName('script'), loadScript);\n\t}\n\n\tfunction load(script) {\n\t\treturn script ? loadScript(script) : loadAll();\n\t}\n\n\tif (document.readyState === 'complete') {\n\t\tsetTimeout(loadAll);\n\t} else {\n\t\tDomEvent.add(window, { load: loadAll });\n\t}\n\n\treturn {\n\t\tcompile: compile,\n\t\texecute: execute,\n\t\tload: load,\n\t\tparse: parse\n\t};\n\n}).call(this);\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n","/* ========================================================================\n * Bootstrap: transition.js v3.3.5\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: alert.js v3.3.5\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.5'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: button.js v3.3.5\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.5'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target)\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"]') || $(e.target).is('input[type=\"checkbox\"]'))) e.preventDefault()\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: carousel.js v3.3.5\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.5'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: collapse.js v3.3.5\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.5'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: dropdown.js v3.3.5\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.5'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger('shown.bs.dropdown', relatedTarget)\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: modal.js v3.3.5\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.5'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element.addClass('in')\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $(document.createElement('div'))\n        .addClass('modal-backdrop ' + animate)\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tooltip.js v3.3.5\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.5'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: popover.js v3.3.5\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.5'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.5\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.5'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tab.js v3.3.5\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element)\n    // jscs:enable requireDollarBeforejQueryAssignment\n  }\n\n  Tab.VERSION = '3.3.5'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: affix.js v3.3.5\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.5'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n"],"sourceRoot":"assets/scripts/"}