{"version":3,"sources":["../bower_components/d3/d3.js","../bower_components/paper/dist/paper-full.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/transition.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/alert.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/button.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/carousel.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/collapse.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/dropdown.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/modal.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/tooltip.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/popover.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/scrollspy.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/tab.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/affix.js","../assets/scripts/main.js"],"names":["d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","length","mid","right","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","this","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","i","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","call","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","define","amd","module","exports","paper","undefined","Base","inject","dest","src","beans","preserve","val","describe","bean","isFunc","res","prev","beansNames","isPlainObject","writable","configurable","hidden","part","obj","iter","getLength","forIn","props","exclude","proto","getOwnPropertyDescriptor","__lookupGetter__","__lookupSetter__","_define","desc","__defineGetter__","__defineSetter__","statics","extend","initialize","clone","constructor","pick","_id","_class","_name","Formatter","instance","getClassName","exportJSON","options","toJSON","serialize","_set","dontCheck","_filtering","obj1","obj2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","definitions","references","item","ref","_serialize","_compact","deserialize","_data","_isDictionary","isRoot","isDictionary","importJSON","isTarget","Item","Layer","items","amount","_index","removed","capitalize","str","camelize","all","chr","hyphenate","Emitter","func","types","_eventTypes","handlers","_callbacks","install","uninstall","once","emit","responds","attach","detach","fire","_installEvents","events","_events","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","projects","tools","palettes","_scopes","support","ctx","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","browser","agent","platform","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","setup","element","Project","activate","handleAttribute","el","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","EPSILON","MACHINE_EPSILON","TOLERANCE","CURVETIME_EPSILON","GEOMETRIC_EPSILON","WINDING_EPSILON","TRIGONOMETRIC_EPSILON","CLIPPING_EPSILON","KAPPA","isZero","integrate","Ax","findRoot","df","tolerance","solveQuadratic","roots","eMin","eMax","gmC","mult","LOG10E","Q","solveCubic","qd","tmp","ec","UID","_pools","pool","arg0","arg1","hasY","setAngle","setLength","_angle","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","div","dot","getQuadrant","getDirectedAngle","getDistance","squared","normalize","subtract","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","isClose","isCollinear","isColinear","isOrthogonal","op","LinkedPoint","owner","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","getTop","setTop","getRight","setRight","getBottom","setBottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","unite","include","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","shear","toRadians","concatenate","a2","b2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","p1x","p1y","v1x","v1y","p2x","p2y","v2x","v2y","u1","u2","epsilon","uMin","uMax","vx","vy","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","draw","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","strokeWidth","_drawSelection","Symbol","dontCenter","setDefinition","_definition","flags","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","PlacedSymbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","setParent","_installEvent","_uninstallEvent","onFrame","_animateItem","onLoad","fontSize","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","_children","namedChildren","_namedChildren","orig","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","_updateBoundsCache","setBounds","cache","cached","_internal","_boundsCache","ids","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","includeMatrix","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","Path","getIntersections","checkBounds","pt","tolerancePadding","guides","parentTotalMatrix","_totalMatrix","totalMatrix","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matchObject","firstOnly","overlapping","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","namedArray","notifyParent","replaceWith","reverseChildren","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isSibling","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","fillStyle","toCanvasStyle","getStrokeWidth","strokeStyle","lineWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","getViewMatrix","globalMatrix","mainCtx","itemOffset","prevOffset","normalBlend","nativeBlend","direct","dontStart","_canComposite","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","process","_isUpdated","CompoundPath","updated","_drawSelected","getSelectedColor","half","beginPath","stroke","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","kappa","bezierCurveTo","getWindingRule","getCornerCenter","halfSize","dir","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","crossOrigin","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","_crossOrigin","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","toDataURL","loaded","getElementById","Image","DomEvent","getCrossOrigin","setCrossOrigin","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","Color","getPixel","setPixel","components","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","hasHandles","_point","_handleIn","_handleOut","_path","curves","_curves","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","clearHandles","_selectionState","state","oldState","flag","getPath","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","getNext","getPrevious","isFirst","isLast","inX","inY","reversed","removeSegment","Curve","arg6","arg7","seg1","seg2","handle1","handle2","segment1","segment2","_segment2","getPoint1","getHandle1","getHandle2","getPoint2","_length","setPoint1","setPoint2","setHandle1","setHandle2","getSegment1","getSegment2","getPoints","getLine","getPart","getPartLength","_getIntersections","_getParameter","isParameter","parameter","getParameterAt","_setHandles","tMin","tMax","subdivide","setHandles","h2","c1x","c1y","c2x","c2y","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","geomEpsilon","getNearestParameter","refine","dist","minDist","minT","isStraight","flip","isFlatEnough","ux","uy","h1x","h1y","h2x","h2y","_addBounds","v3","isLinear","third","isHorizontal","getTangentAt","isVertical","getLocationAt","getLocationOf","getOffsetOf","loc","getOffset","getNearestLocation","getNearestPoint","evaluateMethods","getLengthIntegrand","getIterations","evaluate","normalized","len","ds","rangeLength","guess","getTangent","getWeightedTangent","getNormal","getWeightedNormal","getCurvature","addLocation","locations","overlap","startConnected","endConnected","renormalize","loc1","loc2","_intersection","addCurveIntersections","oldTDiff","recursion","tMinClip","tMaxClip","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","getConvexHull","clipConvexHull","tDiff","tMinNew","tMaxNew","dq0","dq1","dq2","dq3","dist1","dist2","distRatio","hullTop","hullBottom","clipConvexHullPart","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rvc","tc","pc","tl","pl","addLineIntersection","_getSelfIntersection","c1p1x","c1p1y","c1p2x","c1p2y","c2p1x","c2p1y","c2p2x","c2p2y","c1s1x","c1s1y","c1s2x","c1s2y","c2s1x","c2s1y","c2s2x","c2s2y","overlaps","getOverlaps","straight1","straight2","straight","c1p1","c1p2","c2p1","c2p2","side1","side2","edgeSum","tSplit","maxCurvature","curvature","getCurvatureAt","getLineLengthSquared","timeEpsilon","l2","o1","o2","_overlap","_distance","_setCurve","_parameter","getPointAt","_next","_prev","_version","_curve","_segment","_setSegment","getSegment","getParameter","trySegment","_offset","getCurveOffset","getIntersection","_ignoreOther","diff","isTouching","inter","curve1","curve2","isCrossing","isInRange","c4","c3","a3","a4","isOverlap","search","found","path1","path2","expanded","_returnFirst","matrix1","matrix2","curves1","curves2","length1","length2","values2","values1","getCrossings","setPathData","getCoord","relative","control","command","cubicCurveTo","quadraticCurveTo","arcTo","_getWinding","setSegments","_clockwise","_area","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","addSegment","skipLine","curX","curY","outX","prevX","outY","prevY","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","last","isClockwise","setClockwise","clockwise","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","pos","simplify","fitter","PathFitter","fit","last1","last2","first2","first1","toShape","seg3","seg4","isArc","pt1","pt2","topCenter","shape","isCloseEnough","checkSegmentPoint","seg","anchor","strokePadding","checkSegmentPoints","addToArea","checkSegmentStroke","cap","numSegments","_addBevelJoin","_addSquareCap","hitStroke","hitFill","hitCurves","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","knots","f1","f2","ie","je","getCurrentSegment","moveBy","curveTo","through","middle","large","rxSq","rySq","xSq","ySq","throughSide","centerSide","ext","inc","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","processSegment","prevCoords","addRound","joinBounds","addJoin","addCap","phi","addPoint","normal1","getNormalAt","normal2","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","createPath","createEllipse","ellipseSegments","getBottomLeft","tr","getTopRight","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","getCurrentPath","check","preparePath","resolve","resolveCrossings","reorient","finishBoolean","computeBoolean","operation","collect","monoCurves","_getMonoCurves","computeOpenBoolean","_path1","_path2","intersections","divideLocations","propagateWinding","_winding","tracePaths","addPath","sub","linkIntersections","prevCurve","prevT","noHandles","clearSegments","origT","getWinding","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","startCounted","slope","counted","totalLength","windingSum","curveLength","isValid","adjusted","_visited","operator","overlapWinding","isStart","otherStart","findBestIntersection","strict","nextSeg","nextInter","findStartSegment","operators",1,2,"finished","firstSegment","console","crossings","insertCurve","handleCurve","getInteriorPoint","xIntercepts","counters","maxRecursion","addCurve","computeParts","maxT","minDifference","halfT","prevVal","prevLen","weighted","fitCubic","tan1","tan2","uPrime","chordLengthParameterize","maxError","parametersInOrder","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","b3","alpha1","alpha2","detC0C1","detC0X","detXC1","segLength","eps","degree","maxDist","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","leading","getLeading","font","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","fromCSS","colorCache","colorCtx","hsb","gradient","componentParsers","hsbIndices","converters","rgb-hsb","delta","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","hasOverlap","parser","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","canvasGradient","_stops","destination","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontFamily","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","getStyles","doc","viewport","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","targetTouches","getTarget","srcElement","getRelatedTarget","toElement","stopPropagation","requestAnimationFrame","handleCallbacks","callbacks","focused","nativeRequest","requested","focus","blur","setInterval","getCanvasSize","_element","_pixelRatio","devicePixelRatio","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","_windowEvents","setViewSize","_setViewSize","Stats","_stats","stats","domElement","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","_time","_count","_requestFrame","_requested","_handleFrame","_before","_handlingFrame","animate","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","isVisible","projectToView","viewToProject","CanvasView","tempFocus","handleMouseMove","_handleEvent","tool","prevFocus","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","mouseFlags","mousedrag","doubleclick","_eventCounters","HTMLCanvasElement","deviceRatio","backingStoreRatio","firefox","temp","prevFont","measureText","callEvent","lastPoint","mouseEvent","MouseEvent","isStopped","downPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","handleKey","charCode","specialKey","specialKeys","charCodeMap","mac","commandFixMap","downCode",8,9,13,16,17,18,19,20,27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","which","keypress","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","async","ActiveXObject","canvases","getLum","setLum","dg","mn","lmn","ln","mxl","getSat","setSat","md","sg","sb","sa","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","average","negation","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","lookup","attribute","toSVG","fromSVG","exportFilter","SVGNamespaces","href","setAttributes","attrs","tag","getTransform","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","embedImages","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","gradientUnits","stopColor","stop-color","exportText","applyStyle","visibility","svgs","exportDefinitions","defs","firstChild","XMLSerializer","serializeToString","exporter","exporters","onExport","setOptions","xmlns:xlink","getValue","allowNull","convertValue","importGroup","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","applyTransform","transforms","applyOpacity","styles","attributes","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","importers","onImport","expandShapes","#document","clippath","polyline","lineargradient","radialgradient","use","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","__$__","handler","binaryOperators","$__","unaryOperators","acorn","compile","insertions","insertion","getCode","getBetween","replaceCode","walkAST","argument","between","parentType","computed","sourceMap","lineBreaks","getElementsByTagName","substr","mappings","file","sourceRoot","sources","sourcesContent","btoa","unescape","encodeURIComponent","expose","params","toolHandlers","script","head","createTextNode","_execute","onResize","setOnResize","setOnFrame","loadScript","canvasId","scopeAttribute","baseURI","loadAll","fr","mr","hr","sourceFile","vr","column","SyntaxError","raisedAt","Ar","Sr","Er","gr","kr","wr","Cr","beforeExpr","onComment","Kt","pr","Jt","E","xt","Et","wt","Dt","Lt","Ut","Rt","Tt","Vt","Gt","Lr","St","At","jt","Ot","qt","Ct","It","mt","vt","yt","bt","ft","ht","gt","kt","yr","xr","Br","Qt","$t","jr","Or","Tr","Dr","Bt","Yt","Fr","Wt","lt","forbidReserved","ecmaVersion","Mt","zt","Xt","Ir","Ur","V","T","O","expression","strictSemicolons","Nt","Rr","Vr","J","Mr","Nr","label","lr","kind","keyword","Wr","Pr","Zt","tt","_r","declarations","ut","K","Gr","Kr","consequent","alternate","Hr","Qr","Yr","discriminant","cases","en","zr","Jr","Zr","et","block","Xr","guard","guardedHandlers","qr","finalizer","$r","nt","isLoop","init","expressions","isAssign","er","rr","binop","isUpdate","postfix","nr","callee","ur","ot","it","st","ct","atomValue","elements","ir","at","or","allowTrailingCommas","program","defaultOptions","getLineInfo","tokenize","startLoc","endLoc","jumpTo","break","case","catch","continue","debugger","do","else","finally","for","function","if","return","switch","throw","try","var","while","with","null","new","instanceof","typeof","void","delete","tokTypes","bracketL","bracketR","braceL","braceR","parenL","parenR","semi","colon","question","slash","eq","eof","num","regexp","Ft","Pt","Ht","_t","isIdentifierStart","isIdentifierChar","+","*","/","==","!=","transitionEnd","transEndEventNames","WebkitTransition","MozTransition","OTransition","fn","emulateTransitionEnd","$el","one","trigger","special","bsTransitionEnd","bindType","delegateType","is","handleObj","jQuery","Plugin","$this","Alert","dismiss","close","VERSION","TRANSITION_DURATION","removeElement","$parent","closest","isDefaultPrevented","removeClass","hasClass","alert","Constructor","noConflict","Button","toggle","setState","$element","DEFAULTS","isLoading","loadingText","resetText","proxy","addClass","removeAttr","$input","toggleClass","button","$btn","Carousel","action","slide","cycle","$indicators","paused","sliding","$active","$items","keyboard","tagName","clearInterval","getItemIndex","getItemForDirection","activeIndex","willWrap","itemIndex","$next","isCycling","slideEvent","$nextIndicator","slidEvent","offsetWidth","carousel","clickHandler","$target","slideIndex","$carousel","getTargetFromTrigger","$trigger","Collapse","transitioning","addAriaAndCollapsedClass","hasWidth","show","activesData","actives","startEvent","scrollSize","camelCase","hide","offsetHeight","isOpen","collapse","clearMenus","backdrop","Dropdown","insertAfter","dropdown","_relatedTarget","Modal","$body","$dialog","$backdrop","isShown","originalBodyPad","scrollbarWidth","ignoreBackdropClick","remote","BACKDROP_TRANSITION_DURATION","checkScrollbar","setScrollbar","escape","appendTo","adjustDialog","enforceFocus","hideModal","handleUpdate","resetAdjustments","resetScrollbar","removeBackdrop","doAnimate","currentTarget","callbackRemove","modalIsOverflowing","scrollHeight","css","paddingLeft","bodyIsOverflowing","paddingRight","fullWindowWidth","documentElementRect","measureScrollbar","bodyPad","scrollDiv","className","modal","showEvent","Tooltip","enabled","timeout","hoverState","inState","animation","placement","title","$viewport","isFunction","hover","triggers","eventIn","eventOut","leave","_options","fixTitle","getDefaults","getDelegateOptions","tip","isInStateTrue","hasContent","inDom","$tip","tipId","getUID","autoToken","autoPlace","actualWidth","actualHeight","orgPlacement","viewportDim","calculatedOffset","getCalculatedOffset","applyPlacement","prevHoverState","marginTop","marginLeft","setOffset","using","getViewportAdjustedDelta","arrowDelta","arrowOffsetPosition","replaceArrow","arrow","getTitle","$e","isBody","elRect","elOffset","outerDims","viewportPadding","viewportDimensions","topEdgeOffset","bottomEdgeOffset","leftEdgeOffset","rightEdgeOffset","$arrow","enable","disable","toggleEnabled","destroy","removeData","tooltip","Popover","popover","ScrollSpy","$scrollElement","activeTarget","refresh","getScrollHeight","offsetMethod","offsetBase","isWindow","$href","maxScroll","parents","parentsUntil","scrollspy","$spy","Tab","$ul","$previous","hideEvent","tab","Affix","checkPosition","checkPositionWithEventLoop","affixed","unpin","pinnedOffset","RESET","getState","offsetTop","offsetBottom","targetHeight","initializing","colliderTop","colliderHeight","getPinnedOffset","affix","affixType","Sage","common","finalize","home","about_us","UTIL","funcname","loadEvents","classnm","ready"],"mappings":"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","file":"main.js","sourcesContent":["!function() {\n  var d3 = {\n    version: \"3.5.9\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.start({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();","/*!\n * Paper.js v0.9.25 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Sun Oct 25 11:23:38 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc && !val.base\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && !(exclude && exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor,\n\t\t\t\tproto;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tproto = ctor.prototype = create(this.prototype);\n\t\t\tdefine(proto, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\tif (arguments.length)\n\t\t\t\tthis.inject.apply(ctor, arguments);\n\t\t\tctor.base = base;\n\t\t\treturn ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function(a, b) {\n\t\t\t\treturn a !== undefined ? a : b;\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar keys = Object.keys(props._filtering || props);\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tif (!(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (obj1 && obj2\n\t\t\t\t\t&& typeof obj1 === 'object' && typeof obj2 === 'object') {\n\t\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\t\tvar length = obj1.length;\n\t\t\t\t\tif (length !== obj2.length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tif (!Base.equals(obj1[length], obj2[length]))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar keys = Object.keys(obj1),\n\t\t\t\t\t\tlength = keys.length;\n\t\t\t\t\tif (length !== Object.keys(obj2).length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tvar key = keys[length];\n\t\t\t\t\t\tif (!(obj2.hasOwnProperty(key)\n\t\t\t\t\t\t\t\t&& Base.equals(obj1[key], obj2[key])))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tvar keys = Object.keys(obj);\n\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\tres[key] = Base.serialize(obj[key], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\t}\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data, _isDictionary) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (json.length == 1 && /^#/.test(type))\n\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\ttype = Base.exports[type];\n\t\t\t\tres = [];\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data,\n\t\t\t\t\t\t\tisDictionary));\n\t\t\t\tif (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar types = this._eventTypes,\n\t\t\t\tentry = types && types[type],\n\t\t\t\thandlers = this._callbacks = this._callbacks || {};\n\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\thandlers.push(func);\n\t\t\t\tif (entry && entry.install && handlers.length === 1)\n\t\t\t\t\tentry.install.call(this, type);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar types = this._eventTypes,\n\t\t\tentry = types && types[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry && entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\thandlers = handlers.slice();\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false) {\n\t\t\t\tif (event && event.stop)\n\t\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar types = this._eventTypes,\n\t\t\t\t\tentry = types && types[type],\n\t\t\t\t\tfunc = entry && entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar agent = navigator.userAgent.toLowerCase(),\n\t\t\t\tplatform = (/(win)/.exec(agent)\n\t\t\t\t\t\t|| /(mac)/.exec(agent)\n\t\t\t\t\t\t|| /(linux)/.exec(agent)\n\t\t\t\t\t\t|| [])[0],\n\t\t\t\tbrowser = proto.browser = { platform: platform };\n\t\t\tif (platform)\n\t\t\t\tbrowser[platform] = true;\n\t\t\tagent.replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: \"0.9.25\",\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\tfunction clip(value, min, max) {\n\t\treturn value < min ? min : value > max ? max : value;\n\t}\n\n\treturn {\n\t\tTOLERANCE: 1e-6,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tCURVETIME_EPSILON: 4e-7,\n\t\tGEOMETRIC_EPSILON: 2e-7,\n\t\tWINDING_EPSILON: 2e-7,\n\t\tTRIGONOMETRIC_EPSILON: 1e-7,\n\t\tCLIPPING_EPSILON: 1e-7,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn val >= -EPSILON && val <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\teMin = min - EPSILON,\n\t\t\t\teMax = max + EPSILON,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= -2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (D !== 0 && abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar gmC = pow(abs(a * b * c), 1 / 3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\tvar mult = pow(10,\n\t\t\t\t\t\t\tabs(Math.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\tif (abs(B) < EPSILON)\n\t\t\t\t\treturn abs(c) < EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else if (D >= -MACHINE_EPSILON) {\n\t\t\t\tvar Q = D < 0 ? 0 : sqrt(D),\n\t\t\t\t\tR = b + (b < 0 ? -Q : Q);\n\t\t\t\tif (R === 0) {\n\t\t\t\t\tx1 = c / a;\n\t\t\t\t\tx2 = -x1;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = R / a;\n\t\t\t\t\tx2 = c / R;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 > eMin && x1 < eMax))\n\t\t\t\troots[count++] = min == null ? x1 : clip(x1, min, max);\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 > eMin && x2 < eMax))\n\t\t\t\troots[count++] = min == null ? x2 : clip(x2, min, max);\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx, b1, c2;\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (abs(d) < EPSILON) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x > min - EPSILON && x < max + EPSILON))\n\t\t\t\troots[count++] = min == null ? x : clip(x, min, max);\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar UID = {\n\t_id: 1,\n\t_pools: {},\n\n\tget: function(ctor) {\n\t\tif (ctor) {\n\t\t\tvar name = ctor._class,\n\t\t\t\tpool = this._pools[name];\n\t\t\tif (!pool)\n\t\t\t\tpool = this._pools[name] = { _id: 1 };\n\t\t\treturn pool._id++;\n\t\t} else {\n\t\t\treturn this._id++;\n\t\t}\n\t}\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * cos - point.y * sin,\n\t\t\tpoint.x * sin + point.y * cos\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\ttolerance = Base.read(arguments);\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisCollinear: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isCollinear(this.x, this.y, point.x, point.y);\n\t},\n\n\tisColinear: '#isCollinear',\n\n\tisOrthogonal: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isOrthogonal(this.x, this.y, point.x, point.y);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tscale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n\t\treturn new Point(\n\t\t\tpoint.x * scale,\n\t\t\tpoint.y * scale\n\t\t);\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t},\n\n\t\tisCollinear: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * y2 - y1 * x2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-7;\n\t\t},\n\n\t\tisOrthogonal: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * x2 + y1 * y2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-7;\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n},\nnew function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = min.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point, isInfinite) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true, isInfinite);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tisCollinear: function(line) {\n\t\treturn Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tisOrthogonal: function(line) {\n\t\treturn Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tstatics: {\n\t\tintersect: function(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tv1x -= p1x;\n\t\t\t\tv1y -= p1y;\n\t\t\t\tv2x -= p2x;\n\t\t\t\tv2y -= p2y;\n\t\t\t}\n\t\t\tvar cross = v1x * v2y - v1y * v2x;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = p1x - p2x,\n\t\t\t\t\tdy = p1y - p2y,\n\t\t\t\t\tu1 = (v2x * dy - v2y * dx) / cross,\n\t\t\t\t\tu2 = (v1x * dy - v1y * dx) / cross,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\tuMin = -epsilon,\n\t\t\t\t\tuMax = 1 + epsilon;\n\t\t\t\tif (isInfinite\n\t\t\t\t\t\t|| uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n\t\t\t\t\tif (!isInfinite) {\n\t\t\t\t\t\tu1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n\t\t\t\t\t}\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\tp1x + u1 * v1x,\n\t\t\t\t\t\t\tp1y + u1 * v1y);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector, isInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0 && !isInfinite) {\n\t\t\t\tccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n\t\t\t\tif (ccw >= 0 && ccw <= 1)\n\t\t\t\t\tccw = 0;\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn vx === 0 ? vy > 0 ? x - px : px - x\n\t\t\t\t : vy === 0 ? vx < 0 ? y - py : py - y\n\t\t\t\t : ((x-px) * vy - (y-py) * vx) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = UID.get();\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = UID.get();\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, project: true, parent: true },\n\t\t\t\t\ttrue);\n\t\treturn hasProps;\n\t},\n\n\t_events: Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\tfunction(name) {\n\t\t\tthis[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis.getView()._installEvent(type);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis.getView()._uninstallEvent(type);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.getView()._animateItem(this, true);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.getView()._animateItem(this, false);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLoad: {}\n\t\t}\n\t),\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tItem._updateBoundsCache(this, cacheItem);\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tItem._updateBoundsCache(this._parent || this._parentSymbol, cacheItem);\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_updateBoundsCache: function(parent, item) {\n\t\t\tif (parent) {\n\t\t\t\tvar id = item._id,\n\t\t\t\t\tref = parent._boundsCache = parent._boundsCache || {\n\t\t\t\t\t\tids: {},\n\t\t\t\t\t\tlist: []\n\t\t\t\t\t};\n\t\t\t\tif (!ref.ids[id]) {\n\t\t\t\t\tref.list.push(item);\n\t\t\t\t\tref.ids[id] = item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++){\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert, includeMatrix) {\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide'],\n\t\t\tchildren = this._children;\n\t\tcopy.setStyle(this._style);\n\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\tcopy.addChild(children[i].clone(false), true);\n\t\t}\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tif (includeMatrix !== false)\n\t\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy.setApplyMatrix(this._applyMatrix);\n\t\tcopy.setPivot(this._pivot);\n\t\tcopy.setSelected(this._selected);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(), null,\n\t\t\t\t_matrix || item._matrix, true).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 1e-6)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tvar type = typeof name;\n\t\tif (type === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (type === 'function') {\n\t\t\treturn name(this);\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param && typeof match === 'object') {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect = bounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: !!inside,\n\t\t\t\t\toverlapping: !!overlapping,\n\t\t\t\t\trect: rect,\n\t\t\t\t\tpath: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param && param.items,\n\t\t\t\trect = param && param.rect;\n\t\t\tmatrix = rect && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (rect) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!rect.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(param.inside && rect.contains(bounds))\n\t\t\t\t\t\t\t&& !(param.overlapping && (bounds.contains(rect)\n\t\t\t\t\t\t\t\t|| param.path.intersects(child, childMatrix))))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisSibling: function(item) {\n\t\treturn this._parent === item._parent;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio || 1,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2,\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = this._clone(new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t}), insert);\n\t\tif (paper.settings.applyMatrix)\n\t\t\tpath.setApplyMatrix(true);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tcrossOrigin: null,\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\tcopy._crossOrigin = this._crossOrigin;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\tcrossOrigin = this._crossOrigin,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\timage = document.getElementById(src) || new Image();\n\t\tif (crossOrigin)\n\t\t\timage.crossOrigin = crossOrigin;\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, { load: loaded });\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetCrossOrigin: function() {\n\t\treturn this._image && this._image.crossOrigin || this._crossOrigin || '';\n\t},\n\n\tsetCrossOrigin: function(crossOrigin) {\n\t\tthis._crossOrigin = crossOrigin;\n\t\tif (this._image)\n\t\t\tthis._image.crossOrigin = crossOrigin;\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif ('point' in arg0) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this._point, this._handleIn, this._handleOut]\n\t\t\t\t: this._point,\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\thasHandles: function() {\n\t\treturn !this._handleIn.isZero() || !this._handleOut.isZero();\n\t},\n\n\tclearHandles: function() {\n\t\tthis._handleIn.set(0, 0);\n\t\tthis._handleOut.set(0, 0);\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn this._index === 0;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._index === path._segments.length - 1 || false;\n\t},\n\n\treverse: function() {\n\t\tvar handleIn = this._handleIn,\n\t\t\thandleOut = this._handleOut,\n\t\t\tinX = handleIn._x,\n\t\t\tinY = handleIn._y;\n\t\thandleIn.set(handleOut._x, handleOut._y);\n\t\thandleOut.set(inX, inY);\n\t},\n\n\treversed: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length,\n\t\t\tseg1, seg2,\n\t\t\tpoint1, point2,\n\t\t\thandle1, handle2;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tseg1 = arg1;\n\t\t\tseg2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tseg1 = new Segment();\n\t\t\tseg2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tif ('segment1' in arg0) {\n\t\t\t\tseg1 = new Segment(arg0.segment1);\n\t\t\t\tseg2 = new Segment(arg0.segment2);\n\t\t\t} else if ('point1' in arg0) {\n\t\t\t\tpoint1 = arg0.point1;\n\t\t\t\thandle1 = arg0.handle1;\n\t\t\t\thandle2 = arg0.handle2;\n\t\t\t\tpoint2 = arg0.point2;\n\t\t\t} else if (Array.isArray(arg0)) {\n\t\t\t\tpoint1 = [arg0[0], arg0[1]];\n\t\t\t\tpoint2 = [arg0[6], arg0[7]];\n\t\t\t\thandle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n\t\t\t\thandle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n\t\t\t}\n\t\t} else if (count === 2) {\n\t\t\tseg1 = new Segment(arg0);\n\t\t\tseg2 = new Segment(arg1);\n\t\t} else if (count === 4) {\n\t\t\tpoint1 = arg0;\n\t\t\thandle1 = arg1;\n\t\t\thandle2 = arg2;\n\t\t\tpoint2 = arg3;\n\t\t} else if (count === 8) {\n\t\t\tpoint1 = [arg0, arg1];\n\t\t\tpoint2 = [arg6, arg7];\n\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t}\n\t\tthis._segment1 = seg1 || new Segment(point1, null, handle1);\n\t\tthis._segment2 = seg2 || new Segment(point2, handle2, null);\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this.getPoint1(), this.getHandle1(), this.getHandle2(),\n\t\t\t\t\tthis.getPoint2()]\n\t\t\t\t: [this.getPoint1(), this.getPoint2()],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn this._segment1._index === 0;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._segment1._index === path._curves.length - 1\n\t\t\t\t|| false;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null)\n\t\t\tthis._length = Curve.getLength(this.getValues(), 0, 1);\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetLine: function() {\n\t\treturn new Line(this._segment1._point, this._segment2._point);\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve._getIntersections(this.getValues(),\n\t\t\t\tcurve && curve !== this ? curve.getValues() : null,\n\t\t\t\tthis, curve, [], {});\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, _setHandles) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tres = null;\n\t\tif (parameter >= tMin && parameter <= tMax) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1],\n\t\t\t\tsetHandles = _setHandles || this.hasHandles(),\n\t\t\t\tsegment1 = this._segment1,\n\t\t\t\tsegment2 = this._segment2,\n\t\t\t\tpath = this._path;\n\t\t\tif (setHandles) {\n\t\t\t\tsegment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tsegment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\tsetHandles && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\tsetHandles && new Point(right[2] - x, right[3] - y));\n\t\t\tif (path) {\n\t\t\t\tpath.insert(segment1._index + 1, segment);\n\t\t\t\tres = this.getNext();\n\t\t\t} else {\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, segment2);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treversed: function() {\n\t\treturn new Curve(this._segment2.reversed(), this._segment1.reversed());\n\t},\n\n\tclearHandles: function() {\n\t\tthis._segment1._handleOut.set(0, 0);\n\t\tthis._segment2._handleIn.set(0, 0);\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, point) {\n\t\tvar p1 = new Point(v[0], v[1]),\n\t\t\tp2 = new Point(v[6], v[7]),\n\t\t\tepsilon = 1e-12,\n\t\t\tt = point.isClose(p1, epsilon) ? 0\n\t\t\t  : point.isClose(p2, epsilon) ? 1\n\t\t\t  : null;\n\t\tif (t !== null)\n\t\t\treturn t;\n\t\tvar coords = [point.x, point.y],\n\t\t\troots = [],\n\t\t\tgeomEpsilon = 2e-7;\n\t\tfor (var c = 0; c < 2; c++) {\n\t\t\tvar count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tt = roots[i];\n\t\t\t\tif (point.isClose(Curve.getPoint(v, t), geomEpsilon))\n\t\t\t\t\treturn t;\n\t\t\t}\n\t\t}\n\t\treturn point.isClose(p1, geomEpsilon) ? 0\n\t\t\t : point.isClose(p2, geomEpsilon) ? 1\n\t\t\t : null;\n\t},\n\n\tgetNearestParameter: function(v, point) {\n\t\tif (Curve.isStraight(v)) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tp2x = v[6], p2y = v[7],\n\t\t\t\tvx = p2x - p1x, vy = p2y - p1y,\n\t\t\t\tdet = vx * vx + vy * vy;\n\t\t\tif (det === 0)\n\t\t\t\treturn 0;\n\t\t\tvar u = ((point.x - p1x) * vx + (point.y - p1y) * vy) / det;\n\t\t\treturn u < 1e-12 ? 0\n\t\t\t\t : u > 0.999999999999 ? 1\n\t\t\t\t : Curve.getParameterOf(v,\n\t\t\t\t\tnew Point(p1x + u * vx, p1y + u * vy));\n\t\t}\n\n\t\tvar count = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(Curve.getPoint(v, t), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 4e-7) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\treturn minT;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tvar flip = from > to;\n\t\tif (flip) {\n\t\t\tvar tmp = from;\n\t\t\tfrom = to;\n\t\t\tto = tmp;\n\t\t}\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn flip\n\t\t\t\t? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]]\n\t\t\t\t: v;\n\t},\n\n\thasHandles: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn !(isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]));\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\th1x = (v[2] + p1x) / 2,\n\t\t\th1y = (v[3] + p1y) / 2,\n\t\t\th2x = (v[4] + v[6]) / 2,\n\t\t\th2y = (v[5] + v[7]) / 2;\n\t\treturn 6 * ((p1x - h1x) * (h1y + p1y)\n\t\t\t\t  + (h1x - h2x) * (h2y + h1y)\n\t\t\t\t  + (h2x - p2x) * (p2y + h2y)) / 10;\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(\n\t['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tvar path = this._path;\n\t\t\t\tbounds = this._bounds[name] = Path[name](\n\t\t\t\t\t\t[this._segment1, this._segment2], false,\n\t\t\t\t\t\tpath && path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each({\n\tisStraight: function(l, h1, h2) {\n\t\tif (h1.isZero() && h2.isZero()) {\n\t\t\treturn true;\n\t\t} else if (l.isZero()) {\n\t\t\treturn false;\n\t\t} else if (h1.isCollinear(l) && h2.isCollinear(l)) {\n\t\t\tvar div = l.dot(l),\n\t\t\t\tp1 = l.dot(h1) / div,\n\t\t\t\tp2 = l.dot(h2) / div;\n\t\t\treturn p1 >= 0 && p1 <= 1 && p2 <= 0 && p2 >= -1;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisLinear: function(l, h1, h2) {\n\t\tvar third = l.divide(3);\n\t\treturn h1.equals(third) && h2.negate().equals(third);\n\t}\n}, function(test, name) {\n\tthis[name] = function() {\n\t\tvar seg1 = this._segment1,\n\t\t\tseg2 = this._segment2;\n\t\treturn test(seg2._point.subtract(seg1._point),\n\t\t\t\tseg1._handleOut, seg2._handleIn);\n\t};\n\n\tthis.statics[name] = function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn test(new Point(p2x - p1x, p2y - p1y),\n\t\t\t\tnew Point(v[2] - p1x, v[3] - p1y),\n\t\t\t\tnew Point(v[4] - p2x, v[5] - p2y));\n\t};\n}, {\n\tstatics: {},\n\n\thasHandles: function() {\n\t\treturn !this._segment1._handleOut.isZero()\n\t\t\t\t|| !this._segment2._handleIn.isZero();\n\t},\n\n\tisCollinear: function(curve) {\n\t\treturn curve && this.isStraight() && curve.isStraight()\n\t\t\t\t&& this.getLine().isCollinear(curve.getLine());\n\t},\n\n\tisHorizontal: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).y)\n\t\t\t\t< 1e-7;\n\t},\n\n\tisVertical: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).x)\n\t\t\t\t< 1e-7;\n\t}\n}), {\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\treturn Curve.getParameterOf(this.getValues(), Point.read(arguments));\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar t = isParameter ? offset : this.getParameterAt(offset);\n\t\treturn t != null && t >= 0 && t <= 1\n\t\t\t\t? new CurveLocation(this, t)\n\t\t\t\t: null;\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tt = Curve.getNearestParameter(values, point),\n\t\t\tpt = Curve.getPoint(values, t);\n\t\treturn new CurveLocation(this, t, pt, null, point.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n},\nnew function() {\n\tvar methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent',\n\t\t'getWeightedNormal', 'getCurvature'];\n\treturn Base.each(methods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve[name](values, isParameter ? offset\n\t\t\t\t\t: Curve.getParameterAt(values, offset, 0));\n\t\t};\n\t}, {\n\t\tstatics: {\n\t\t\tevaluateMethods: methods\n\t\t}\n\t})\n},\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\tfunction evaluate(v, t, type, normalized) {\n\t\tif (t == null || t < 0 || t > 1)\n\t\t\treturn null;\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tMin || t > tMax)) {\n\t\t\tvar isZero = t < tMin;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tMin) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > tMax) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (normalized) {\n\t\t\t\t\tif (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n\t\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t\t}\n\t\t\t\t\tvar len = Math.sqrt(x * x + y * y);\n\t\t\t\t\tif (len) {\n\t\t\t\t\t\tx /= len;\n\t\t\t\t\t\ty /= len;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by,\n\t\t\t\t\t\td = Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t\tx = d !== 0 ? (x * y2 - y * x2) / d : 0;\n\t\t\t\t\ty = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t}\n\n\treturn { statics: {\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tif (a === 0 && b === 1 && Curve.isStraight(v)) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar abs = Math.abs,\n\t\t\t\tforward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (abs(offset - rangeLength) < 1e-12) {\n\t\t\t\treturn forward ? b : a;\n\t\t\t} else if (abs(offset) > rangeLength) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 32,\n\t\t\t\t\t1e-12);\n\t\t},\n\n\t\tgetPoint: function(v, t) {\n\t\t\treturn evaluate(v, t, 0, false);\n\t\t},\n\n\t\tgetTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, true);\n\t\t},\n\n\t\tgetWeightedTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, false);\n\t\t},\n\n\t\tgetNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, true);\n\t\t},\n\n\t\tgetWeightedNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, false);\n\t\t},\n\n\t\tgetCurvature: function(v, t) {\n\t\t\treturn evaluate(v, t, 3, false).x;\n\t\t}\n\t}};\n},\nnew function() {\n\n\tfunction addLocation(locations, param, v1, c1, t1, p1, v2, c2, t2, p2,\n\t\t\toverlap) {\n\t\tvar startConnected = param.startConnected,\n\t\t\tendConnected = param.endConnected,\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 == null)\n\t\t\tt1 = Curve.getParameterOf(v1, p1);\n\t\tif (t1 !== null && t1 >= (startConnected ? tMin : 0) &&\n\t\t\tt1 <= (endConnected ? tMax : 1)) {\n\t\t\tif (t2 == null)\n\t\t\t\tt2 = Curve.getParameterOf(v2, p2);\n\t\t\tif (t2 !== null && t2 >= (endConnected ? tMin : 0) &&\n\t\t\t\tt2 <= (startConnected ? tMax : 1)) {\n\t\t\t\tvar renormalize = param.renormalize;\n\t\t\t\tif (renormalize) {\n\t\t\t\t\tvar res = renormalize(t1, t2);\n\t\t\t\t\tt1 = res[0];\n\t\t\t\t\tt2 = res[1];\n\t\t\t\t}\n\t\t\t\tvar loc1 = new CurveLocation(c1, t1,\n\t\t\t\t\t\tp1 || Curve.getPoint(v1, t1), overlap),\n\t\t\t\t\tloc2 = new CurveLocation(c2, t2,\n\t\t\t\t\t\tp2 || Curve.getPoint(v2, t2), overlap),\n\t\t\t\t\tflip = loc1.getPath() === loc2.getPath()\n\t\t\t\t\t\t&& loc1.getIndex() > loc2.getIndex(),\n\t\t\t\t\tloc = flip ? loc2 : loc1,\n\t\t\t\t\tinclude = param.include;\n\t\t\t\tloc1._intersection = loc2;\n\t\t\t\tloc2._intersection = loc1;\n\t\t\t\tif (!include || include(loc)) {\n\t\t\t\t\tCurveLocation.insert(locations, loc, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addCurveIntersections(v1, v2, c1, c2, locations, param,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (++recursion >= 24)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\thull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\ttop = hull[0],\n\t\t\tbottom = hull[1],\n\t\t\ttMinClip,\n\t\t\ttMaxClip;\n\t\tif ((tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null ||\n\t\t\t(tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(),\n\t\t\t\tdMin, dMax)) == null)\n\t\t\treturn;\n\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\tvar tDiff = tMaxClip - tMinClip,\n\t\t\ttMinNew = tMin + (tMax - tMin) * tMinClip,\n\t\t\ttMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, c2, c1, locations, param,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, c2, c1, locations, param,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew)\n\t\t\t\t< 1e-7) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tv1 = c1.getValues();\n\t\t\tv2 = c2.getValues();\n\t\t\taddLocation(locations, param,\n\t\t\t\treverse ? v2 : v1, reverse ? c2 : c1, reverse ? t2 : t1, null,\n\t\t\t\treverse ? v1 : v2, reverse ? c1 : c2, reverse ? t1 : t2, null);\n\t\t} else if (tDiff > 1e-12) {\n\t\t\taddCurveIntersections(v2, v1, c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tdist1 = dq1 - (2 * dq0 + dq3) / 3,\n\t\t\tdist2 = dq2 - (dq0 + 2 * dq3) / 3,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t} else {\n\t\t\tvar distRatio = dist1 / dist2;\n\t\t\thull = [\n\t\t\t\tdistRatio >= 2 ? [p0, p1, p3]\n\t\t\t\t: distRatio <= .5 ? [p0, p2, p3]\n\t\t\t\t: [p0, p1, p2, p3],\n\t\t\t\t[p0, p3]\n\t\t\t];\n\t\t}\n\t\treturn (dist1 || dist2) < 0 ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold) {\n\t\t\t\treturn qy === threshold ? qx\n\t\t\t\t\t\t: px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\t}\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, c1, c2, locations, param) {\n\t\tvar flip = Curve.isStraight(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\tx * sin + y * cos);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tpc = Curve.getPoint(vc, tc),\n\t\t\t\ttl = Curve.getParameterOf(vl, pc);\n\t\t\tif (tl !== null) {\n\t\t\t\tvar pl = Curve.getPoint(vl, tl),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\tif (!param.endConnected || t2 > Numerical.CURVETIME_EPSILON) {\n\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\tv1, c1, t1, flip ? pl : pc,\n\t\t\t\t\t\t\tv2, c2, t2, flip ? pc : pl);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, c1, c2, locations, param) {\n\t\tvar pt = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (pt) {\n\t\t\taddLocation(locations, param, v1, c1, null, pt, v2, c2, null, pt);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\t_getIntersections: function(v1, v2, c1, c2, locations, param) {\n\t\t\tif (!v2) {\n\t\t\t\treturn Curve._getSelfIntersection(v1, c1, locations, param);\n\t\t\t}\n\t\t\tvar c1p1x = v1[0], c1p1y = v1[1],\n\t\t\t\tc1p2x = v1[6], c1p2y = v1[7],\n\t\t\t\tc2p1x = v2[0], c2p1y = v2[1],\n\t\t\t\tc2p2x = v2[6], c2p2y = v2[7],\n\t\t\t\tc1s1x = (3 * v1[2] + c1p1x) / 4,\n\t\t\t\tc1s1y = (3 * v1[3] + c1p1y) / 4,\n\t\t\t\tc1s2x = (3 * v1[4] + c1p2x) / 4,\n\t\t\t\tc1s2y = (3 * v1[5] + c1p2y) / 4,\n\t\t\t\tc2s1x = (3 * v2[2] + c2p1x) / 4,\n\t\t\t\tc2s1y = (3 * v2[3] + c2p1y) / 4,\n\t\t\t\tc2s2x = (3 * v2[4] + c2p2x) / 4,\n\t\t\t\tc2s2y = (3 * v2[5] + c2p2y) / 4,\n\t\t\t\tmin = Math.min,\n\t\t\t\tmax = Math.max;\n\t\t\tif (!(\tmax(c1p1x, c1s1x, c1s2x, c1p2x) >=\n\t\t\t\t\tmin(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\tmin(c1p1x, c1s1x, c1s2x, c1p2x) <=\n\t\t\t\t\tmax(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\tmax(c1p1y, c1s1y, c1s2y, c1p2y) >=\n\t\t\t\t\tmin(c2p1y, c2s1y, c2s2y, c2p2y) &&\n\t\t\t\t\tmin(c1p1y, c1s1y, c1s2y, c1p2y) <=\n\t\t\t\t\tmax(c2p1y, c2s1y, c2s2y, c2p2y)))\n\t\t\t\treturn locations;\n\t\t\tif (!param.startConnected && !param.endConnected) {\n\t\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\t\tif (overlaps) {\n\t\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\t\tvar overlap = overlaps[i];\n\t\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\tv1, c1, overlap[0], null,\n\t\t\t\t\t\t\tv2, c2, overlap[1], null, true);\n\t\t\t\t\t}\n\t\t\t\t\treturn locations;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar straight1 = Curve.isStraight(v1),\n\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\tstraight = straight1 && straight2,\n\t\t\t\tepsilon = 1e-12,\n\t\t\t\tbefore = locations.length;\n\t\t\t(straight\n\t\t\t\t? addLineIntersection\n\t\t\t\t: straight1 || straight2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, param,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (straight && locations.length > before)\n\t\t\t\treturn locations;\n\t\t\tvar c1p1 = new Point(c1p1x, c1p1y),\n\t\t\t\tc1p2 = new Point(c1p2x, c1p2y),\n\t\t\t\tc2p1 = new Point(c2p1x, c2p1y),\n\t\t\t\tc2p2 = new Point(c2p2x, c2p2y);\n\t\t\tif (c1p1.isClose(c2p1, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 0, c2p1);\n\t\t\tif (!param.startConnected && c1p1.isClose(c2p2, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 1, c2p2);\n\t\t\tif (!param.endConnected && c1p2.isClose(c2p1, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 0, c2p1);\n\t\t\tif (c1p2.isClose(c2p2, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 1, c2p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\t_getSelfIntersection: function(v1, c1, locations, param) {\n\t\t\tvar p1x = v1[0], p1y = v1[1],\n\t\t\t\th1x = v1[2], h1y = v1[3],\n\t\t\t\th2x = v1[4], h2y = v1[5],\n\t\t\t\tp2x = v1[6], p2y = v1[7];\n\t\t\tvar line = new Line(p1x, p1y, p2x, p2y, false),\n\t\t\t\tside1 = line.getSide(new Point(h1x, h1y), true),\n\t\t\t\tside2 = line.getSide(new Point(h2x, h2y), true);\n\t\t\tif (side1 === side2) {\n\t\t\t\tvar edgeSum = (p1x - h2x) * (h1y - p2y)\n\t\t\t\t\t\t\t+ (h1x - p2x) * (h2y - p1y);\n\t\t\t\tif (edgeSum * side1 > 0)\n\t\t\t\t\treturn locations;\n\t\t\t}\n\t\t\tvar ax = p2x - 3 * h2x + 3 * h1x - p1x,\n\t\t\t\tbx = h2x - 2 * h1x + p1x,\n\t\t\t\tcx = h1x - p1x,\n\t\t\t\tay = p2y - 3 * h2y + 3 * h1y - p1y,\n\t\t\t\tby = h2y - 2 * h1y + p1y,\n\t\t\t\tcy = h1y - p1y,\n\t\t\t\tac = ay * cx - ax * cy,\n\t\t\t\tab = ay * bx - ax * by,\n\t\t\t\tbc = by * cx - bx * cy;\n\t\t\tif (ac * ac - 4 * ab * bc < 0) {\n\t\t\t\tvar roots = [],\n\t\t\t\t\ttSplit,\n\t\t\t\t\tcount = Numerical.solveCubic(\n\t\t\t\t\t\t\tax * ax\t + ay * ay,\n\t\t\t\t\t\t\t3 * (ax * bx + ay * by),\n\t\t\t\t\t\t\t2 * (bx * bx + by * by) + ax * cx + ay * cy,\n\t\t\t\t\t\t\tbx * cx + by * cy,\n\t\t\t\t\t\t\troots, 0, 1);\n\t\t\t\tif (count > 0) {\n\t\t\t\t\tfor (var i = 0, maxCurvature = 0; i < count; i++) {\n\t\t\t\t\t\tvar curvature = Math.abs(\n\t\t\t\t\t\t\t\tc1.getCurvatureAt(roots[i], true));\n\t\t\t\t\t\tif (curvature > maxCurvature) {\n\t\t\t\t\t\t\tmaxCurvature = curvature;\n\t\t\t\t\t\t\ttSplit = roots[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar parts = Curve.subdivide(v1, tSplit);\n\t\t\t\t\tparam.endConnected = true;\n\t\t\t\t\tparam.renormalize = function(t1, t2) {\n\t\t\t\t\t\treturn [t1 * tSplit, t2 * (1 - tSplit) + tSplit];\n\t\t\t\t\t};\n\t\t\t\t\tCurve._getIntersections(parts[0], parts[1], c1, c1,\n\t\t\t\t\t\t\tlocations, param);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn locations;\n\t\t},\n\n\t\tgetOverlaps: function(v1, v2) {\n\t\t\tvar abs = Math.abs,\n\t\t\t\ttimeEpsilon = 4e-7,\n\t\t\t\tgeomEpsilon = 2e-7,\n\t\t\t\tstraight1 = Curve.isStraight(v1),\n\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\tstraight =\tstraight1 && straight2;\n\n\t\t\tfunction getLineLengthSquared(v) {\n\t\t\t\tvar x = v[6] - v[0],\n\t\t\t\t\ty = v[7] - v[1];\n\t\t\t\treturn x * x + y * y;\n\t\t\t}\n\n\t\t\tif (straight) {\n\t\t\t\tvar flip = getLineLengthSquared(v1) < getLineLengthSquared(v2),\n\t\t\t\t\tl1 = flip ? v2 : v1,\n\t\t\t\t\tl2 = flip ? v1 : v2,\n\t\t\t\t\tline = new Line(l1[0], l1[1], l1[6], l1[7]);\n\t\t\t\tif (line.getDistance(new Point(l2[0], l2[1])) > geomEpsilon ||\n\t\t\t\t\tline.getDistance(new Point(l2[6], l2[7])) > geomEpsilon)\n\t\t\t\t\treturn null;\n\t\t\t} else if (straight1 ^ straight2) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar v = [v1, v2],\n\t\t\t\tpairs = [];\n\t\t\tfor (var i = 0, t1 = 0;\n\t\t\t\t\ti < 2 && pairs.length < 2;\n\t\t\t\t\ti += t1 === 0 ? 0 : 1, t1 = t1 ^ 1) {\n\t\t\t\tvar t2 = Curve.getParameterOf(v[i ^ 1], new Point(\n\t\t\t\t\t\tv[i][t1 === 0 ? 0 : 6],\n\t\t\t\t\t\tv[i][t1 === 0 ? 1 : 7]));\n\t\t\t\tif (t2 != null) {\n\t\t\t\t\tvar pair = i === 0 ? [t1, t2] : [t2, t1];\n\t\t\t\t\tif (pairs.length === 0 ||\n\t\t\t\t\t\tabs(pair[0] - pairs[0][0]) > timeEpsilon &&\n\t\t\t\t\t\tabs(pair[1] - pairs[0][1]) > timeEpsilon)\n\t\t\t\t\t\tpairs.push(pair);\n\t\t\t\t}\n\t\t\t\tif (i === 1 && pairs.length === 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (pairs.length !== 2) {\n\t\t\t\tpairs = null;\n\t\t\t} else if (!straight) {\n\t\t\t\tvar o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n\t\t\t\t\to2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n\t\t\t\tif (abs(o2[2] - o1[2]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[3] - o1[3]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[4] - o1[4]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[5] - o1[5]) > geomEpsilon)\n\t\t\t\t\tpairs = null;\n\t\t\t}\n\t\t\treturn pairs;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point,\n\t\t\t_overlap, _distance) {\n\t\tif (parameter > 0.9999996) {\n\t\t\tvar next = curve.getNext();\n\t\t\tif (next) {\n\t\t\t\tparameter = 0;\n\t\t\t\tcurve = next;\n\t\t\t}\n\t\t}\n\t\tthis._id = UID.get(CurveLocation);\n\t\tthis._setCurve(curve);\n\t\tthis._parameter = parameter;\n\t\tthis._point = point || curve.getPointAt(parameter, true);\n\t\tthis._overlap = _overlap;\n\t\tthis._distance = _distance;\n\t\tthis._intersection = this._next = this._prev = null;\n\t},\n\n\t_setCurve: function(curve) {\n\t\tvar path = curve._path;\n\t\tthis._version = path ? path._version : 0;\n\t\tthis._curve = curve;\n\t\tthis._segment = null;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t},\n\n\t_setSegment: function(segment) {\n\t\tthis._setCurve(segment.getCurve());\n\t\tthis._segment = segment;\n\t\tthis._parameter = segment === this._segment1 ? 0 : 1;\n\t\tthis._point = segment._point.clone();\n\t},\n\n\tgetSegment: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tsegment = this._segment;\n\t\tif (!segment) {\n\t\t\tvar parameter = this.getParameter();\n\t\t\tif (parameter === 0) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (parameter === 1) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else if (parameter != null) {\n\t\t\t\tsegment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tthis._segment = segment;\n\t\t}\n\t\treturn segment;\n\t},\n\n\tgetCurve: function() {\n\t\tvar curve = this._curve,\n\t\t\tpath = curve && curve._path,\n\t\t\tthat = this;\n\t\tif (path && path._version !== this._version) {\n\t\t\tcurve = this._parameter = this._curve = this._offset = null;\n\t\t}\n\n\t\tfunction trySegment(segment) {\n\t\t\tvar curve = segment && segment.getCurve();\n\t\t\tif (curve && (that._parameter = curve.getParameterOf(that._point))\n\t\t\t\t\t!= null) {\n\t\t\t\tthat._setCurve(curve);\n\t\t\t\tthat._segment = segment;\n\t\t\t\treturn curve;\n\t\t\t}\n\t\t}\n\n\t\treturn curve\n\t\t\t|| trySegment(this._segment)\n\t\t\t|| trySegment(this._segment1)\n\t\t\t|| trySegment(this._segment2.getPrevious());\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetParameter: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this._parameter;\n\t\treturn curve && parameter == null\n\t\t\t? this._parameter = curve.getParameterOf(this._point)\n\t\t\t: parameter;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tgetOffset: function() {\n\t\tvar offset = this._offset;\n\t\tif (offset == null) {\n\t\t\toffset = 0;\n\t\t\tvar path = this.getPath(),\n\t\t\t\tindex = this.getIndex();\n\t\t\tif (path && index != null) {\n\t\t\t\tvar curves = path.getCurves();\n\t\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\t\toffset += curves[i].getLength();\n\t\t\t}\n\t\t\tthis._offset = offset += this.getCurveOffset();\n\t\t}\n\t\treturn offset;\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetIntersection: function() {\n\t\treturn this._intersection;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tres = null;\n\t\tif (curve) {\n\t\t\tres = curve.divide(this.getParameter(), true);\n\t\t\tif (res)\n\t\t\t\tthis._setSegment(res._segment1);\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve ? curve.split(this.getParameter(), true) : null;\n\t},\n\n\tequals: function(loc, _ignoreOther) {\n\t\tvar res = this === loc,\n\t\t\tepsilon = 2e-7;\n\t\tif (!res && loc instanceof CurveLocation\n\t\t\t\t&& this.getPath() === loc.getPath()\n\t\t\t\t&& this.getPoint().isClose(loc.getPoint(), epsilon)) {\n\t\t\tvar c1 = this.getCurve(),\n\t\t\t\tc2 = loc.getCurve(),\n\t\t\t\tabs = Math.abs,\n\t\t\t\tdiff = abs(\n\t\t\t\t\t((c1.isLast() && c2.isFirst() ? -1 : c1.getIndex())\n\t\t\t\t\t\t\t+ this.getParameter()) -\n\t\t\t\t\t((c2.isLast() && c1.isFirst() ? -1 : c2.getIndex())\n\t\t\t\t\t\t\t+ loc.getParameter()));\n\t\t\tres = (diff < 4e-7\n\t\t\t\t|| ((diff = abs(this.getOffset() - loc.getOffset())) < epsilon\n\t\t\t\t\t|| abs(this.getPath().getLength() - diff) < epsilon))\n\t\t\t\t&& (_ignoreOther\n\t\t\t\t\t|| (!this._intersection && !loc._intersection\n\t\t\t\t\t\t|| this._intersection && this._intersection.equals(\n\t\t\t\t\t\t\t\tloc._intersection, true)));\n\t\t}\n\t\treturn res;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tisTouching: function() {\n\t\tvar inter = this._intersection;\n\t\tif (inter && this.getTangent().isCollinear(inter.getTangent())) {\n\t\t\tvar curve1 = this.getCurve(),\n\t\t\t\tcurve2 = inter.getCurve();\n\t\t\treturn !(curve1.isStraight() && curve2.isStraight()\n\t\t\t\t\t&& curve1.getLine().intersect(curve2.getLine()));\n\t\t}\n\t\treturn false;\n\t},\n\n\tisCrossing: function() {\n\t\tvar inter = this._intersection;\n\t\tif (!inter)\n\t\t\treturn false;\n\t\tvar t1 = this.getParameter(),\n\t\t\tt2 = inter.getParameter(),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 >= tMin && t1 <= tMax || t2 >= tMin && t2 <= tMax)\n\t\t\treturn !this.isTouching();\n\t\tvar c2 = this.getCurve(),\n\t\t\tc1 = c2.getPrevious(),\n\t\t\tc4 = inter.getCurve(),\n\t\t\tc3 = c4.getPrevious(),\n\t\t\tPI = Math.PI;\n\t\tif (!c1 || !c3)\n\t\t\treturn false;\n\n\t\tfunction isInRange(angle, min, max) {\n\t\t\treturn min < max\n\t\t\t\t? angle > min && angle < max\n\t\t\t\t: angle > min && angle <= PI || angle >= -PI && angle < max;\n\t\t}\n\n\t\tvar a1 = c1.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\ta2 = c2.getTangentAt(tMin, true).getAngleInRadians(),\n\t\t\ta3 = c3.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\ta4 = c4.getTangentAt(tMin, true).getAngleInRadians();\n\n\t\treturn (isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2))\n\t\t\t&& (isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1));\n\t},\n\n\tisOverlap: function() {\n\t\treturn !!this._overlap;\n\t}\n}, Base.each(Curve.evaluateMethods, function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {\n\tpreserve: true\n}),\nnew function() {\n\n\tfunction insert(locations, loc, merge) {\n\t\tvar length = locations.length,\n\t\t\tl = 0,\n\t\t\tr = length - 1;\n\n\t\tfunction search(index, dir) {\n\t\t\tfor (var i = index + dir; i >= -1 && i <= length; i += dir) {\n\t\t\t\tvar loc2 = locations[((i % length) + length) % length];\n\t\t\t\tif (!loc.getPoint().isClose(loc2.getPoint(),\n\t\t\t\t\t\t2e-7))\n\t\t\t\t\tbreak;\n\t\t\t\tif (loc.equals(loc2))\n\t\t\t\t\treturn loc2;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (l <= r) {\n\t\t\tvar m = (l + r) >>> 1,\n\t\t\t\tloc2 = locations[m],\n\t\t\t\tfound;\n\t\t\tif (merge && (found = loc.equals(loc2) ? loc2\n\t\t\t\t\t: (search(m, -1) || search(m, 1)))) {\n\t\t\t\tif (loc._overlap) {\n\t\t\t\t\tfound._overlap = found._intersection._overlap = true;\n\t\t\t\t}\n\t\t\t\treturn found;\n\t\t\t}\n\t\tvar path1 = loc.getPath(),\n\t\t\tpath2 = loc2.getPath(),\n\t\t\tdiff = path1 === path2\n\t\t\t\t? (loc.getIndex() + loc.getParameter())\n\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t: path1._id - path2._id;\n\t\t\tif (diff < 0) {\n\t\t\t\tr = m - 1;\n\t\t\t} else {\n\t\t\t\tl = m + 1;\n\t\t\t}\n\t\t}\n\t\tlocations.splice(l, 0, loc);\n\t\treturn loc;\n\t}\n\n\treturn { statics: {\n\t\tinsert: insert,\n\n\t\texpand: function(locations) {\n\t\t\tvar expanded = locations.slice();\n\t\t\tfor (var i = 0, l = locations.length; i < l; i++) {\n\t\t\t\tinsert(expanded, locations[i]._intersection, false);\n\t\t\t}\n\t\t\treturn expanded;\n\t\t}\n\t}};\n});\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, include, _matrix, _returnFirst) {\n\t\tvar self = this === path || !path,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = self ? matrix1\n\t\t\t\t: (_matrix || path._matrix).orNullIfIdentity();\n\t\tif (!self && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tvar curves1 = this.getCurves(),\n\t\t\tcurves2 = self ? curves1 : path.getCurves(),\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = self ? length1 : curves2.length,\n\t\t\tvalues2 = [],\n\t\t\tarrays = [],\n\t\t\tlocations,\n\t\t\tpath;\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = self ? values2[i] : curve1.getValues(matrix1),\n\t\t\t\tpath1 = curve1.getPath();\n\t\t\tif (path1 !== path) {\n\t\t\t\tpath = path1;\n\t\t\t\tlocations = [];\n\t\t\t\tarrays.push(locations);\n\t\t\t}\n\t\t\tif (self) {\n\t\t\t\tCurve._getSelfIntersection(values1, curve1, locations, {\n\t\t\t\t\tinclude: include,\n\t\t\t\t\tstartConnected: length1 === 1 &&\n\t\t\t\t\t\t\tcurve1.getPoint1().equals(curve1.getPoint2())\n\t\t\t\t});\n\t\t\t}\n\t\t\tfor (var j = self ? i + 1 : 0; j < length2; j++) {\n\t\t\t\tif (_returnFirst && locations.length)\n\t\t\t\t\treturn locations;\n\t\t\t\tvar curve2 = curves2[j];\n\t\t\t\tCurve._getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curve2, locations,\n\t\t\t\t\t{\n\t\t\t\t\t\tinclude: include,\n\t\t\t\t\t\tstartConnected: self && curve1.getPrevious() === curve2,\n\t\t\t\t\t\tendConnected: self && curve1.getNext() === curve2\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlocations = [];\n\t\tfor (var i = 0, l = arrays.length; i < l; i++) {\n\t\t\tlocations.push.apply(locations, arrays[i]);\n\t\t}\n\t\treturn locations;\n\t},\n\n\tgetCrossings: function(path) {\n\t\treturn this.getIntersections(path, function(inter) {\n\t\t\treturn inter.isCrossing();\n\t\t});\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tthis._version = 0;\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._area = this._clockwise = this._monoCurves =\n\t\t\t\t\tundefined;\n\t\t\tif (flags & 16) {\n\t\t\t\tthis._version++;\n\t\t\t} else if (this._curves) {\n\t\t\t   for (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves) {\n\t\t\tvar total = this._countCurves(),\n\t\t\t\tfrom = index + amount - 1 === total ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, total);\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\thasHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tif (segments[i].hasHandles())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tclearHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsegments[i].clearHandles();\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tlength += curves[i].getLength();\n\t\t\tthis._length = length;\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tif (this._area == null) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tcount = segments.length,\n\t\t\t\tlast = count - 1,\n\t\t\t\tarea = 0;\n\t\t\tfor (var i = 0, l = this._closed ? count : last; i < l; i++) {\n\t\t\t\tarea += Curve.getArea(Curve.getValues(\n\t\t\t\t\t\tsegments[i], segments[i < last ? i + 1 : 0]));\n\t\t\t}\n\t\t\tthis._area = area;\n\t\t}\n\t\treturn this._area;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn this.getArea() >= 0;\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.getPointAt(pos)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (!curve.hasHandles() && (curve.getLength() === 0\n\t\t\t\t\t|| curve.isCollinear(curve.getNext())))\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (parameter >= tMax) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter >= tMin) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\tpath.insertAbove(this, true);\n\t\t\t\tthis._clone(path);\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path._closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isCollinear(i, j) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\tseg3 = segments[j],\n\t\t\t\tseg4 = seg3.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg3._handleOut.isZero() && seg4._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isCollinear(\n\t\t\t\t\t\tseg4._point.subtract(seg3._point));\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\tvar seg2 = segments[i],\n\t\t\t\tseg1 = seg2.getPrevious(),\n\t\t\t\tseg3 = seg2.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg2._handleOut.isZero() && seg3._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isOrthogonal(\n\t\t\t\t\t\tseg3._point.subtract(seg2._point));\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\thandle1 = seg1._handleOut,\n\t\t\t\thandle2 = seg2._handleIn,\n\t\t\t\tkappa = 0.5522847498307936;\n\t\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\t\tvar pt1 = seg1._point,\n\t\t\t\t\tpt2 = seg2._point,\n\t\t\t\t\tcorner = new Line(pt1, handle1, true).intersect(\n\t\t\t\t\t\t\tnew Line(pt2, handle2, true), true);\n\t\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt1).getLength() - kappa)\n\t\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt2).getLength() - kappa);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (!this.hasHandles() && segments.length === 4\n\t\t\t\t&& isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = this._clone(new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t}), insert, false);\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset,\n\t\t\t\tcurve = curves[index];\n\t\t\treturn curve ? curve.getLocationAt(offset - index, true) : null;\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (curves.length > 0 && offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}),\nnew function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < 1e-12)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isCollinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().multiply(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\tvar item = items[i];\n\t\t\tif (item instanceof CompoundPath) {\n\t\t\t\titems.splice.apply(items, [i, 1].concat(item.removeChildren()));\n\t\t\t\titem.remove();\n\t\t\t}\n\t\t}\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tvar children = this._children;\n\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\tvar path = children[i].reduce();\n\t\t\tif (path.isEmpty())\n\t\t\t\tchildren.splice(i, 1);\n\t\t}\n\t\tif (children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t}\n\t\treturn reduce.base.call(this);\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : _matrix, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n},\nnew function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current\n\t\t\t\t\t\t: new Path(Item.NO_INSERT);\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction preparePath(path, resolve) {\n\t\tvar res = path.clone(false).reduce().transform(null, true, true);\n\t\treturn resolve ? res.resolveCrossings().reorient() : res;\n\t}\n\n\tfunction finishBoolean(ctor, paths, path1, path2, reduce) {\n\t\tvar result = new ctor(Item.NO_INSERT);\n\t\tresult.addChildren(paths, true);\n\t\tif (reduce)\n\t\t\tresult = result.reduce();\n\t\tresult.insertAbove(path2 && path1.isSibling(path2)\n\t\t\t\t&& path1.getIndex() < path2.getIndex()\n\t\t\t\t\t? path2 : path1);\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tif (!path1._children && !path1._closed)\n\t\t\treturn computeOpenBoolean(path1, path2, operation);\n\t\tvar _path1 = preparePath(path1, true),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2, true);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tvar intersections = CurveLocation.expand(\n\t\t\t_path1.getIntersections(_path2, function(inter) {\n\t\t\t\treturn _path2 && inter.isOverlap() || inter.isCrossing();\n\t\t\t})\n\t\t);\n\t\tdivideLocations(intersections);\n\n\t\tvar segments = [],\n\t\t\tmonoCurves = [];\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tfor (var i = 0, l = intersections.length; i < l; i++) {\n\t\t\tpropagateWinding(intersections[i]._segment, _path1, _path2,\n\t\t\t\t\tmonoCurves, operation);\n\t\t}\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding == null) {\n\t\t\t\tpropagateWinding(segment, _path1, _path2, monoCurves,\n\t\t\t\t\t\toperation);\n\t\t\t}\n\t\t}\n\t\treturn finishBoolean(CompoundPath, tracePaths(segments, operation),\n\t\t\t\tpath1, path2, true);\n\t}\n\n\tfunction computeOpenBoolean(path1, path2, operation) {\n\t\tif (!path2 || !path2._children && !path2._closed\n\t\t\t\t|| !/^(subtract|intersect)$/.test(operation))\n\t\t\treturn null;\n\t\tvar _path1 = preparePath(path1, false),\n\t\t\t_path2 = preparePath(path2, false),\n\t\t\tintersections = _path1.getIntersections(_path2, function(inter) {\n\t\t\t\treturn inter.isOverlap() || inter.isCrossing();\n\t\t\t}),\n\t\t\tsub = operation === 'subtract',\n\t\t\tpaths = [];\n\n\t\tfunction addPath(path) {\n\t\t\tif (_path2.contains(path.getPointAt(path.getLength() / 2)) ^ sub) {\n\t\t\t\tpaths.unshift(path);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = intersections.length - 1; i >= 0; i--) {\n\t\t\tvar path = intersections[i].split();\n\t\t\tif (path) {\n\t\t\t\tif (addPath(path))\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(0, 0);\n\t\t\t\t_path1.getLastSegment().setHandleOut(0, 0);\n\t\t\t}\n\t\t}\n\t\taddPath(_path1);\n\t\treturn finishBoolean(Group, paths, path1, path2);\n\t}\n\n\tfunction linkIntersections(from, to) {\n\t\tvar prev = from;\n\t\twhile (prev) {\n\t\t\tif (prev === to)\n\t\t\t\treturn;\n\t\t\tprev = prev._prev;\n\t\t}\n\t\twhile (from._next && from._next !== to)\n\t\t\tfrom = from._next;\n\t\tif (!from._next) {\n\t\t\twhile (to._prev)\n\t\t\t\tto = to._prev;\n\t\t\tfrom._next = to;\n\t\t\tto._prev = from;\n\t\t}\n\t}\n\n\tfunction divideLocations(locations) {\n\t\tvar tMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tnoHandles = false,\n\t\t\tclearSegments = [],\n\t\t\tprevCurve,\n\t\t\tprevT;\n\n\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\tvar loc = locations[i],\n\t\t\t\tcurve = loc._curve,\n\t\t\t\tt = loc._parameter,\n\t\t\t\torigT = t;\n\t\t\tif (curve !== prevCurve) {\n\t\t\t\tnoHandles = !curve.hasHandles();\n\t\t\t} else if (prevT > 0) {\n\t\t\t\tt /= prevT;\n\t\t\t}\n\t\t\tvar segment;\n\t\t\tif (t < tMin) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (t > tMax) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else {\n\t\t\t\tsegment = curve.divide(t, true, true)._segment1;\n\t\t\t\tif (noHandles)\n\t\t\t\t\tclearSegments.push(segment);\n\t\t\t}\n\t\t\tloc._setSegment(segment);\n\t\t\tvar inter = segment._intersection,\n\t\t\t\tdest = loc._intersection;\n\t\t\tif (inter) {\n\t\t\t\tlinkIntersections(inter, dest);\n\t\t\t\tvar other = inter;\n\t\t\t\twhile (other) {\n\t\t\t\t\tlinkIntersections(other._intersection, inter);\n\t\t\t\t\tother = other._next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsegment._intersection = dest;\n\t\t\t}\n\t\t\tprevCurve = curve;\n\t\t\tprevT = origT;\n\t\t}\n\t\tfor (var i = 0, l = clearSegments.length; i < l; i++) {\n\t\t\tclearSegments[i].clearHandles();\n\t\t}\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar epsilon = 2e-7,\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - epsilon,\n\t\t\t\tyAfter = py + epsilon;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.getPoint(values, roots[j]).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves, false,\n\t\t\t\t\t\ttestContains);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves, false,\n\t\t\t\t\t\ttestContains);\n\t\t} else {\n\t\t\tvar xBefore = px - epsilon,\n\t\t\t\txAfter = px + epsilon;\n\t\t\tvar startCounted = false,\n\t\t\t\tprevCurve,\n\t\t\t\tprevT;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0];\n\t\t\t\t\tif (!(\n\t\t\t\t\t\tt > tMax && startCounted && curve.next !== curves[i + 1]\n\t\t\t\t\t\t|| t < tMin && prevT > tMax\n\t\t\t\t\t\t\t&& curve.previous === prevCurve)) {\n\t\t\t\t\t\tvar x = Curve.getPoint(values, t).x,\n\t\t\t\t\t\t\tslope = Curve.getTangent(values, t).y,\n\t\t\t\t\t\t\tcounted = false;\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isStraight(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (curve.previous !== curves[i - 1])\n\t\t\t\t\t\t\tstartCounted = t < tMin && counted;\n\t\t\t\t\t}\n\t\t\t\t\tprevCurve = curve;\n\t\t\t\t\tprevT = t;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction propagateWinding(segment, path1, path2, monoCurves, operation) {\n\t\tvar epsilon = 2e-7,\n\t\t\tchain = [],\n\t\t\tstart = segment,\n\t\t\ttotalLength = 0,\n\t\t\twindingSum = 0;\n\t\tdo {\n\t\t\tvar curve = segment.getCurve(),\n\t\t\t\tlength = curve.getLength();\n\t\t\tchain.push({ segment: segment, curve: curve, length: length });\n\t\t\ttotalLength += length;\n\t\t\tsegment = segment.getNext();\n\t\t} while (segment && !segment._intersection && segment !== start);\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tvar length = totalLength * (i + 1) / 4;\n\t\t\tfor (var k = 0, m = chain.length; k < m; k++) {\n\t\t\t\tvar node = chain[k],\n\t\t\t\t\tcurveLength = node.length;\n\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\tif (length < epsilon || curveLength - length < epsilon)\n\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\tvar curve = node.curve,\n\t\t\t\t\t\tpath = curve._path,\n\t\t\t\t\t\tparent = path._parent,\n\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\thor = curve.isHorizontal();\n\t\t\t\t\tif (parent instanceof CompoundPath)\n\t\t\t\t\t\tpath = parent;\n\t\t\t\t\twindingSum += operation === 'subtract' && path2\n\t\t\t\t\t\t&& (path === path1 && path2._getWinding(pt, hor)\n\t\t\t\t\t\t|| path === path2 && !path1._getWinding(pt, hor))\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlength -= curveLength;\n\t\t\t}\n\t\t}\n\t\tvar winding = Math.round(windingSum / 3);\n\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\tchain[j].segment._winding = winding;\n\t}\n\n\tfunction tracePaths(segments, operation) {\n\t\tvar paths = [],\n\t\t\tstart,\n\t\t\totherStart,\n\t\t\toperator = operators[operation],\n\t\t\toverlapWinding = {\n\t\t\t\tunite: { 1: 2 },\n\t\t\t\tintersect: { 2: 1 }\n\t\t\t}[operation];\n\n\t\tfunction isValid(seg, adjusted) {\n\t\t\tif (seg._visited)\n\t\t\t\treturn false;\n\t\t\tif (!operator)\n\t\t\t\treturn true;\n\t\t\tvar winding = seg._winding,\n\t\t\t\tinter = seg._intersection;\n\t\t\tif (inter && adjusted && overlapWinding && inter.isOverlap())\n\t\t\t\twinding = overlapWinding[winding] || winding;\n\t\t\treturn operator(winding);\n\t\t}\n\n\t\tfunction isStart(seg) {\n\t\t\treturn seg === start || seg === otherStart;\n\t\t}\n\n\t\tfunction findBestIntersection(inter, strict) {\n\t\t\tif (!inter._next)\n\t\t\t\treturn inter;\n\t\t\twhile (inter) {\n\t\t\t\tvar seg = inter._segment,\n\t\t\t\t\tnextSeg = seg.getNext(),\n\t\t\t\t\tnextInter = nextSeg._intersection;\n\t\t\t\tif (isStart(nextSeg)\n\t\t\t\t\t|| !seg._visited && !nextSeg._visited\n\t\t\t\t\t&& (!operator\n\t\t\t\t\t\t|| (!strict || isValid(seg))\n\t\t\t\t\t\t&& (!(strict && nextInter && nextInter.isOverlap())\n\t\t\t\t\t\t\t&& isValid(nextSeg)\n\t\t\t\t\t\t\t|| !strict && nextInter\n\t\t\t\t\t\t\t&& isValid(nextInter._segment))\n\t\t\t\t\t))\n\t\t\t\t\treturn inter;\n\t\t\t\tinter = inter._next;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tfunction findStartSegment(inter, next) {\n\t\t\twhile (inter) {\n\t\t\t\tvar seg = inter._segment;\n\t\t\t\tif (isStart(seg))\n\t\t\t\t\treturn seg;\n\t\t\t\tinter = inter[next ? '_next' : '_prev'];\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar seg = segments[i],\n\t\t\t\tpath = null,\n\t\t\t\tfinished = false;\n\t\t\tif (!isValid(seg, true))\n\t\t\t\tcontinue;\n\t\t\tstart = otherStart = null;\n\t\t\twhile (!finished) {\n\t\t\t\tvar inter = seg._intersection,\n\t\t\t\t\thandleIn = path && seg._handleIn;\n\t\t\t\tinter = inter && (findBestIntersection(inter, true)\n\t\t\t\t\t\t|| findBestIntersection(inter, false)) || inter;\n\t\t\t\tvar other = inter && inter._segment;\n\t\t\t\tif (other && isValid(other))\n\t\t\t\t\tseg = other;\n\t\t\t\tif (seg._visited) {\n\t\t\t\t\tfinished = isStart(seg);\n\t\t\t\t\tif (!finished && inter) {\n\t\t\t\t\t\tvar found = findStartSegment(inter, true)\n\t\t\t\t\t\t\t|| findStartSegment(inter, false);\n\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\tseg = found;\n\t\t\t\t\t\t\tfinished = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!path) {\n\t\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\t\tstart = seg;\n\t\t\t\t\totherStart = other;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, handleIn, seg._handleOut));\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = seg.getNext();\n\t\t\t\tfinished = isStart(seg);\n\t\t\t}\n\t\t\tif (finished) {\n\t\t\t\tpath.firstSegment.setHandleIn(seg._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else if (path) {\n\t\t\t\tconsole.error('Boolean operation resulted in open path',\n\t\t\t\t\t\t'segments =', path._segments.length,\n\t\t\t\t\t\t'length =', path.getLength());\n\t\t\t\tpath = null;\n\t\t\t}\n\t\t\tif (path && (path._segments.length > 8\n\t\t\t\t\t|| !Numerical.isZero(path.getArea()))) {\n\t\t\t\tpaths.push(path);\n\t\t\t\tpath = null;\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn finishBoolean(Group,\n\t\t\t\t\t[this.subtract(path), this.intersect(path)],\n\t\t\t\t\tthis, path, true);\n\t\t},\n\n\t\tresolveCrossings: function() {\n\t\t\tvar crossings = this.getCrossings();\n\t\t\tif (!crossings.length)\n\t\t\t\treturn this;\n\t\t\tdivideLocations(CurveLocation.expand(crossings));\n\t\t\tvar paths = this._children || [this],\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tsegments.push.apply(segments, paths[i]._segments);\n\t\t\t}\n\t\t\treturn finishBoolean(CompoundPath, tracePaths(segments),\n\t\t\t\t\tthis, null, false);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isStraight(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttMin = 4e-7,\n\t\t\t\t\ttMax = 1 - tMin,\n\t\t\t\t\troots = [],\n\t\t\t\t\tn = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\t\t\t\tif (n === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (n > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.getPoint(values, roots[j]).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve, 0.5),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 1e-6) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, weighted) {\n\t\t\tvar param = this.getParameterAt(offset);\n\t\t\treturn Curve[name](this.curves[param.index], param.value, weighted);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit,\n\t\t\tparametersInOrder = true;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error && parametersInOrder) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tparametersInOrder = this.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1),\n\t\t\teps = epsilon * segLength,\n\t\t\thandle1,\n\t\t\thandle2;\n\t\tif (alpha1 < eps || alpha2 < eps) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t} else {\n\t\t\tvar line = pt2.subtract(pt1);\n\t\t\thandle1 = tan1.normalize(alpha1);\n\t\t\thandle2 = tan2.normalize(alpha2);\n\t\t\tif (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t\thandle1 = handle2 = null;\n\t\t\t}\n\t\t}\n\n\t\treturn [pt1, pt1.add(handle1 || tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(handle2 || tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t\tfor (var i = 1, l = u.length; i < l; i++) {\n\t\t\tif (u[i] <= u[i - 1])\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 1e-6)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert, includeMatrix) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert, includeMatrix);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tthis._components[index] = parser.call(this, value);\n\t\t\t\tthis._changed();\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type],\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tthis._id = UID.get(Color);\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n},\nnew function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = UID.get();\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops, this._radial);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tDomEvent.add(window, {\n\t\tfocus: function() {\n\t\t\tfocused = true;\n\t\t},\n\t\tblur: function() {\n\t\t\tfocused = false;\n\t\t}\n\t});\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif (!this._pixelRatio)\n\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\tthis._id = element.getAttribute('id');\n\t\tif (this._id == null)\n\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\tDomEvent.add(element, this._viewEvents);\n\t\tvar none = 'none';\n\t\tDomElement.setPrefixed(element.style, {\n\t\t\tuserSelect: none,\n\t\t\ttouchAction: none,\n\t\t\ttouchCallout: none,\n\t\t\tcontentZooming: none,\n\t\t\tuserDrag: none,\n\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t});\n\n\t\tfunction getSize(name) {\n\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t};\n\n\t\tfunction getCanvasSize() {\n\t\t\tvar size = DomElement.getSize(element);\n\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t: size;\n\t\t};\n\n\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\tvar that = this;\n\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\tresize: function() {\n\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._setViewSize(size = getCanvasSize());\n\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\tthis._stats = new Stats();\n\t\t\tvar stats = this._stats.domElement,\n\t\t\t\tstyle = stats.style,\n\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\tstyle.position = 'absolute';\n\t\t\tstyle.left = offset.x + 'px';\n\t\t\tstyle.top = offset.y + 'px';\n\t\t\tdocument.body.appendChild(stats);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: Base.each(['onResize', 'onMouseDown', 'onMouseUp', 'onMouseMove'],\n\t\tfunction(name) {\n\t\t\tthis[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis._installEvent(type);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis._uninstallEvent(type);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.play();\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t),\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n},\nnew function() {\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\tvar mouseFlags = {\n\t\tmousedown: {\n\t\t\tmousedown: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmouseup: {\n\t\t\tmouseup: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmousemove: {\n\t\t\tmousedrag: 1,\n\t\t\tmousemove: 1,\n\t\t\tmouseenter: 1,\n\t\t\tmouseleave: 1\n\t\t}\n\t};\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\t_installEvent: function(type) {\n\t\t\tvar counters = this._eventCounters;\n\t\t\tif (counters) {\n\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_uninstallEvent: function(type) {\n\t\t\tvar counters = this._eventCounters;\n\t\t\tif (counters) {\n\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\tvar size = Size.read(arguments, 1);\n\t\t\tif (size.isZero())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t}\n\t\tthis._context = canvas.getContext('2d');\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar browser = paper.browser,\n\t\t\tpixels;\n\t\tif (browser && browser.firefox) {\n\t\t\tvar parent = this._element.parentNode,\n\t\t\t\ttemp = document.createElement('div');\n\t\t\ttemp.style.fontSize = size;\n\t\t\tparent.appendChild(temp);\n\t\t\tpixels = parseFloat(DomElement.getStyles(temp).fontSize);\n\t\t\tparent.removeChild(temp);\n\t\t} else {\n\t\t\tvar ctx = this._context,\n\t\t\t\tprevFont = ctx.font;\n\t\t\tctx.font = size + ' serif';\n\t\t\tpixels = parseFloat(ctx.font);\n\t\t\tctx.font = prevFont;\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function(force) {\n\t\tvar project = this._project;\n\t\tif (!project || !force && !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n},\nnew function() {\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tcommandFixMap,\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers) {\n\t\t\tmodifiers[name] = down;\n\t\t\tvar browser = paper.browser;\n\t\t\tif (name === 'command' && browser && browser.mac) {\n\t\t\t\tif (down) {\n\t\t\t\t\tcommandFixMap = {};\n\t\t\t\t} else {\n\t\t\t\t\tfor (var code in commandFixMap) {\n\t\t\t\t\t\tif (code in charCodeMap)\n\t\t\t\t\t\t\thandleKey(false, code, commandFixMap[code], event);\n\t\t\t\t\t}\n\t\t\t\t\tcommandFixMap = null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (down && commandFixMap) {\n\t\t\tcommandFixMap[keyCode] = charCode;\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (minDistance != null && this._maxDistance != null\n\t\t\t\t&& minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && maxDistance != null\n\t\t\t\t&& maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = this._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tif (maxDistance != null && maxDistance != 0) {\n\t\t\t\t\tif (distance > maxDistance) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDistance));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback, async) {\n\t\tasync = (async === undefined) ? true : async;\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, async);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize(),\n\t\t\timage = item.getImage();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = options.embedImages === false && image && image.src\n\t\t\t\t|| item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tvar matchShapes = options.matchShapes;\n\t\tif (matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (matchShapes && !item.hasHandles()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tif (isRoot) {\n\t\t\tvar defs = node.querySelectorAll('defs');\n\t\t\tfor (var i = 0, l = defs.length; i < l; i++) {\n\t\t\t\timportSVG(defs[i], options, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& childNode.nodeName.toLowerCase() !== 'defs'\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.set(Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {}), {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (item && Base.pick(options.applyMatrix, applyMatrix))\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\nBase.exports.PaperScript = (function() {\n\tvar exports, define,\n\t\tscope = this;\n!function(e,r){return\"object\"==typeof exports&&\"object\"==typeof module?r(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],r):(r(e.acorn||(e.acorn={})),void 0)}(this,function(e){\"use strict\";function r(e){fr=e||{};for(var r in mr)Object.prototype.hasOwnProperty.call(fr,r)||(fr[r]=mr[r]);hr=fr.sourceFile||null}function t(e,r){var t=vr(dr,e);r+=\" (\"+t.line+\":\"+t.column+\")\";var n=new SyntaxError(r);throw n.pos=e,n.loc=t,n.raisedAt=br,n}function n(e){function r(e){if(1==e.length)return t+=\"return str === \"+JSON.stringify(e[0])+\";\";t+=\"switch(str){\";for(var r=0;r<e.length;++r)t+=\"case \"+JSON.stringify(e[r])+\":\";t+=\"return true}return false;\"}e=e.split(\" \");var t=\"\",n=[];e:for(var a=0;a<e.length;++a){for(var o=0;o<n.length;++o)if(n[o][0].length==e[a].length){n[o].push(e[a]);continue e}n.push([e[a]])}if(n.length>3){n.sort(function(e,r){return r.length-e.length}),t+=\"switch(str.length){\";for(var a=0;a<n.length;++a){var i=n[a];t+=\"case \"+i[0].length+\":\",r(i)}t+=\"}\"}else r(e);return new Function(\"str\",t)}function a(){this.line=Ar,this.column=br-Sr}function o(){Ar=1,br=Sr=0,Er=!0,u()}function i(e,r){gr=br,fr.locations&&(kr=new a),wr=e,u(),Cr=r,Er=e.beforeExpr}function s(){var e=fr.onComment&&fr.locations&&new a,r=br,n=dr.indexOf(\"*/\",br+=2);if(-1===n&&t(br-2,\"Unterminated comment\"),br=n+2,fr.locations){Kt.lastIndex=r;for(var o;(o=Kt.exec(dr))&&o.index<br;)++Ar,Sr=o.index+o[0].length}fr.onComment&&fr.onComment(!0,dr.slice(r+2,n),r,br,e,fr.locations&&new a)}function c(){for(var e=br,r=fr.onComment&&fr.locations&&new a,t=dr.charCodeAt(br+=2);pr>br&&10!==t&&13!==t&&8232!==t&&8233!==t;)++br,t=dr.charCodeAt(br);fr.onComment&&fr.onComment(!1,dr.slice(e+2,br),e,br,r,fr.locations&&new a)}function u(){for(;pr>br;){var e=dr.charCodeAt(br);if(32===e)++br;else if(13===e){++br;var r=dr.charCodeAt(br);10===r&&++br,fr.locations&&(++Ar,Sr=br)}else if(10===e||8232===e||8233===e)++br,fr.locations&&(++Ar,Sr=br);else if(e>8&&14>e)++br;else if(47===e){var r=dr.charCodeAt(br+1);if(42===r)s();else{if(47!==r)break;c()}}else if(160===e)++br;else{if(!(e>=5760&&Jt.test(String.fromCharCode(e))))break;++br}}}function l(){var e=dr.charCodeAt(br+1);return e>=48&&57>=e?E(!0):(++br,i(xt))}function f(){var e=dr.charCodeAt(br+1);return Er?(++br,k()):61===e?x(Et,2):x(wt,1)}function d(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Dt,1)}function p(e){var r=dr.charCodeAt(br+1);return r===e?x(124===e?Lt:Ut,2):61===r?x(Et,2):x(124===e?Rt:Tt,1)}function h(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Vt,1)}function m(e){var r=dr.charCodeAt(br+1);return r===e?45==r&&62==dr.charCodeAt(br+2)&&Gt.test(dr.slice(Lr,br))?(br+=3,c(),u(),g()):x(St,2):61===r?x(Et,2):x(At,1)}function v(e){var r=dr.charCodeAt(br+1),t=1;return r===e?(t=62===e&&62===dr.charCodeAt(br+2)?3:2,61===dr.charCodeAt(br+t)?x(Et,t+1):x(jt,t)):33==r&&60==e&&45==dr.charCodeAt(br+2)&&45==dr.charCodeAt(br+3)?(br+=4,c(),u(),g()):(61===r&&(t=61===dr.charCodeAt(br+2)?3:2),x(Ot,t))}function b(e){var r=dr.charCodeAt(br+1);return 61===r?x(qt,61===dr.charCodeAt(br+2)?3:2):x(61===e?Ct:It,1)}function y(e){switch(e){case 46:return l();case 40:return++br,i(mt);case 41:return++br,i(vt);case 59:return++br,i(yt);case 44:return++br,i(bt);case 91:return++br,i(ft);case 93:return++br,i(dt);case 123:return++br,i(pt);case 125:return++br,i(ht);case 58:return++br,i(gt);case 63:return++br,i(kt);case 48:var r=dr.charCodeAt(br+1);if(120===r||88===r)return C();case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return E(!1);case 34:case 39:return A(e);case 47:return f(e);case 37:case 42:return d();case 124:case 38:return p(e);case 94:return h();case 43:case 45:return m(e);case 60:case 62:return v(e);case 61:case 33:return b(e);case 126:return x(It,1)}return!1}function g(e){if(e?br=yr+1:yr=br,fr.locations&&(xr=new a),e)return k();if(br>=pr)return i(Br);var r=dr.charCodeAt(br);if(Qt(r)||92===r)return L();var n=y(r);if(n===!1){var o=String.fromCharCode(r);if(\"\\\\\"===o||$t.test(o))return L();t(br,\"Unexpected character '\"+o+\"'\")}return n}function x(e,r){var t=dr.slice(br,br+r);br+=r,i(e,t)}function k(){for(var e,r,n=\"\",a=br;;){br>=pr&&t(a,\"Unterminated regular expression\");var o=dr.charAt(br);if(Gt.test(o)&&t(a,\"Unterminated regular expression\"),e)e=!1;else{if(\"[\"===o)r=!0;else if(\"]\"===o&&r)r=!1;else if(\"/\"===o&&!r)break;e=\"\\\\\"===o}++br}var n=dr.slice(a,br);++br;var s=I();return s&&!/^[gmsiy]*$/.test(s)&&t(a,\"Invalid regexp flag\"),i(jr,new RegExp(n,s))}function w(e,r){for(var t=br,n=0,a=0,o=null==r?1/0:r;o>a;++a){var i,s=dr.charCodeAt(br);if(i=s>=97?s-97+10:s>=65?s-65+10:s>=48&&57>=s?s-48:1/0,i>=e)break;++br,n=n*e+i}return br===t||null!=r&&br-t!==r?null:n}function C(){br+=2;var e=w(16);return null==e&&t(yr+2,\"Expected hexadecimal number\"),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\"),i(Or,e)}function E(e){var r=br,n=!1,a=48===dr.charCodeAt(br);e||null!==w(10)||t(r,\"Invalid number\"),46===dr.charCodeAt(br)&&(++br,w(10),n=!0);var o=dr.charCodeAt(br);(69===o||101===o)&&(o=dr.charCodeAt(++br),(43===o||45===o)&&++br,null===w(10)&&t(r,\"Invalid number\"),n=!0),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\");var s,c=dr.slice(r,br);return n?s=parseFloat(c):a&&1!==c.length?/[89]/.test(c)||Tr?t(r,\"Invalid number\"):s=parseInt(c,8):s=parseInt(c,10),i(Or,s)}function A(e){br++;for(var r=\"\";;){br>=pr&&t(yr,\"Unterminated string constant\");var n=dr.charCodeAt(br);if(n===e)return++br,i(Dr,r);if(92===n){n=dr.charCodeAt(++br);var a=/^[0-7]+/.exec(dr.slice(br,br+3));for(a&&(a=a[0]);a&&parseInt(a,8)>255;)a=a.slice(0,a.length-1);if(\"0\"===a&&(a=null),++br,a)Tr&&t(br-2,\"Octal literal in strict mode\"),r+=String.fromCharCode(parseInt(a,8)),br+=a.length-1;else switch(n){case 110:r+=\"\\n\";break;case 114:r+=\"\\r\";break;case 120:r+=String.fromCharCode(S(2));break;case 117:r+=String.fromCharCode(S(4));break;case 85:r+=String.fromCharCode(S(8));break;case 116:r+=\"\t\";break;case 98:r+=\"\\b\";break;case 118:r+=\"\u000b\";break;case 102:r+=\"\\f\";break;case 48:r+=\"\\0\";break;case 13:10===dr.charCodeAt(br)&&++br;case 10:fr.locations&&(Sr=br,++Ar);break;default:r+=String.fromCharCode(n)}}else(13===n||10===n||8232===n||8233===n)&&t(yr,\"Unterminated string constant\"),r+=String.fromCharCode(n),++br}}function S(e){var r=w(16,e);return null===r&&t(yr,\"Bad character escape sequence\"),r}function I(){Bt=!1;for(var e,r=!0,n=br;;){var a=dr.charCodeAt(br);if(Yt(a))Bt&&(e+=dr.charAt(br)),++br;else{if(92!==a)break;Bt||(e=dr.slice(n,br)),Bt=!0,117!=dr.charCodeAt(++br)&&t(br,\"Expecting Unicode escape sequence \\\\uXXXX\"),++br;var o=S(4),i=String.fromCharCode(o);i||t(br-1,\"Invalid Unicode escape\"),(r?Qt(o):Yt(o))||t(br-4,\"Invalid Unicode escape\"),e+=i}r=!1}return Bt?e:dr.slice(n,br)}function L(){var e=I(),r=Fr;return Bt||(Wt(e)?r=lt[e]:(fr.forbidReserved&&(3===fr.ecmaVersion?Mt:zt)(e)||Tr&&Xt(e))&&t(yr,\"The keyword '\"+e+\"' is reserved\")),i(r,e)}function U(){Ir=yr,Lr=gr,Ur=kr,g()}function R(e){if(Tr=e,br=Lr,fr.locations)for(;Sr>br;)Sr=dr.lastIndexOf(\"\\n\",Sr-2)+1,--Ar;u(),g()}function V(){this.type=null,this.start=yr,this.end=null}function T(){this.start=xr,this.end=null,null!==hr&&(this.source=hr)}function q(){var e=new V;return fr.locations&&(e.loc=new T),fr.ranges&&(e.range=[yr,0]),e}function O(e){var r=new V;return r.start=e.start,fr.locations&&(r.loc=new T,r.loc.start=e.loc.start),fr.ranges&&(r.range=[e.range[0],0]),r}function j(e,r){return e.type=r,e.end=Lr,fr.locations&&(e.loc.end=Ur),fr.ranges&&(e.range[1]=Lr),e}function D(e){return fr.ecmaVersion>=5&&\"ExpressionStatement\"===e.type&&\"Literal\"===e.expression.type&&\"use strict\"===e.expression.value}function F(e){return wr===e?(U(),!0):void 0}function B(){return!fr.strictSemicolons&&(wr===Br||wr===ht||Gt.test(dr.slice(Lr,yr)))}function M(){F(yt)||B()||X()}function z(e){wr===e?U():X()}function X(){t(yr,\"Unexpected token\")}function N(e){\"Identifier\"!==e.type&&\"MemberExpression\"!==e.type&&t(e.start,\"Assigning to rvalue\"),Tr&&\"Identifier\"===e.type&&Nt(e.name)&&t(e.start,\"Assigning to \"+e.name+\" in strict mode\")}function W(e){Ir=Lr=br,fr.locations&&(Ur=new a),Rr=Tr=null,Vr=[],g();var r=e||q(),t=!0;for(e||(r.body=[]);wr!==Br;){var n=J();r.body.push(n),t&&D(n)&&R(!0),t=!1}return j(r,\"Program\")}function J(){(wr===wt||wr===Et&&\"/=\"==Cr)&&g(!0);var e=wr,r=q();switch(e){case Mr:case Nr:U();var n=e===Mr;F(yt)||B()?r.label=null:wr!==Fr?X():(r.label=lr(),M());for(var a=0;a<Vr.length;++a){var o=Vr[a];if(null==r.label||o.name===r.label.name){if(null!=o.kind&&(n||\"loop\"===o.kind))break;if(r.label&&n)break}}return a===Vr.length&&t(r.start,\"Unsyntactic \"+e.keyword),j(r,n?\"BreakStatement\":\"ContinueStatement\");case Wr:return U(),M(),j(r,\"DebuggerStatement\");case Pr:return U(),Vr.push(Zt),r.body=J(),Vr.pop(),z(tt),r.test=P(),M(),j(r,\"DoWhileStatement\");case _r:if(U(),Vr.push(Zt),z(mt),wr===yt)return $(r,null);if(wr===rt){var i=q();return U(),G(i,!0),j(i,\"VariableDeclaration\"),1===i.declarations.length&&F(ut)?_(r,i):$(r,i)}var i=K(!1,!0);return F(ut)?(N(i),_(r,i)):$(r,i);case Gr:return U(),cr(r,!0);case Kr:return U(),r.test=P(),r.consequent=J(),r.alternate=F(Hr)?J():null,j(r,\"IfStatement\");case Qr:return Rr||t(yr,\"'return' outside of function\"),U(),F(yt)||B()?r.argument=null:(r.argument=K(),M()),j(r,\"ReturnStatement\");case Yr:U(),r.discriminant=P(),r.cases=[],z(pt),Vr.push(en);for(var s,c;wr!=ht;)if(wr===zr||wr===Jr){var u=wr===zr;s&&j(s,\"SwitchCase\"),r.cases.push(s=q()),s.consequent=[],U(),u?s.test=K():(c&&t(Ir,\"Multiple default clauses\"),c=!0,s.test=null),z(gt)}else s||X(),s.consequent.push(J());return s&&j(s,\"SwitchCase\"),U(),Vr.pop(),j(r,\"SwitchStatement\");case Zr:return U(),Gt.test(dr.slice(Lr,yr))&&t(Lr,\"Illegal newline after throw\"),r.argument=K(),M(),j(r,\"ThrowStatement\");case et:if(U(),r.block=H(),r.handler=null,wr===Xr){var l=q();U(),z(mt),l.param=lr(),Tr&&Nt(l.param.name)&&t(l.param.start,\"Binding \"+l.param.name+\" in strict mode\"),z(vt),l.guard=null,l.body=H(),r.handler=j(l,\"CatchClause\")}return r.guardedHandlers=qr,r.finalizer=F($r)?H():null,r.handler||r.finalizer||t(r.start,\"Missing catch or finally clause\"),j(r,\"TryStatement\");case rt:return U(),G(r),M(),j(r,\"VariableDeclaration\");case tt:return U(),r.test=P(),Vr.push(Zt),r.body=J(),Vr.pop(),j(r,\"WhileStatement\");case nt:return Tr&&t(yr,\"'with' in strict mode\"),U(),r.object=P(),r.body=J(),j(r,\"WithStatement\");case pt:return H();case yt:return U(),j(r,\"EmptyStatement\");default:var f=Cr,d=K();if(e===Fr&&\"Identifier\"===d.type&&F(gt)){for(var a=0;a<Vr.length;++a)Vr[a].name===f&&t(d.start,\"Label '\"+f+\"' is already declared\");var p=wr.isLoop?\"loop\":wr===Yr?\"switch\":null;return Vr.push({name:f,kind:p}),r.body=J(),Vr.pop(),r.label=d,j(r,\"LabeledStatement\")}return r.expression=d,M(),j(r,\"ExpressionStatement\")}}function P(){z(mt);var e=K();return z(vt),e}function H(e){var r,t=q(),n=!0,a=!1;for(t.body=[],z(pt);!F(ht);){var o=J();t.body.push(o),n&&e&&D(o)&&(r=a,R(a=!0)),n=!1}return a&&!r&&R(!1),j(t,\"BlockStatement\")}function $(e,r){return e.init=r,z(yt),e.test=wr===yt?null:K(),z(yt),e.update=wr===vt?null:K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForStatement\")}function _(e,r){return e.left=r,e.right=K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForInStatement\")}function G(e,r){for(e.declarations=[],e.kind=\"var\";;){var n=q();if(n.id=lr(),Tr&&Nt(n.id.name)&&t(n.id.start,\"Binding \"+n.id.name+\" in strict mode\"),n.init=F(Ct)?K(!0,r):null,e.declarations.push(j(n,\"VariableDeclarator\")),!F(bt))break}return e}function K(e,r){var t=Q(r);if(!e&&wr===bt){var n=O(t);for(n.expressions=[t];F(bt);)n.expressions.push(Q(r));return j(n,\"SequenceExpression\")}return t}function Q(e){var r=Y(e);if(wr.isAssign){var t=O(r);return t.operator=Cr,t.left=r,U(),t.right=Q(e),N(r),j(t,\"AssignmentExpression\")}return r}function Y(e){var r=Z(e);if(F(kt)){var t=O(r);return t.test=r,t.consequent=K(!0),z(gt),t.alternate=K(!0,e),j(t,\"ConditionalExpression\")}return r}function Z(e){return er(rr(),-1,e)}function er(e,r,t){var n=wr.binop;if(null!=n&&(!t||wr!==ut)&&n>r){var a=O(e);a.left=e,a.operator=Cr,U(),a.right=er(rr(),n,t);var o=j(a,/&&|\\|\\|/.test(a.operator)?\"LogicalExpression\":\"BinaryExpression\");return er(o,r,t)}return e}function rr(){if(wr.prefix){var e=q(),r=wr.isUpdate;return e.operator=Cr,e.prefix=!0,Er=!0,U(),e.argument=rr(),r?N(e.argument):Tr&&\"delete\"===e.operator&&\"Identifier\"===e.argument.type&&t(e.start,\"Deleting local variable in strict mode\"),j(e,r?\"UpdateExpression\":\"UnaryExpression\")}for(var n=tr();wr.postfix&&!B();){var e=O(n);e.operator=Cr,e.prefix=!1,e.argument=n,N(n),U(),n=j(e,\"UpdateExpression\")}return n}function tr(){return nr(ar())}function nr(e,r){if(F(xt)){var t=O(e);return t.object=e,t.property=lr(!0),t.computed=!1,nr(j(t,\"MemberExpression\"),r)}if(F(ft)){var t=O(e);return t.object=e,t.property=K(),t.computed=!0,z(dt),nr(j(t,\"MemberExpression\"),r)}if(!r&&F(mt)){var t=O(e);return t.callee=e,t.arguments=ur(vt,!1),nr(j(t,\"CallExpression\"),r)}return e}function ar(){switch(wr){case ot:var e=q();return U(),j(e,\"ThisExpression\");case Fr:return lr();case Or:case Dr:case jr:var e=q();return e.value=Cr,e.raw=dr.slice(yr,gr),U(),j(e,\"Literal\");case it:case st:case ct:var e=q();return e.value=wr.atomValue,e.raw=wr.keyword,U(),j(e,\"Literal\");case mt:var r=xr,t=yr;U();var n=K();return n.start=t,n.end=gr,fr.locations&&(n.loc.start=r,n.loc.end=kr),fr.ranges&&(n.range=[t,gr]),z(vt),n;case ft:var e=q();return U(),e.elements=ur(dt,!0,!0),j(e,\"ArrayExpression\");case pt:return ir();case Gr:var e=q();return U(),cr(e,!1);case at:return or();default:X()}}function or(){var e=q();return U(),e.callee=nr(ar(),!0),e.arguments=F(mt)?ur(vt,!1):qr,j(e,\"NewExpression\")}function ir(){var e=q(),r=!0,n=!1;for(e.properties=[],U();!F(ht);){if(r)r=!1;else if(z(bt),fr.allowTrailingCommas&&F(ht))break;var a,o={key:sr()},i=!1;if(F(gt)?(o.value=K(!0),a=o.kind=\"init\"):fr.ecmaVersion>=5&&\"Identifier\"===o.key.type&&(\"get\"===o.key.name||\"set\"===o.key.name)?(i=n=!0,a=o.kind=o.key.name,o.key=sr(),wr!==mt&&X(),o.value=cr(q(),!1)):X(),\"Identifier\"===o.key.type&&(Tr||n))for(var s=0;s<e.properties.length;++s){var c=e.properties[s];if(c.key.name===o.key.name){var u=a==c.kind||i&&\"init\"===c.kind||\"init\"===a&&(\"get\"===c.kind||\"set\"===c.kind);u&&!Tr&&\"init\"===a&&\"init\"===c.kind&&(u=!1),u&&t(o.key.start,\"Redefinition of property\")}}e.properties.push(o)}return j(e,\"ObjectExpression\")}function sr(){return wr===Or||wr===Dr?ar():lr(!0)}function cr(e,r){wr===Fr?e.id=lr():r?X():e.id=null,e.params=[];var n=!0;for(z(mt);!F(vt);)n?n=!1:z(bt),e.params.push(lr());var a=Rr,o=Vr;if(Rr=!0,Vr=[],e.body=H(!0),Rr=a,Vr=o,Tr||e.body.body.length&&D(e.body.body[0]))for(var i=e.id?-1:0;i<e.params.length;++i){var s=0>i?e.id:e.params[i];if((Xt(s.name)||Nt(s.name))&&t(s.start,\"Defining '\"+s.name+\"' in strict mode\"),i>=0)for(var c=0;i>c;++c)s.name===e.params[c].name&&t(s.start,\"Argument name clash in strict mode\")}return j(e,r?\"FunctionDeclaration\":\"FunctionExpression\")}function ur(e,r,t){for(var n=[],a=!0;!F(e);){if(a)a=!1;else if(z(bt),r&&fr.allowTrailingCommas&&F(e))break;t&&wr===bt?n.push(null):n.push(K(!0))}return n}function lr(e){var r=q();return r.name=wr===Fr?Cr:e&&!fr.forbidReserved&&wr.keyword||X(),Er=!1,U(),j(r,\"Identifier\")}e.version=\"0.4.0\";var fr,dr,pr,hr;e.parse=function(e,t){return dr=String(e),pr=dr.length,r(t),o(),W(fr.program)};var mr=e.defaultOptions={ecmaVersion:5,strictSemicolons:!1,allowTrailingCommas:!0,forbidReserved:!1,locations:!1,onComment:null,ranges:!1,program:null,sourceFile:null},vr=e.getLineInfo=function(e,r){for(var t=1,n=0;;){Kt.lastIndex=n;var a=Kt.exec(e);if(!(a&&a.index<r))break;++t,n=a.index+a[0].length}return{line:t,column:r-n}};e.tokenize=function(e,t){function n(e){return g(e),a.start=yr,a.end=gr,a.startLoc=xr,a.endLoc=kr,a.type=wr,a.value=Cr,a}dr=String(e),pr=dr.length,r(t),o();var a={};return n.jumpTo=function(e,r){if(br=e,fr.locations){Ar=1,Sr=Kt.lastIndex=0;for(var t;(t=Kt.exec(dr))&&t.index<e;)++Ar,Sr=t.index+t[0].length}Er=r,u()},n};var br,yr,gr,xr,kr,wr,Cr,Er,Ar,Sr,Ir,Lr,Ur,Rr,Vr,Tr,qr=[],Or={type:\"num\"},jr={type:\"regexp\"},Dr={type:\"string\"},Fr={type:\"name\"},Br={type:\"eof\"},Mr={keyword:\"break\"},zr={keyword:\"case\",beforeExpr:!0},Xr={keyword:\"catch\"},Nr={keyword:\"continue\"},Wr={keyword:\"debugger\"},Jr={keyword:\"default\"},Pr={keyword:\"do\",isLoop:!0},Hr={keyword:\"else\",beforeExpr:!0},$r={keyword:\"finally\"},_r={keyword:\"for\",isLoop:!0},Gr={keyword:\"function\"},Kr={keyword:\"if\"},Qr={keyword:\"return\",beforeExpr:!0},Yr={keyword:\"switch\"},Zr={keyword:\"throw\",beforeExpr:!0},et={keyword:\"try\"},rt={keyword:\"var\"},tt={keyword:\"while\",isLoop:!0},nt={keyword:\"with\"},at={keyword:\"new\",beforeExpr:!0},ot={keyword:\"this\"},it={keyword:\"null\",atomValue:null},st={keyword:\"true\",atomValue:!0},ct={keyword:\"false\",atomValue:!1},ut={keyword:\"in\",binop:7,beforeExpr:!0},lt={\"break\":Mr,\"case\":zr,\"catch\":Xr,\"continue\":Nr,\"debugger\":Wr,\"default\":Jr,\"do\":Pr,\"else\":Hr,\"finally\":$r,\"for\":_r,\"function\":Gr,\"if\":Kr,\"return\":Qr,\"switch\":Yr,\"throw\":Zr,\"try\":et,\"var\":rt,\"while\":tt,\"with\":nt,\"null\":it,\"true\":st,\"false\":ct,\"new\":at,\"in\":ut,\"instanceof\":{keyword:\"instanceof\",binop:7,beforeExpr:!0},\"this\":ot,\"typeof\":{keyword:\"typeof\",prefix:!0,beforeExpr:!0},\"void\":{keyword:\"void\",prefix:!0,beforeExpr:!0},\"delete\":{keyword:\"delete\",prefix:!0,beforeExpr:!0}},ft={type:\"[\",beforeExpr:!0},dt={type:\"]\"},pt={type:\"{\",beforeExpr:!0},ht={type:\"}\"},mt={type:\"(\",beforeExpr:!0},vt={type:\")\"},bt={type:\",\",beforeExpr:!0},yt={type:\";\",beforeExpr:!0},gt={type:\":\",beforeExpr:!0},xt={type:\".\"},kt={type:\"?\",beforeExpr:!0},wt={binop:10,beforeExpr:!0},Ct={isAssign:!0,beforeExpr:!0},Et={isAssign:!0,beforeExpr:!0},At={binop:9,prefix:!0,beforeExpr:!0},St={postfix:!0,prefix:!0,isUpdate:!0},It={prefix:!0,beforeExpr:!0},Lt={binop:1,beforeExpr:!0},Ut={binop:2,beforeExpr:!0},Rt={binop:3,beforeExpr:!0},Vt={binop:4,beforeExpr:!0},Tt={binop:5,beforeExpr:!0},qt={binop:6,beforeExpr:!0},Ot={binop:7,beforeExpr:!0},jt={binop:8,beforeExpr:!0},Dt={binop:10,beforeExpr:!0};e.tokTypes={bracketL:ft,bracketR:dt,braceL:pt,braceR:ht,parenL:mt,parenR:vt,comma:bt,semi:yt,colon:gt,dot:xt,question:kt,slash:wt,eq:Ct,name:Fr,eof:Br,num:Or,regexp:jr,string:Dr};for(var Ft in lt)e.tokTypes[\"_\"+Ft]=lt[Ft];var Bt,Mt=n(\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\"),zt=n(\"class enum extends super const export import\"),Xt=n(\"implements interface let package private protected public static yield\"),Nt=n(\"eval arguments\"),Wt=n(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\"),Jt=/[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/,Pt=\"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\",Ht=\"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\",$t=new RegExp(\"[\"+Pt+\"]\"),_t=new RegExp(\"[\"+Pt+Ht+\"]\"),Gt=/[\\n\\r\\u2028\\u2029]/,Kt=/\\r\\n|[\\n\\r\\u2028\\u2029]/g,Qt=e.isIdentifierStart=function(e){return 65>e?36===e:91>e?!0:97>e?95===e:123>e?!0:e>=170&&$t.test(String.fromCharCode(e))},Yt=e.isIdentifierChar=function(e){return 48>e?36===e:58>e?!0:65>e?!1:91>e?!0:97>e?95===e:123>e?!0:e>=170&&_t.test(String.fromCharCode(e))},Zt={kind:\"loop\"},en={kind:\"switch\"}});\n\n\tvar binaryOperators = {\n\t\t'+': '__add',\n\t\t'-': '__subtract',\n\t\t'*': '__multiply',\n\t\t'/': '__divide',\n\t\t'%': '__modulo',\n\t\t'==': 'equals',\n\t\t'!=': 'equals'\n\t};\n\n\tvar unaryOperators = {\n\t\t'-': '__negate',\n\t\t'+': null\n\t};\n\n\tvar fields = Base.each(\n\t\t['add', 'subtract', 'multiply', 'divide', 'modulo', 'negate'],\n\t\tfunction(name) {\n\t\t\tthis['__' + name] = '#' + name;\n\t\t},\n\t\t{}\n\t);\n\tPoint.inject(fields);\n\tSize.inject(fields);\n\tColor.inject(fields);\n\n\tfunction __$__(left, operator, right) {\n\t\tvar handler = binaryOperators[operator];\n\t\tif (left && left[handler]) {\n\t\t\tvar res = left[handler](right);\n\t\t\treturn operator === '!=' ? !res : res;\n\t\t}\n\t\tswitch (operator) {\n\t\tcase '+': return left + right;\n\t\tcase '-': return left - right;\n\t\tcase '*': return left * right;\n\t\tcase '/': return left / right;\n\t\tcase '%': return left % right;\n\t\tcase '==': return left == right;\n\t\tcase '!=': return left != right;\n\t\t}\n\t}\n\n\tfunction $__(operator, value) {\n\t\tvar handler = unaryOperators[operator];\n\t\tif (handler && value && value[handler])\n\t\t\treturn value[handler]();\n\t\tswitch (operator) {\n\t\tcase '+': return +value;\n\t\tcase '-': return -value;\n\t\t}\n\t}\n\n\tfunction parse(code, options) {\n\t\treturn scope.acorn.parse(code, options);\n\t}\n\n\tfunction compile(code, url, options) {\n\t\tif (!code)\n\t\t\treturn '';\n\t\toptions = options || {};\n\t\turl = url || '';\n\n\t\tvar insertions = [];\n\n\t\tfunction getOffset(offset) {\n\t\t\tfor (var i = 0, l = insertions.length; i < l; i++) {\n\t\t\t\tvar insertion = insertions[i];\n\t\t\t\tif (insertion[0] >= offset)\n\t\t\t\t\tbreak;\n\t\t\t\toffset += insertion[1];\n\t\t\t}\n\t\t\treturn offset;\n\t\t}\n\n\t\tfunction getCode(node) {\n\t\t\treturn code.substring(getOffset(node.range[0]),\n\t\t\t\t\tgetOffset(node.range[1]));\n\t\t}\n\n\t\tfunction getBetween(left, right) {\n\t\t\treturn code.substring(getOffset(left.range[1]),\n\t\t\t\t\tgetOffset(right.range[0]));\n\t\t}\n\n\t\tfunction replaceCode(node, str) {\n\t\t\tvar start = getOffset(node.range[0]),\n\t\t\t\tend = getOffset(node.range[1]),\n\t\t\t\tinsert = 0;\n\t\t\tfor (var i = insertions.length - 1; i >= 0; i--) {\n\t\t\t\tif (start > insertions[i][0]) {\n\t\t\t\t\tinsert = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinsertions.splice(insert, 0, [start, str.length - end + start]);\n\t\t\tcode = code.substring(0, start) + str + code.substring(end);\n\t\t}\n\n\t\tfunction walkAST(node, parent) {\n\t\t\tif (!node)\n\t\t\t\treturn;\n\t\t\tfor (var key in node) {\n\t\t\t\tif (key === 'range' || key === 'loc')\n\t\t\t\t\tcontinue;\n\t\t\t\tvar value = node[key];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (var i = 0, l = value.length; i < l; i++)\n\t\t\t\t\t\twalkAST(value[i], node);\n\t\t\t\t} else if (value && typeof value === 'object') {\n\t\t\t\t\twalkAST(value, node);\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch (node.type) {\n\t\t\tcase 'UnaryExpression':\n\t\t\t\tif (node.operator in unaryOperators\n\t\t\t\t\t\t&& node.argument.type !== 'Literal') {\n\t\t\t\t\tvar arg = getCode(node.argument);\n\t\t\t\t\treplaceCode(node, '$__(\"' + node.operator + '\", '\n\t\t\t\t\t\t\t+ arg + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'BinaryExpression':\n\t\t\t\tif (node.operator in binaryOperators\n\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\tright = getCode(node.right),\n\t\t\t\t\t\tbetween = getBetween(node.left, node.right),\n\t\t\t\t\t\toperator = node.operator;\n\t\t\t\t\treplaceCode(node, '__$__(' + left + ','\n\t\t\t\t\t\t\t+ between.replace(new RegExp('\\\\' + operator),\n\t\t\t\t\t\t\t\t'\"' + operator + '\"')\n\t\t\t\t\t\t\t+ ', ' + right + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'UpdateExpression':\n\t\t\tcase 'AssignmentExpression':\n\t\t\t\tvar parentType = parent && parent.type;\n\t\t\t\tif (!(\n\t\t\t\t\t\tparentType === 'ForStatement'\n\t\t\t\t\t\t|| parentType === 'BinaryExpression'\n\t\t\t\t\t\t\t&& /^[=!<>]/.test(parent.operator)\n\t\t\t\t\t\t|| parentType === 'MemberExpression' && parent.computed\n\t\t\t\t)) {\n\t\t\t\t\tif (node.type === 'UpdateExpression') {\n\t\t\t\t\t\tvar arg = getCode(node.argument),\n\t\t\t\t\t\t\texp = '__$__(' + arg + ', \"' + node.operator[0]\n\t\t\t\t\t\t\t\t\t+ '\", 1)',\n\t\t\t\t\t\t\tstr = arg + ' = ' + exp;\n\t\t\t\t\t\tif (!node.prefix\n\t\t\t\t\t\t\t\t&& (parentType === 'AssignmentExpression'\n\t\t\t\t\t\t\t\t\t|| parentType === 'VariableDeclarator')) {\n\t\t\t\t\t\t\tif (getCode(parent.left || parent.id) === arg)\n\t\t\t\t\t\t\t\tstr = exp;\n\t\t\t\t\t\t\tstr = arg + '; ' + str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplaceCode(node, str);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (/^.=$/.test(node.operator)\n\t\t\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\t\t\tright = getCode(node.right);\n\t\t\t\t\t\t\treplaceCode(node, left + ' = __$__(' + left + ', \"'\n\t\t\t\t\t\t\t\t\t+ node.operator[0] + '\", ' + right + ')');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar sourceMap = null,\n\t\t\tbrowser = paper.browser,\n\t\t\tversion = browser.versionNumber,\n\t\t\tlineBreaks = /\\r\\n|\\n|\\r/mg;\n\t\tif (browser.chrome && version >= 30\n\t\t\t\t|| browser.webkit && version >= 537.76\n\t\t\t\t|| browser.firefox && version >= 23) {\n\t\t\tvar offset = 0;\n\t\t\tif (window.location.href.indexOf(url) === 0) {\n\t\t\t\tvar html = document.getElementsByTagName('html')[0].innerHTML;\n\t\t\t\toffset = html.substr(0, html.indexOf(code) + 1).match(\n\t\t\t\t\t\tlineBreaks).length + 1;\n\t\t\t}\n\t\t\tvar mappings = ['AAAA'];\n\t\t\tmappings.length = (code.match(lineBreaks) || []).length + 1 + offset;\n\t\t\tsourceMap = {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: url,\n\t\t\t\tnames:[],\n\t\t\t\tmappings: mappings.join(';AACA'),\n\t\t\t\tsourceRoot: '',\n\t\t\t\tsources: [url]\n\t\t\t};\n\t\t\tvar source = options.source || !url && code;\n\t\t\tif (source)\n\t\t\t\tsourceMap.sourcesContent = [source];\n\t\t}\n\t\twalkAST(parse(code, { ranges: true }));\n\t\tif (sourceMap) {\n\t\t\tcode = new Array(offset + 1).join('\\n') + code\n\t\t\t\t\t+ \"\\n//# sourceMappingURL=data:application/json;base64,\"\n\t\t\t\t\t+ (btoa(unescape(encodeURIComponent(\n\t\t\t\t\t\tJSON.stringify(sourceMap)))))\n\t\t\t\t\t+ \"\\n//# sourceURL=\" + (url || 'paperscript');\n\t\t}\n\t\treturn code;\n\t}\n\n\tfunction execute(code, scope, url, options) {\n\t\tpaper = scope;\n\t\tvar view = scope.getView(),\n\t\t\ttool = /\\s+on(?:Key|Mouse)(?:Up|Down|Move|Drag)\\b/.test(code)\n\t\t\t\t\t? new Tool()\n\t\t\t\t\t: null,\n\t\t\ttoolHandlers = tool ? tool._events : [],\n\t\t\thandlers = ['onFrame', 'onResize'].concat(toolHandlers),\n\t\t\tparams = [],\n\t\t\targs = [],\n\t\t\tfunc;\n\t\tcode = compile(code, url, options);\n\t\tfunction expose(scope, hidden) {\n\t\t\tfor (var key in scope) {\n\t\t\t\tif ((hidden || !/^_/.test(key)) && new RegExp('([\\\\b\\\\s\\\\W]|^)'\n\t\t\t\t\t\t+ key.replace(/\\$/g, '\\\\$') + '\\\\b').test(code)) {\n\t\t\t\t\tparams.push(key);\n\t\t\t\t\targs.push(scope[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\texpose({ __$__: __$__, $__: $__, paper: scope, view: view, tool: tool },\n\t\t\t\ttrue);\n\t\texpose(scope);\n\t\thandlers = Base.each(handlers, function(key) {\n\t\t\tif (new RegExp('\\\\s+' + key + '\\\\b').test(code)) {\n\t\t\t\tparams.push(key);\n\t\t\t\tthis.push(key + ': ' + key);\n\t\t\t}\n\t\t}, []).join(', ');\n\t\tif (handlers)\n\t\t\tcode += '\\nreturn { ' + handlers + ' };';\n\t\tvar browser = paper.browser;\n\t\tif (browser.chrome || browser.firefox) {\n\t\t\tvar script = document.createElement('script'),\n\t\t\t\thead = document.head || document.getElementsByTagName('head')[0];\n\t\t\tif (browser.firefox)\n\t\t\t\tcode = '\\n' + code;\n\t\t\tscript.appendChild(document.createTextNode(\n\t\t\t\t'paper._execute = function(' + params + ') {' + code + '\\n}'\n\t\t\t));\n\t\t\thead.appendChild(script);\n\t\t\tfunc = paper._execute;\n\t\t\tdelete paper._execute;\n\t\t\thead.removeChild(script);\n\t\t} else {\n\t\t\tfunc = Function(params, code);\n\t\t}\n\t\tvar res = func.apply(scope, args) || {};\n\t\tBase.each(toolHandlers, function(key) {\n\t\t\tvar value = res[key];\n\t\t\tif (value)\n\t\t\t\ttool[key] = value;\n\t\t});\n\t\tif (view) {\n\t\t\tif (res.onResize)\n\t\t\t\tview.setOnResize(res.onResize);\n\t\t\tview.emit('resize', {\n\t\t\t\tsize: view.size,\n\t\t\t\tdelta: new Point()\n\t\t\t});\n\t\t\tif (res.onFrame)\n\t\t\t\tview.setOnFrame(res.onFrame);\n\t\t\tview.update();\n\t\t}\n\t}\n\n\tfunction loadScript(script) {\n\t\tif (/^text\\/(?:x-|)paperscript$/.test(script.type)\n\t\t\t\t&& PaperScope.getAttribute(script, 'ignore') !== 'true') {\n\t\t\tvar canvasId = PaperScope.getAttribute(script, 'canvas'),\n\t\t\t\tcanvas = document.getElementById(canvasId),\n\t\t\t\tsrc = script.src || script.getAttribute('data-src'),\n\t\t\t\tasync = PaperScope.hasAttribute(script, 'async'),\n\t\t\t\tscopeAttribute = 'data-paper-scope';\n\t\t\tif (!canvas)\n\t\t\t\tthrow new Error('Unable to find canvas with id \"'\n\t\t\t\t\t\t+ canvasId + '\"');\n\t\t\tvar scope = PaperScope.get(canvas.getAttribute(scopeAttribute))\n\t\t\t\t\t\t|| new PaperScope().setup(canvas);\n\t\t\tcanvas.setAttribute(scopeAttribute, scope._id);\n\t\t\tif (src) {\n\t\t\t\tHttp.request('get', src, function(code) {\n\t\t\t\t\texecute(code, scope, src);\n\t\t\t\t}, async);\n\t\t\t} else {\n\t\t\t\texecute(script.innerHTML, scope, script.baseURI);\n\t\t\t}\n\t\t\tscript.setAttribute('data-paper-ignore', 'true');\n\t\t\treturn scope;\n\t\t}\n\t}\n\n\tfunction loadAll() {\n\t\tBase.each(document.getElementsByTagName('script'), loadScript);\n\t}\n\n\tfunction load(script) {\n\t\treturn script ? loadScript(script) : loadAll();\n\t}\n\n\tif (document.readyState === 'complete') {\n\t\tsetTimeout(loadAll);\n\t} else {\n\t\tDomEvent.add(window, { load: loadAll });\n\t}\n\n\treturn {\n\t\tcompile: compile,\n\t\texecute: execute,\n\t\tload: load,\n\t\tparse: parse\n\t};\n\n}).call(this);\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n","/* ========================================================================\n * Bootstrap: transition.js v3.3.5\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: alert.js v3.3.5\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.5'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: button.js v3.3.5\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.5'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target)\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"]') || $(e.target).is('input[type=\"checkbox\"]'))) e.preventDefault()\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: carousel.js v3.3.5\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.5'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: collapse.js v3.3.5\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.5'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: dropdown.js v3.3.5\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.5'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger('shown.bs.dropdown', relatedTarget)\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: modal.js v3.3.5\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.5'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element.addClass('in')\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $(document.createElement('div'))\n        .addClass('modal-backdrop ' + animate)\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tooltip.js v3.3.5\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.5'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: popover.js v3.3.5\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.5'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.5\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.5'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tab.js v3.3.5\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element)\n    // jscs:enable requireDollarBeforejQueryAssignment\n  }\n\n  Tab.VERSION = '3.3.5'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: affix.js v3.3.5\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.5'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * DOM-based Routing\n * Based on http://goo.gl/EUTi53 by Paul Irish\n *\n * Only fires on body classes that match. If a body class contains a dash,\n * replace the dash with an underscore when adding it to the object below.\n *\n * .noConflict()\n * The routing is enclosed within an anonymous function so that you can\n * always reference jQuery with $, even when in .noConflict() mode.\n * ======================================================================== */\n\n(function($) {\n\n  // Use this variable to set up the common and page specific functions. If you\n  // rename this variable, you will also need to rename the namespace below.\n  var Sage = {\n    // All pages\n    'common': {\n      init: function() {\n        // JavaScript to be fired on all pages\n      },\n      finalize: function() {\n        // JavaScript to be fired on all pages, after page specific JS is fired\n      }\n    },\n    // Home page\n    'home': {\n      init: function() {\n        // JavaScript to be fired on the home page\n      },\n      finalize: function() {\n        // JavaScript to be fired on the home page, after the init JS\n      }\n    },\n    // About us page, note the change from about-us to about_us.\n    'about_us': {\n      init: function() {\n        // JavaScript to be fired on the about us page\n      }\n    }\n  };\n\n  // The routing fires all common scripts, followed by the page specific scripts.\n  // Add additional events for more control over timing e.g. a finalize event\n  var UTIL = {\n    fire: function(func, funcname, args) {\n      var fire;\n      var namespace = Sage;\n      funcname = (funcname === undefined) ? 'init' : funcname;\n      fire = func !== '';\n      fire = fire && namespace[func];\n      fire = fire && typeof namespace[func][funcname] === 'function';\n\n      if (fire) {\n        namespace[func][funcname](args);\n      }\n    },\n    loadEvents: function() {\n      // Fire common init JS\n      UTIL.fire('common');\n\n      // Fire page-specific init JS, and then finalize JS\n      $.each(document.body.className.replace(/-/g, '_').split(/\\s+/), function(i, classnm) {\n        UTIL.fire(classnm);\n        UTIL.fire(classnm, 'finalize');\n      });\n\n      // Fire common finalize JS\n      UTIL.fire('common', 'finalize');\n    }\n  };\n\n  // Load Events\n  $(document).ready(UTIL.loadEvents);\n\n})(jQuery); // Fully reference jQuery after this point.\n"],"sourceRoot":"assets/scripts/"}