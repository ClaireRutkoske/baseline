{"version":3,"sources":["../bower_components/paper/dist/paper-full.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/transition.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/alert.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/button.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/carousel.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/collapse.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/dropdown.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/modal.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/tooltip.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/popover.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/scrollspy.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/tab.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/affix.js","../assets/scripts/main.js"],"names":["paper","undefined","Base","inject","dest","src","enumerable","beans","preserve","field","name","val","describe","get","value","substring","bean","isFunc","res","prev","base","match","beansNames","toLowerCase","isPlainObject","writable","configurable","define","hasOwnProperty","hidden","test","part","set","length","each","obj","iter","bind","getLength","forEach","forIn","call","props","exclude","key","i","l","this","create","Object","proto","__proto__","getOwnPropertyDescriptor","__lookupGetter__","__lookupSetter__","_define","defineProperty","desc","__defineGetter__","__defineSetter__","arguments","statics","prototype","extend","ctor","initialize","apply","clone","constructor","pick","a","b","module","exports","toString","_id","_class","_name","type","push","Formatter","instance","number","join","getClassName","exportJSON","options","toJSON","serialize","_set","dontCheck","keys","_filtering","equals","obj1","obj2","Array","isArray","read","list","start","peek","__index","readIndex","_readIndex","index","readNull","__read","slice","remain","readAll","entry","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","root","formatter","precision","definitions","references","add","item","id","ref","unshift","_serialize","_compact","deserialize","json","_data","_isDictionary","isRoot","isDictionary","args","JSON","stringify","importJSON","target","parse","isTarget","Item","Layer","insert","splice","items","remove","amount","append","_index","removed","capitalize","str","replace","toUpperCase","camelize","all","chr","hyphenate","Emitter","on","func","types","_eventTypes","handlers","_callbacks","indexOf","install","off","uninstall","once","emit","event","stop","responds","attach","detach","fire","_installEvents","events","_events","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","project","projects","tools","palettes","_scopes","support","ctx","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","browser","agent","navigator","userAgent","platform","exec","n","v1","v2","rv","chrome","v","version","versionNumber","parseFloat","webkit","atom","getView","getPaper","execute","code","url","PaperScript","View","updateFocus","scope","that","setup","element","Project","activate","clear","handleAttribute","el","attr","getAttribute","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","Math","pow","round","pair","val1","val2","separator","point","x","y","size","width","height","rectangle","Numerical","clip","min","max","abscissas","weights","abs","sqrt","EPSILON","MACHINE_EPSILON","TOLERANCE","CURVETIME_EPSILON","GEOMETRIC_EPSILON","WINDING_EPSILON","TRIGONOMETRIC_EPSILON","CLIPPING_EPSILON","KAPPA","isZero","integrate","f","w","A","B","m","sum","Ax","findRoot","df","tolerance","fx","dx","nx","solveQuadratic","c","roots","x1","D","count","eMin","eMax","x2","Infinity","gmC","mult","floor","log","LOG10E","isFinite","Q","R","solveCubic","d","b1","c2","x0","q","qd","t","r","s","tmp","ec","UID","_pools","pool","Point","arg0","arg1","hasY","angle","setAngle","setLength","_angle","cos","sin","scale","getAngle","getAngleInRadians","PI","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","div","NaN","dot","acos","atan2","getQuadrant","getDirectedAngle","cross","getDistance","squared","normalize","current","rotate","center","subtract","transform","matrix","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","contains","isClose","isCollinear","isColinear","isOrthogonal","isNaN","point1","point2","random","y1","y2","op","LinkedPoint","owner","setter","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","from","to","next","rect","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","left","getTop","setTop","top","getRight","setRight","right","getBottom","setBottom","bottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","touches","intersect","unite","include","expand","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","reset","Error","tx","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","translate","shear","skew","toRadians","tan","concatenate","a1","c1","d1","a2","b2","d2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","j","_transformCorners","coords","_transformBounds","bounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","rotation","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","line","isInfinite","getSide","getSignedDistance","p1x","p1y","v1x","v1y","p2x","p2y","v2x","v2y","dy","u1","u2","epsilon","uMin","uMax","px","py","vx","vy","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","style","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","insertChild","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","selectAll","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","draw","pixelRatio","save","param","offset","viewMatrix","matrices","updateMatrix","restore","strokeWidth","_drawSelection","Symbol","dontCenter","setDefinition","_definition","flags","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","position","PlacedSymbol","symbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","visible","blendMode","opacity","guide","clipMask","data","_initialize","hasProps","_matrix","_style","_project","parent","setParent","_installEvent","_uninstallEvent","onFrame","_animateItem","onLoad","fields","fontSize","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","children","_children","namedChildren","_namedChildren","orig","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","_updateBoundsCache","child","setBounds","cache","cached","_internal","_boundsCache","ids","other","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","copy","includeMatrix","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","ceil","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","Path","getIntersections","checkBounds","pt","tolerancePadding","guides","parentTotalMatrix","_totalMatrix","view","totalMatrix","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","points","opts","_getChildHitTestOptions","_hitTestSelf","fill","hasFill","matches","compare","matchObject","RegExp","firstOnly","overlapping","inside","path","childMatrix","insertChildren","_proto","shift","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","reduce","namedArray","notifyParent","replaceWith","reverseChildren","reverse","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isSibling","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","fillStyle","toCanvasStyle","getStrokeWidth","strokeStyle","lineWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","getViewMatrix","globalMatrix","mainCtx","itemOffset","prevOffset","normalBlend","nativeBlend","direct","dontStart","_canComposite","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","pop","dontFinish","process","_isUpdated","CompoundPath","updated","_drawSelected","color","getSelectedColor","half","beginPath","closePath","stroke","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","radius","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","arc","rx","ry","kappa","cx","cy","moveTo","bezierCurveTo","lineTo","getWindingRule","getCornerCenter","halfSize","dir","corner","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","crossOrigin","source","object","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","_crossOrigin","getElement","u","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","e","modify","setContext","context","toDataURL","loaded","update","document","getElementById","Image","setTimeout","DomEvent","load","getCrossOrigin","setCrossOrigin","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","alpha","Color","getPixel","setPixel","components","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","values","segments","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","hasHandles","_point","_handleIn","_handleOut","_path","curve","curves","_curves","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","clearHandles","_selectionState","state","oldState","flag","getPath","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","getNext","getPrevious","isFirst","isLast","inX","inY","reversed","removeSegment","segment","change","Curve","arg6","arg7","seg1","seg2","handle1","handle2","segment1","segment2","_segment2","getPoint1","getHandle1","getHandle2","getPoint2","_length","setPoint1","setPoint2","setHandle1","setHandle2","getSegment1","getSegment2","getPoints","getLine","getPart","getPartLength","_getIntersections","_getParameter","isParameter","parameter","getParameterAt","_setHandles","tMin","tMax","subdivide","setHandles","split","p1","h1","h2","p2","c1x","c1y","c2x","c2y","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","geomEpsilon","getNearestParameter","refine","dist","minDist","minT","isStraight","step","flip","isFlatEnough","ux","uy","h1x","h1y","h2x","h2y","_addBounds","v0","v3","padding","isLinear","third","isHorizontal","getTangentAt","isVertical","getLocationAt","getLocationOf","getOffsetOf","loc","getOffset","getNearestLocation","getNearestPoint","methods","evaluateMethods","getLengthIntegrand","ax","bx","ay","by","getIterations","evaluate","normalized","len","ds","forward","rangeLength","guess","getTangent","getWeightedTangent","getNormal","getWeightedNormal","getCurvature","addLocation","locations","t1","t2","overlap","startConnected","endConnected","renormalize","loc1","loc2","_intersection","addCurveIntersections","oldTDiff","recursion","tMinClip","tMaxClip","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","hull","getConvexHull","clipConvexHull","tDiff","tMinNew","tMaxNew","dq0","dq1","dq2","dq3","p0","p3","dist1","dist2","distRatio","hullTop","hullBottom","clipConvexHullPart","threshold","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rvc","tc","pc","tl","pl","addLineIntersection","_getSelfIntersection","c1p1x","c1p1y","c1p2x","c1p2y","c2p1x","c2p1y","c2p2x","c2p2y","c1s1x","c1s1y","c1s2x","c1s2y","c2s1x","c2s1y","c2s2x","c2s2y","overlaps","getOverlaps","straight1","straight2","straight","before","c1p1","c1p2","c2p1","c2p2","side1","side2","edgeSum","ac","ab","bc","tSplit","maxCurvature","curvature","getCurvatureAt","getLineLengthSquared","timeEpsilon","l1","l2","pairs","o1","o2","_overlap","_distance","_setCurve","_parameter","getPointAt","_next","_prev","_version","_curve","_segment","_setSegment","getSegment","getParameter","trySegment","_offset","getCurveOffset","getIntersection","_ignoreOther","diff","isTouching","inter","curve1","curve2","isCrossing","isInRange","c4","c3","a3","a4","isOverlap","merge","search","found","path1","path2","expanded","_returnFirst","self","matrix1","matrix2","curves1","curves2","length1","length2","values2","arrays","values1","getCrossings","setPathData","getCoord","relative","previous","control","command","lower","move","cubicCurveTo","quadraticCurveTo","arcTo","winding","_getWinding","closed","setSegments","_clockwise","_area","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","addSegment","skipLine","curX","curY","first","outX","prevX","outY","prevY","segs","concat","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","last","area","isClockwise","setClockwise","clockwise","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","pos","end","simplify","fitter","PathFitter","fit","last1","last2","first2","first1","toShape","seg3","seg4","isArc","pt1","pt2","topCenter","shape","isCloseEnough","checkSegmentPoint","seg","anchor","strokePadding","checkSegmentPoints","addToArea","checkSegmentStroke","cap","numSegments","_addBevelJoin","_addSquareCap","hitStroke","hitFill","hitCurves","location","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","knots","f1","f2","ie","je","getCurrentSegment","moveBy","curveTo","through","extent","vector","middle","large","rxSq","rySq","xSq","ySq","throughSide","centerSide","ext","inc","z","out","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","processSegment","prevCoords","addRound","joinBounds","addJoin","addCap","phi","atan","addPoint","normal1","getNormalAt","normal2","normal","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","createPath","createEllipse","ellipseSegments","bl","getBottomLeft","tr","getTopRight","br","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","paths","getCurrentPath","check","preparePath","resolve","resolveCrossings","reorient","finishBoolean","result","computeBoolean","operation","collect","monoCurves","_getMonoCurves","computeOpenBoolean","_path1","_path2","intersections","divideLocations","propagateWinding","_winding","tracePaths","addPath","sub","linkIntersections","prevCurve","prevT","noHandles","clearSegments","origT","getWinding","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","xBefore","xAfter","startCounted","slope","counted","totalLength","windingSum","k","node","curveLength","isValid","adjusted","_visited","operator","overlapWinding","isStart","otherStart","findBestIntersection","strict","nextSeg","nextInter","findStartSegment","operators",1,2,"finished","firstSegment","console","error","crossings","insertCurve","y0","handleCurve","y3","sort","getInteriorPoint","xIntercepts","counters","maxRecursion","addCurve","computeParts","maxT","minDifference","halfT","prevVal","prevLen","weighted","fitCubic","tan1","tan2","uPrime","chordLengthParameterize","maxError","parametersInOrder","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","C","X","b0","b3","alpha1","alpha2","detC0C1","detC0X","detXC1","c0","segLength","eps","degree","maxDist","P","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","lines","leading","getLeading","font","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","fromCSS","string","parseInt","colorCache","colorCtx","gray","rgb","hsb","hsl","gradient","componentParsers","hsbIndices","converters","rgb-hsb","g","delta","h","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","t3","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","properties","hasOverlap","parser","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","radial","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","canvasGradient","_stops","origin","destination","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontFamily","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","suffix","prefix","getStyles","doc","nodeType","ownerDocument","defaultView","getComputedStyle","viewport","body","html","documentElement","getBoundingClientRect","clientLeft","clientTop","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","addEventListener","removeEventListener","targetTouches","changedTouches","pageX","clientX","pageY","clientY","getTarget","srcElement","getRelatedTarget","relatedTarget","toElement","stopPropagation","preventDefault","requestAnimationFrame","handleCallbacks","callbacks","focused","nativeRequest","requested","timer","window","focus","blur","callback","setInterval","getCanvasSize","_element","_pixelRatio","devicePixelRatio","setAttribute","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","_windowEvents","resize","setViewSize","_setViewSize","Stats","_stats","stats","domElement","appendChild","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","_time","_count","_requestFrame","_requested","_handleFrame","now","Date","_before","_handlingFrame","time","animate","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","zoom","isVisible","projectToView","viewToProject","CanvasView","tempFocus","handleMouseMove","_handleEvent","tool","dragging","prevFocus","mousedown","mousemove","mouseup","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","mouseFlags","mousedrag","click","doubleclick","mouseenter","mouseleave","_eventCounters","HTMLCanvasElement","deviceRatio","backingStoreRatio","firefox","parentNode","temp","createElement","removeChild","prevFont","measureText","force","callEvent","lastPoint","mouseEvent","MouseEvent","isStopped","downPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","handleKey","keyCode","charCode","String","fromCharCode","specialKey","specialKeys","keyMap","charCodeMap","mac","commandFixMap","downCode",8,9,13,16,17,18,19,20,27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","space","keydown","which","keypress","keyup","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","distance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","request","method","async","xhr","ActiveXObject","XMLHttpRequest","open","overrideMimeType","onreadystatechange","readyState","status","responseText","send","canvases","getLum","setLum","dr","dg","db","mn","lmn","ln","mxl","getSat","setSat","md","sr","sg","sb","sa","bg","bb","ba","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","average","negation","mode","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","lookup","property","attribute","toSVG","fromSVG","exportFilter","SVGNamespaces","href","xlink","setAttributes","attrs","namespace","setAttributeNS","tag","createElementNS","getTransform","coordinates","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","embedImages","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","fy","gradientUnits","stopColor","stop-color","exportText","textContent","applyStyle","visibility","svgs","exportDefinitions","svg","defs","insertBefore","firstChild","XMLSerializer","serializeToString","exporter","exporters","onExport","setOptions","xmlns","xmlns:xlink","getValue","allowNull","getAttributeNS","convertValue","map","importGroup","nodes","childNodes","isClip","currentStyle","applyAttributes","querySelectorAll","importSVG","importPoly","importPath","pathData","importGradient","isRadial","applyTransform","transforms","applyOpacity","styles","attributes","onLoadCallback","File","reader","FileReader","onload","readAsText","DOMParser","parseFromString","importer","importers","onImport","expandShapes","#document","nextSibling","clippath","polygon","polyline","lineargradient","radialgradient","use","circle","text","trim","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","group","__$__","handler","binaryOperators","$__","unaryOperators","acorn","compile","insertions","insertion","getCode","range","getBetween","replaceCode","walkAST","argument","between","parentType","computed","exp","sourceMap","lineBreaks","getElementsByTagName","innerHTML","substr","mappings","file","names","sourceRoot","sources","sourcesContent","ranges","btoa","unescape","encodeURIComponent","expose","params","toolHandlers","script","head","createTextNode","_execute","Function","onResize","setOnResize","setOnFrame","loadScript","canvasId","scopeAttribute","baseURI","loadAll","amd","fr","mr","hr","sourceFile","vr","column","SyntaxError","raisedAt","o","Ar","Sr","Er","gr","kr","wr","Cr","beforeExpr","onComment","Kt","lastIndex","charCodeAt","pr","Jt","E","xt","Et","wt","Dt","p","Lt","Ut","Rt","Tt","Vt","Gt","Lr","St","At","jt","Ot","qt","Ct","It","mt","vt","yt","bt","ft","dt","ht","gt","kt","yr","xr","Br","Qt","L","$t","charAt","I","jr","Or","Tr","Dr","S","Bt","Yt","Fr","Wt","lt","forbidReserved","ecmaVersion","Mt","zt","Xt","U","Ir","Ur","lastIndexOf","V","T","O","expression","F","strictSemicolons","M","N","Nt","W","Rr","Vr","J","Mr","Nr","label","lr","kind","keyword","Wr","Pr","Zt","tt","_r","$","G","declarations","ut","_","K","Gr","cr","Kr","consequent","alternate","Hr","Qr","Yr","discriminant","cases","en","zr","Jr","Zr","et","block","H","Xr","guard","guardedHandlers","qr","finalizer","$r","nt","isLoop","init","expressions","Y","isAssign","Z","er","rr","binop","isUpdate","postfix","nr","ar","callee","ur","ot","raw","it","st","ct","atomValue","elements","ir","at","or","allowTrailingCommas","program","defaultOptions","getLineInfo","tokenize","startLoc","endLoc","jumpTo","break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","while","with","null","new","in","instanceof","typeof","void","delete","tokTypes","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","question","slash","eq","eof","num","regexp","Ft","Pt","Ht","_t","isIdentifierStart","isIdentifierChar","+","-","*","/","%","==","!=","transitionEnd","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","fn","emulateTransitionEnd","duration","$el","one","trigger","special","bsTransitionEnd","bindType","delegateType","is","handleObj","jQuery","Plugin","$this","Alert","dismiss","close","VERSION","TRANSITION_DURATION","removeElement","$parent","selector","closest","isDefaultPrevented","removeClass","hasClass","alert","Constructor","noConflict","Button","toggle","setState","$element","DEFAULTS","isLoading","loadingText","resetText","proxy","addClass","removeAttr","changed","$input","find","toggleClass","button","$btn","Carousel","action","slide","interval","cycle","$indicators","paused","sliding","$active","$items","keyboard","wrap","tagName","clearInterval","getItemIndex","getItemForDirection","direction","active","activeIndex","willWrap","itemIndex","$next","isCycling","slideEvent","$nextIndicator","slidEvent","offsetWidth","carousel","clickHandler","$target","slideIndex","$carousel","getTargetFromTrigger","$trigger","Collapse","transitioning","addAriaAndCollapsedClass","dimension","hasWidth","show","activesData","actives","startEvent","scrollSize","camelCase","hide","offsetHeight","isOpen","collapse","clearMenus","backdrop","Dropdown","insertAfter","dropdown","_relatedTarget","Modal","$body","$dialog","$backdrop","isShown","originalBodyPad","scrollbarWidth","ignoreBackdropClick","remote","BACKDROP_TRANSITION_DURATION","checkScrollbar","setScrollbar","escape","appendTo","adjustDialog","enforceFocus","hideModal","has","handleUpdate","resetAdjustments","resetScrollbar","removeBackdrop","doAnimate","currentTarget","callbackRemove","modalIsOverflowing","scrollHeight","css","paddingLeft","bodyIsOverflowing","paddingRight","fullWindowWidth","documentElementRect","measureScrollbar","bodyPad","scrollDiv","className","modal","showEvent","Tooltip","enabled","timeout","hoverState","inState","animation","placement","template","title","delay","container","$viewport","isFunction","hover","triggers","eventIn","eventOut","enter","leave","_options","fixTitle","getDefaults","getDelegateOptions","tip","clearTimeout","isInStateTrue","hasContent","inDom","$tip","tipId","getUID","autoToken","autoPlace","actualWidth","actualHeight","orgPlacement","viewportDim","calculatedOffset","getCalculatedOffset","applyPlacement","prevHoverState","marginTop","marginLeft","setOffset","using","getViewportAdjustedDelta","arrowDelta","arrowOffsetPosition","replaceArrow","arrow","getTitle","$e","isBody","elRect","elOffset","outerDims","viewportPadding","viewportDimensions","topEdgeOffset","bottomEdgeOffset","leftEdgeOffset","rightEdgeOffset","$arrow","enable","disable","toggleEnabled","destroy","removeData","tooltip","Popover","popover","ScrollSpy","$scrollElement","offsets","targets","activeTarget","refresh","getScrollHeight","offsetMethod","offsetBase","isWindow","$href","maxScroll","parents","parentsUntil","scrollspy","$spy","Tab","$ul","$previous","hideEvent","tab","Affix","checkPosition","checkPositionWithEventLoop","affixed","unpin","pinnedOffset","RESET","getState","offsetTop","offsetBottom","targetHeight","initializing","colliderTop","colliderHeight","getPinnedOffset","affix","affixType","Sage","common","finalize","home","about_us","UTIL","funcname","loadEvents","classnm","ready"],"mappings":"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","file":"main.js","sourcesContent":["/*!\n * Paper.js v0.9.25 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Sun Oct 25 11:23:38 2015 +0100\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc && !val.base\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && !(exclude && exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor,\n\t\t\t\tproto;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tproto = ctor.prototype = create(this.prototype);\n\t\t\tdefine(proto, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\tif (arguments.length)\n\t\t\t\tthis.inject.apply(ctor, arguments);\n\t\t\tctor.base = base;\n\t\t\treturn ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function(a, b) {\n\t\t\t\treturn a !== undefined ? a : b;\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar keys = Object.keys(props._filtering || props);\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tif (!(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (obj1 && obj2\n\t\t\t\t\t&& typeof obj1 === 'object' && typeof obj2 === 'object') {\n\t\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\t\tvar length = obj1.length;\n\t\t\t\t\tif (length !== obj2.length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tif (!Base.equals(obj1[length], obj2[length]))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar keys = Object.keys(obj1),\n\t\t\t\t\t\tlength = keys.length;\n\t\t\t\t\tif (length !== Object.keys(obj2).length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tvar key = keys[length];\n\t\t\t\t\t\tif (!(obj2.hasOwnProperty(key)\n\t\t\t\t\t\t\t\t&& Base.equals(obj1[key], obj2[key])))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tvar keys = Object.keys(obj);\n\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\tres[key] = Base.serialize(obj[key], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\t}\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data, _isDictionary) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (json.length == 1 && /^#/.test(type))\n\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\ttype = Base.exports[type];\n\t\t\t\tres = [];\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data,\n\t\t\t\t\t\t\tisDictionary));\n\t\t\t\tif (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar types = this._eventTypes,\n\t\t\t\tentry = types && types[type],\n\t\t\t\thandlers = this._callbacks = this._callbacks || {};\n\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\thandlers.push(func);\n\t\t\t\tif (entry && entry.install && handlers.length === 1)\n\t\t\t\t\tentry.install.call(this, type);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar types = this._eventTypes,\n\t\t\tentry = types && types[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry && entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\thandlers = handlers.slice();\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false) {\n\t\t\t\tif (event && event.stop)\n\t\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar types = this._eventTypes,\n\t\t\t\t\tentry = types && types[type],\n\t\t\t\t\tfunc = entry && entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar agent = navigator.userAgent.toLowerCase(),\n\t\t\t\tplatform = (/(win)/.exec(agent)\n\t\t\t\t\t\t|| /(mac)/.exec(agent)\n\t\t\t\t\t\t|| /(linux)/.exec(agent)\n\t\t\t\t\t\t|| [])[0],\n\t\t\t\tbrowser = proto.browser = { platform: platform };\n\t\t\tif (platform)\n\t\t\t\tbrowser[platform] = true;\n\t\t\tagent.replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: \"0.9.25\",\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\tfunction clip(value, min, max) {\n\t\treturn value < min ? min : value > max ? max : value;\n\t}\n\n\treturn {\n\t\tTOLERANCE: 1e-6,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tCURVETIME_EPSILON: 4e-7,\n\t\tGEOMETRIC_EPSILON: 2e-7,\n\t\tWINDING_EPSILON: 2e-7,\n\t\tTRIGONOMETRIC_EPSILON: 1e-7,\n\t\tCLIPPING_EPSILON: 1e-7,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn val >= -EPSILON && val <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\teMin = min - EPSILON,\n\t\t\t\teMax = max + EPSILON,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= -2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (D !== 0 && abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar gmC = pow(abs(a * b * c), 1 / 3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\tvar mult = pow(10,\n\t\t\t\t\t\t\tabs(Math.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\tif (abs(B) < EPSILON)\n\t\t\t\t\treturn abs(c) < EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else if (D >= -MACHINE_EPSILON) {\n\t\t\t\tvar Q = D < 0 ? 0 : sqrt(D),\n\t\t\t\t\tR = b + (b < 0 ? -Q : Q);\n\t\t\t\tif (R === 0) {\n\t\t\t\t\tx1 = c / a;\n\t\t\t\t\tx2 = -x1;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = R / a;\n\t\t\t\t\tx2 = c / R;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 > eMin && x1 < eMax))\n\t\t\t\troots[count++] = min == null ? x1 : clip(x1, min, max);\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 > eMin && x2 < eMax))\n\t\t\t\troots[count++] = min == null ? x2 : clip(x2, min, max);\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx, b1, c2;\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (abs(d) < EPSILON) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x > min - EPSILON && x < max + EPSILON))\n\t\t\t\troots[count++] = min == null ? x : clip(x, min, max);\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar UID = {\n\t_id: 1,\n\t_pools: {},\n\n\tget: function(ctor) {\n\t\tif (ctor) {\n\t\t\tvar name = ctor._class,\n\t\t\t\tpool = this._pools[name];\n\t\t\tif (!pool)\n\t\t\t\tpool = this._pools[name] = { _id: 1 };\n\t\t\treturn pool._id++;\n\t\t} else {\n\t\t\treturn this._id++;\n\t\t}\n\t}\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * cos - point.y * sin,\n\t\t\tpoint.x * sin + point.y * cos\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\ttolerance = Base.read(arguments);\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisCollinear: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isCollinear(this.x, this.y, point.x, point.y);\n\t},\n\n\tisColinear: '#isCollinear',\n\n\tisOrthogonal: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Point.isOrthogonal(this.x, this.y, point.x, point.y);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tscale = point.isZero() ? 0 : this.dot(point) / point.dot(point);\n\t\treturn new Point(\n\t\t\tpoint.x * scale,\n\t\t\tpoint.y * scale\n\t\t);\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t},\n\n\t\tisCollinear: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * y2 - y1 * x2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-7;\n\t\t},\n\n\t\tisOrthogonal: function(x1, y1, x2, y2) {\n\t\t\treturn Math.abs(x1 * x2 + y1 * y2)\n\t\t\t\t\t<= Math.sqrt((x1 * x1 + y1 * y1) * (x2 * x2 + y2 * y2))\n\t\t\t\t\t\t* 1e-7;\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n},\nnew function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = min.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point, isInfinite) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true, isInfinite);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tisCollinear: function(line) {\n\t\treturn Point.isCollinear(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tisOrthogonal: function(line) {\n\t\treturn Point.isOrthogonal(this._vx, this._vy, line._vx, line._vy);\n\t},\n\n\tstatics: {\n\t\tintersect: function(p1x, p1y, v1x, v1y, p2x, p2y, v2x, v2y, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tv1x -= p1x;\n\t\t\t\tv1y -= p1y;\n\t\t\t\tv2x -= p2x;\n\t\t\t\tv2y -= p2y;\n\t\t\t}\n\t\t\tvar cross = v1x * v2y - v1y * v2x;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = p1x - p2x,\n\t\t\t\t\tdy = p1y - p2y,\n\t\t\t\t\tu1 = (v2x * dy - v2y * dx) / cross,\n\t\t\t\t\tu2 = (v1x * dy - v1y * dx) / cross,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\tuMin = -epsilon,\n\t\t\t\t\tuMax = 1 + epsilon;\n\t\t\t\tif (isInfinite\n\t\t\t\t\t\t|| uMin < u1 && u1 < uMax && uMin < u2 && u2 < uMax) {\n\t\t\t\t\tif (!isInfinite) {\n\t\t\t\t\t\tu1 = u1 <= 0 ? 0 : u1 >= 1 ? 1 : u1;\n\t\t\t\t\t}\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\tp1x + u1 * v1x,\n\t\t\t\t\t\t\tp1y + u1 * v1y);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector, isInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0 && !isInfinite) {\n\t\t\t\tccw = (v2x * vx + v2x * vx) / (vx * vx + vy * vy);\n\t\t\t\tif (ccw >= 0 && ccw <= 1)\n\t\t\t\t\tccw = 0;\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn vx === 0 ? vy > 0 ? x - px : px - x\n\t\t\t\t : vy === 0 ? vx < 0 ? y - py : py - y\n\t\t\t\t : ((x-px) * vy - (y-py) * vx) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = UID.get();\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = UID.get();\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, project: true, parent: true },\n\t\t\t\t\ttrue);\n\t\treturn hasProps;\n\t},\n\n\t_events: Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\tfunction(name) {\n\t\t\tthis[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis.getView()._installEvent(type);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis.getView()._uninstallEvent(type);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.getView()._animateItem(this, true);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.getView()._animateItem(this, false);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLoad: {}\n\t\t}\n\t),\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tItem._updateBoundsCache(this, cacheItem);\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tItem._updateBoundsCache(this._parent || this._parentSymbol, cacheItem);\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_updateBoundsCache: function(parent, item) {\n\t\t\tif (parent) {\n\t\t\t\tvar id = item._id,\n\t\t\t\t\tref = parent._boundsCache = parent._boundsCache || {\n\t\t\t\t\t\tids: {},\n\t\t\t\t\t\tlist: []\n\t\t\t\t\t};\n\t\t\t\tif (!ref.ids[id]) {\n\t\t\t\t\tref.list.push(item);\n\t\t\t\t\tref.ids[id] = item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++){\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert, includeMatrix) {\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide'],\n\t\t\tchildren = this._children;\n\t\tcopy.setStyle(this._style);\n\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\tcopy.addChild(children[i].clone(false), true);\n\t\t}\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tif (includeMatrix !== false)\n\t\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy.setApplyMatrix(this._applyMatrix);\n\t\tcopy.setPivot(this._pivot);\n\t\tcopy.setSelected(this._selected);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(), null,\n\t\t\t\t_matrix || item._matrix, true).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 1e-6)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tvar type = typeof name;\n\t\tif (type === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (type === 'function') {\n\t\t\treturn name(this);\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param && typeof match === 'object') {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect = bounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: !!inside,\n\t\t\t\t\toverlapping: !!overlapping,\n\t\t\t\t\trect: rect,\n\t\t\t\t\tpath: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param && param.items,\n\t\t\t\trect = param && param.rect;\n\t\t\tmatrix = rect && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (rect) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!rect.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(param.inside && rect.contains(bounds))\n\t\t\t\t\t\t\t&& !(param.overlapping && (bounds.contains(rect)\n\t\t\t\t\t\t\t\t|| param.path.intersects(child, childMatrix))))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisSibling: function(item) {\n\t\treturn this._parent === item._parent;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio || 1,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2,\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = this._clone(new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t}), insert);\n\t\tif (paper.settings.applyMatrix)\n\t\t\tpath.setApplyMatrix(true);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tcrossOrigin: null,\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\tcopy._crossOrigin = this._crossOrigin;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\tcrossOrigin = this._crossOrigin,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\timage = document.getElementById(src) || new Image();\n\t\tif (crossOrigin)\n\t\t\timage.crossOrigin = crossOrigin;\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, { load: loaded });\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetCrossOrigin: function() {\n\t\treturn this._image && this._image.crossOrigin || this._crossOrigin || '';\n\t},\n\n\tsetCrossOrigin: function(crossOrigin) {\n\t\tthis._crossOrigin = crossOrigin;\n\t\tif (this._image)\n\t\t\tthis._image.crossOrigin = crossOrigin;\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL.apply(canvas, arguments) : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif ('point' in arg0) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this._point, this._handleIn, this._handleOut]\n\t\t\t\t: this._point,\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\thasHandles: function() {\n\t\treturn !this._handleIn.isZero() || !this._handleOut.isZero();\n\t},\n\n\tclearHandles: function() {\n\t\tthis._handleIn.set(0, 0);\n\t\tthis._handleOut.set(0, 0);\n\t},\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn this._index === 0;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._index === path._segments.length - 1 || false;\n\t},\n\n\treverse: function() {\n\t\tvar handleIn = this._handleIn,\n\t\t\thandleOut = this._handleOut,\n\t\t\tinX = handleIn._x,\n\t\t\tinY = handleIn._y;\n\t\thandleIn.set(handleOut._x, handleOut._y);\n\t\thandleOut.set(inX, inY);\n\t},\n\n\treversed: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length,\n\t\t\tseg1, seg2,\n\t\t\tpoint1, point2,\n\t\t\thandle1, handle2;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tseg1 = arg1;\n\t\t\tseg2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tseg1 = new Segment();\n\t\t\tseg2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tif ('segment1' in arg0) {\n\t\t\t\tseg1 = new Segment(arg0.segment1);\n\t\t\t\tseg2 = new Segment(arg0.segment2);\n\t\t\t} else if ('point1' in arg0) {\n\t\t\t\tpoint1 = arg0.point1;\n\t\t\t\thandle1 = arg0.handle1;\n\t\t\t\thandle2 = arg0.handle2;\n\t\t\t\tpoint2 = arg0.point2;\n\t\t\t} else if (Array.isArray(arg0)) {\n\t\t\t\tpoint1 = [arg0[0], arg0[1]];\n\t\t\t\tpoint2 = [arg0[6], arg0[7]];\n\t\t\t\thandle1 = [arg0[2] - arg0[0], arg0[3] - arg0[1]];\n\t\t\t\thandle2 = [arg0[4] - arg0[6], arg0[5] - arg0[7]];\n\t\t\t}\n\t\t} else if (count === 2) {\n\t\t\tseg1 = new Segment(arg0);\n\t\t\tseg2 = new Segment(arg1);\n\t\t} else if (count === 4) {\n\t\t\tpoint1 = arg0;\n\t\t\thandle1 = arg1;\n\t\t\thandle2 = arg2;\n\t\t\tpoint2 = arg3;\n\t\t} else if (count === 8) {\n\t\t\tpoint1 = [arg0, arg1];\n\t\t\tpoint2 = [arg6, arg7];\n\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t}\n\t\tthis._segment1 = seg1 || new Segment(point1, null, handle1);\n\t\tthis._segment2 = seg2 || new Segment(point2, handle2, null);\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.hasHandles()\n\t\t\t\t? [this.getPoint1(), this.getHandle1(), this.getHandle2(),\n\t\t\t\t\tthis.getPoint2()]\n\t\t\t\t: [this.getPoint1(), this.getPoint2()],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisFirst: function() {\n\t\treturn this._segment1._index === 0;\n\t},\n\n\tisLast: function() {\n\t\tvar path = this._path;\n\t\treturn path && this._segment1._index === path._curves.length - 1\n\t\t\t\t|| false;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null)\n\t\t\tthis._length = Curve.getLength(this.getValues(), 0, 1);\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetLine: function() {\n\t\treturn new Line(this._segment1._point, this._segment2._point);\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve._getIntersections(this.getValues(),\n\t\t\t\tcurve && curve !== this ? curve.getValues() : null,\n\t\t\t\tthis, curve, [], {});\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, _setHandles) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tres = null;\n\t\tif (parameter >= tMin && parameter <= tMax) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1],\n\t\t\t\tsetHandles = _setHandles || this.hasHandles(),\n\t\t\t\tsegment1 = this._segment1,\n\t\t\t\tsegment2 = this._segment2,\n\t\t\t\tpath = this._path;\n\t\t\tif (setHandles) {\n\t\t\t\tsegment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tsegment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\tsetHandles && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\tsetHandles && new Point(right[2] - x, right[3] - y));\n\t\t\tif (path) {\n\t\t\t\tpath.insert(segment1._index + 1, segment);\n\t\t\t\tres = this.getNext();\n\t\t\t} else {\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, segment2);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treversed: function() {\n\t\treturn new Curve(this._segment2.reversed(), this._segment1.reversed());\n\t},\n\n\tclearHandles: function() {\n\t\tthis._segment1._handleOut.set(0, 0);\n\t\tthis._segment2._handleIn.set(0, 0);\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, point) {\n\t\tvar p1 = new Point(v[0], v[1]),\n\t\t\tp2 = new Point(v[6], v[7]),\n\t\t\tepsilon = 1e-12,\n\t\t\tt = point.isClose(p1, epsilon) ? 0\n\t\t\t  : point.isClose(p2, epsilon) ? 1\n\t\t\t  : null;\n\t\tif (t !== null)\n\t\t\treturn t;\n\t\tvar coords = [point.x, point.y],\n\t\t\troots = [],\n\t\t\tgeomEpsilon = 2e-7;\n\t\tfor (var c = 0; c < 2; c++) {\n\t\t\tvar count = Curve.solveCubic(v, c, coords[c], roots, 0, 1);\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tt = roots[i];\n\t\t\t\tif (point.isClose(Curve.getPoint(v, t), geomEpsilon))\n\t\t\t\t\treturn t;\n\t\t\t}\n\t\t}\n\t\treturn point.isClose(p1, geomEpsilon) ? 0\n\t\t\t : point.isClose(p2, geomEpsilon) ? 1\n\t\t\t : null;\n\t},\n\n\tgetNearestParameter: function(v, point) {\n\t\tif (Curve.isStraight(v)) {\n\t\t\tvar p1x = v[0], p1y = v[1],\n\t\t\t\tp2x = v[6], p2y = v[7],\n\t\t\t\tvx = p2x - p1x, vy = p2y - p1y,\n\t\t\t\tdet = vx * vx + vy * vy;\n\t\t\tif (det === 0)\n\t\t\t\treturn 0;\n\t\t\tvar u = ((point.x - p1x) * vx + (point.y - p1y) * vy) / det;\n\t\t\treturn u < 1e-12 ? 0\n\t\t\t\t : u > 0.999999999999 ? 1\n\t\t\t\t : Curve.getParameterOf(v,\n\t\t\t\t\tnew Point(p1x + u * vx, p1y + u * vy));\n\t\t}\n\n\t\tvar count = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(Curve.getPoint(v, t), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 4e-7) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\treturn minT;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tvar flip = from > to;\n\t\tif (flip) {\n\t\t\tvar tmp = from;\n\t\t\tfrom = to;\n\t\t\tto = tmp;\n\t\t}\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn flip\n\t\t\t\t? [v[6], v[7], v[4], v[5], v[2], v[3], v[0], v[1]]\n\t\t\t\t: v;\n\t},\n\n\thasHandles: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn !(isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]));\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\th1x = (v[2] + p1x) / 2,\n\t\t\th1y = (v[3] + p1y) / 2,\n\t\t\th2x = (v[4] + v[6]) / 2,\n\t\t\th2y = (v[5] + v[7]) / 2;\n\t\treturn 6 * ((p1x - h1x) * (h1y + p1y)\n\t\t\t\t  + (h1x - h2x) * (h2y + h1y)\n\t\t\t\t  + (h2x - p2x) * (p2y + h2y)) / 10;\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(\n\t['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tvar path = this._path;\n\t\t\t\tbounds = this._bounds[name] = Path[name](\n\t\t\t\t\t\t[this._segment1, this._segment2], false,\n\t\t\t\t\t\tpath && path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), Base.each({\n\tisStraight: function(l, h1, h2) {\n\t\tif (h1.isZero() && h2.isZero()) {\n\t\t\treturn true;\n\t\t} else if (l.isZero()) {\n\t\t\treturn false;\n\t\t} else if (h1.isCollinear(l) && h2.isCollinear(l)) {\n\t\t\tvar div = l.dot(l),\n\t\t\t\tp1 = l.dot(h1) / div,\n\t\t\t\tp2 = l.dot(h2) / div;\n\t\t\treturn p1 >= 0 && p1 <= 1 && p2 <= 0 && p2 >= -1;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisLinear: function(l, h1, h2) {\n\t\tvar third = l.divide(3);\n\t\treturn h1.equals(third) && h2.negate().equals(third);\n\t}\n}, function(test, name) {\n\tthis[name] = function() {\n\t\tvar seg1 = this._segment1,\n\t\t\tseg2 = this._segment2;\n\t\treturn test(seg2._point.subtract(seg1._point),\n\t\t\t\tseg1._handleOut, seg2._handleIn);\n\t};\n\n\tthis.statics[name] = function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn test(new Point(p2x - p1x, p2y - p1y),\n\t\t\t\tnew Point(v[2] - p1x, v[3] - p1y),\n\t\t\t\tnew Point(v[4] - p2x, v[5] - p2y));\n\t};\n}, {\n\tstatics: {},\n\n\thasHandles: function() {\n\t\treturn !this._segment1._handleOut.isZero()\n\t\t\t\t|| !this._segment2._handleIn.isZero();\n\t},\n\n\tisCollinear: function(curve) {\n\t\treturn curve && this.isStraight() && curve.isStraight()\n\t\t\t\t&& this.getLine().isCollinear(curve.getLine());\n\t},\n\n\tisHorizontal: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).y)\n\t\t\t\t< 1e-7;\n\t},\n\n\tisVertical: function() {\n\t\treturn this.isStraight() && Math.abs(this.getTangentAt(0.5, true).x)\n\t\t\t\t< 1e-7;\n\t}\n}), {\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\treturn Curve.getParameterOf(this.getValues(), Point.read(arguments));\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar t = isParameter ? offset : this.getParameterAt(offset);\n\t\treturn t != null && t >= 0 && t <= 1\n\t\t\t\t? new CurveLocation(this, t)\n\t\t\t\t: null;\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tt = Curve.getNearestParameter(values, point),\n\t\t\tpt = Curve.getPoint(values, t);\n\t\treturn new CurveLocation(this, t, pt, null, point.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n},\nnew function() {\n\tvar methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent',\n\t\t'getWeightedNormal', 'getCurvature'];\n\treturn Base.each(methods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve[name](values, isParameter ? offset\n\t\t\t\t\t: Curve.getParameterAt(values, offset, 0));\n\t\t};\n\t}, {\n\t\tstatics: {\n\t\t\tevaluateMethods: methods\n\t\t}\n\t})\n},\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\tfunction evaluate(v, t, type, normalized) {\n\t\tif (t == null || t < 0 || t > 1)\n\t\t\treturn null;\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tMin || t > tMax)) {\n\t\t\tvar isZero = t < tMin;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tMin) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > tMax) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (normalized) {\n\t\t\t\t\tif (x === 0 && y === 0 && (t < tMin || t > tMax)) {\n\t\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t\t}\n\t\t\t\t\tvar len = Math.sqrt(x * x + y * y);\n\t\t\t\t\tif (len) {\n\t\t\t\t\t\tx /= len;\n\t\t\t\t\t\ty /= len;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by,\n\t\t\t\t\t\td = Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t\tx = d !== 0 ? (x * y2 - y * x2) / d : 0;\n\t\t\t\t\ty = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t}\n\n\treturn { statics: {\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tif (a === 0 && b === 1 && Curve.isStraight(v)) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar abs = Math.abs,\n\t\t\t\tforward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (abs(offset - rangeLength) < 1e-12) {\n\t\t\t\treturn forward ? b : a;\n\t\t\t} else if (abs(offset) > rangeLength) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 32,\n\t\t\t\t\t1e-12);\n\t\t},\n\n\t\tgetPoint: function(v, t) {\n\t\t\treturn evaluate(v, t, 0, false);\n\t\t},\n\n\t\tgetTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, true);\n\t\t},\n\n\t\tgetWeightedTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, false);\n\t\t},\n\n\t\tgetNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, true);\n\t\t},\n\n\t\tgetWeightedNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, false);\n\t\t},\n\n\t\tgetCurvature: function(v, t) {\n\t\t\treturn evaluate(v, t, 3, false).x;\n\t\t}\n\t}};\n},\nnew function() {\n\n\tfunction addLocation(locations, param, v1, c1, t1, p1, v2, c2, t2, p2,\n\t\t\toverlap) {\n\t\tvar startConnected = param.startConnected,\n\t\t\tendConnected = param.endConnected,\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 == null)\n\t\t\tt1 = Curve.getParameterOf(v1, p1);\n\t\tif (t1 !== null && t1 >= (startConnected ? tMin : 0) &&\n\t\t\tt1 <= (endConnected ? tMax : 1)) {\n\t\t\tif (t2 == null)\n\t\t\t\tt2 = Curve.getParameterOf(v2, p2);\n\t\t\tif (t2 !== null && t2 >= (endConnected ? tMin : 0) &&\n\t\t\t\tt2 <= (startConnected ? tMax : 1)) {\n\t\t\t\tvar renormalize = param.renormalize;\n\t\t\t\tif (renormalize) {\n\t\t\t\t\tvar res = renormalize(t1, t2);\n\t\t\t\t\tt1 = res[0];\n\t\t\t\t\tt2 = res[1];\n\t\t\t\t}\n\t\t\t\tvar loc1 = new CurveLocation(c1, t1,\n\t\t\t\t\t\tp1 || Curve.getPoint(v1, t1), overlap),\n\t\t\t\t\tloc2 = new CurveLocation(c2, t2,\n\t\t\t\t\t\tp2 || Curve.getPoint(v2, t2), overlap),\n\t\t\t\t\tflip = loc1.getPath() === loc2.getPath()\n\t\t\t\t\t\t&& loc1.getIndex() > loc2.getIndex(),\n\t\t\t\t\tloc = flip ? loc2 : loc1,\n\t\t\t\t\tinclude = param.include;\n\t\t\t\tloc1._intersection = loc2;\n\t\t\t\tloc2._intersection = loc1;\n\t\t\t\tif (!include || include(loc)) {\n\t\t\t\t\tCurveLocation.insert(locations, loc, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addCurveIntersections(v1, v2, c1, c2, locations, param,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (++recursion >= 24)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]),\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]),\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\thull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\ttop = hull[0],\n\t\t\tbottom = hull[1],\n\t\t\ttMinClip,\n\t\t\ttMaxClip;\n\t\tif ((tMinClip = clipConvexHull(top, bottom, dMin, dMax)) == null ||\n\t\t\t(tMaxClip = clipConvexHull(top.reverse(), bottom.reverse(),\n\t\t\t\tdMin, dMax)) == null)\n\t\t\treturn;\n\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\tvar tDiff = tMaxClip - tMinClip,\n\t\t\ttMinNew = tMin + (tMax - tMin) * tMinClip,\n\t\t\ttMaxNew = tMin + (tMax - tMin) * tMaxClip;\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, c2, c1, locations, param,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, c2, c1, locations, param,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew)\n\t\t\t\t< 1e-7) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tv1 = c1.getValues();\n\t\t\tv2 = c2.getValues();\n\t\t\taddLocation(locations, param,\n\t\t\t\treverse ? v2 : v1, reverse ? c2 : c1, reverse ? t2 : t1, null,\n\t\t\t\treverse ? v1 : v2, reverse ? c1 : c2, reverse ? t1 : t2, null);\n\t\t} else if (tDiff > 1e-12) {\n\t\t\taddCurveIntersections(v2, v1, c2, c1, locations, param,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tdist1 = dq1 - (2 * dq0 + dq3) / 3,\n\t\t\tdist2 = dq2 - (dq0 + 2 * dq3) / 3,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t} else {\n\t\t\tvar distRatio = dist1 / dist2;\n\t\t\thull = [\n\t\t\t\tdistRatio >= 2 ? [p0, p1, p3]\n\t\t\t\t: distRatio <= .5 ? [p0, p2, p3]\n\t\t\t\t: [p0, p1, p2, p3],\n\t\t\t\t[p0, p3]\n\t\t\t];\n\t\t}\n\t\treturn (dist1 || dist2) < 0 ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold) {\n\t\t\t\treturn qy === threshold ? qx\n\t\t\t\t\t\t: px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\t}\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, c1, c2, locations, param) {\n\t\tvar flip = Curve.isStraight(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\tx * sin + y * cos);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tpc = Curve.getPoint(vc, tc),\n\t\t\t\ttl = Curve.getParameterOf(vl, pc);\n\t\t\tif (tl !== null) {\n\t\t\t\tvar pl = Curve.getPoint(vl, tl),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\tif (!param.endConnected || t2 > Numerical.CURVETIME_EPSILON) {\n\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\tv1, c1, t1, flip ? pl : pc,\n\t\t\t\t\t\t\tv2, c2, t2, flip ? pc : pl);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, c1, c2, locations, param) {\n\t\tvar pt = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (pt) {\n\t\t\taddLocation(locations, param, v1, c1, null, pt, v2, c2, null, pt);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\t_getIntersections: function(v1, v2, c1, c2, locations, param) {\n\t\t\tif (!v2) {\n\t\t\t\treturn Curve._getSelfIntersection(v1, c1, locations, param);\n\t\t\t}\n\t\t\tvar c1p1x = v1[0], c1p1y = v1[1],\n\t\t\t\tc1p2x = v1[6], c1p2y = v1[7],\n\t\t\t\tc2p1x = v2[0], c2p1y = v2[1],\n\t\t\t\tc2p2x = v2[6], c2p2y = v2[7],\n\t\t\t\tc1s1x = (3 * v1[2] + c1p1x) / 4,\n\t\t\t\tc1s1y = (3 * v1[3] + c1p1y) / 4,\n\t\t\t\tc1s2x = (3 * v1[4] + c1p2x) / 4,\n\t\t\t\tc1s2y = (3 * v1[5] + c1p2y) / 4,\n\t\t\t\tc2s1x = (3 * v2[2] + c2p1x) / 4,\n\t\t\t\tc2s1y = (3 * v2[3] + c2p1y) / 4,\n\t\t\t\tc2s2x = (3 * v2[4] + c2p2x) / 4,\n\t\t\t\tc2s2y = (3 * v2[5] + c2p2y) / 4,\n\t\t\t\tmin = Math.min,\n\t\t\t\tmax = Math.max;\n\t\t\tif (!(\tmax(c1p1x, c1s1x, c1s2x, c1p2x) >=\n\t\t\t\t\tmin(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\tmin(c1p1x, c1s1x, c1s2x, c1p2x) <=\n\t\t\t\t\tmax(c2p1x, c2s1x, c2s2x, c2p2x) &&\n\t\t\t\t\tmax(c1p1y, c1s1y, c1s2y, c1p2y) >=\n\t\t\t\t\tmin(c2p1y, c2s1y, c2s2y, c2p2y) &&\n\t\t\t\t\tmin(c1p1y, c1s1y, c1s2y, c1p2y) <=\n\t\t\t\t\tmax(c2p1y, c2s1y, c2s2y, c2p2y)))\n\t\t\t\treturn locations;\n\t\t\tif (!param.startConnected && !param.endConnected) {\n\t\t\t\tvar overlaps = Curve.getOverlaps(v1, v2);\n\t\t\t\tif (overlaps) {\n\t\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\t\tvar overlap = overlaps[i];\n\t\t\t\t\t\taddLocation(locations, param,\n\t\t\t\t\t\t\tv1, c1, overlap[0], null,\n\t\t\t\t\t\t\tv2, c2, overlap[1], null, true);\n\t\t\t\t\t}\n\t\t\t\t\treturn locations;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar straight1 = Curve.isStraight(v1),\n\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\tstraight = straight1 && straight2,\n\t\t\t\tepsilon = 1e-12,\n\t\t\t\tbefore = locations.length;\n\t\t\t(straight\n\t\t\t\t? addLineIntersection\n\t\t\t\t: straight1 || straight2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, param,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (straight && locations.length > before)\n\t\t\t\treturn locations;\n\t\t\tvar c1p1 = new Point(c1p1x, c1p1y),\n\t\t\t\tc1p2 = new Point(c1p2x, c1p2y),\n\t\t\t\tc2p1 = new Point(c2p1x, c2p1y),\n\t\t\t\tc2p2 = new Point(c2p2x, c2p2y);\n\t\t\tif (c1p1.isClose(c2p1, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 0, c2p1);\n\t\t\tif (!param.startConnected && c1p1.isClose(c2p2, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 0, c1p1, v2, c2, 1, c2p2);\n\t\t\tif (!param.endConnected && c1p2.isClose(c2p1, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 0, c2p1);\n\t\t\tif (c1p2.isClose(c2p2, epsilon))\n\t\t\t\taddLocation(locations, param, v1, c1, 1, c1p2, v2, c2, 1, c2p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\t_getSelfIntersection: function(v1, c1, locations, param) {\n\t\t\tvar p1x = v1[0], p1y = v1[1],\n\t\t\t\th1x = v1[2], h1y = v1[3],\n\t\t\t\th2x = v1[4], h2y = v1[5],\n\t\t\t\tp2x = v1[6], p2y = v1[7];\n\t\t\tvar line = new Line(p1x, p1y, p2x, p2y, false),\n\t\t\t\tside1 = line.getSide(new Point(h1x, h1y), true),\n\t\t\t\tside2 = line.getSide(new Point(h2x, h2y), true);\n\t\t\tif (side1 === side2) {\n\t\t\t\tvar edgeSum = (p1x - h2x) * (h1y - p2y)\n\t\t\t\t\t\t\t+ (h1x - p2x) * (h2y - p1y);\n\t\t\t\tif (edgeSum * side1 > 0)\n\t\t\t\t\treturn locations;\n\t\t\t}\n\t\t\tvar ax = p2x - 3 * h2x + 3 * h1x - p1x,\n\t\t\t\tbx = h2x - 2 * h1x + p1x,\n\t\t\t\tcx = h1x - p1x,\n\t\t\t\tay = p2y - 3 * h2y + 3 * h1y - p1y,\n\t\t\t\tby = h2y - 2 * h1y + p1y,\n\t\t\t\tcy = h1y - p1y,\n\t\t\t\tac = ay * cx - ax * cy,\n\t\t\t\tab = ay * bx - ax * by,\n\t\t\t\tbc = by * cx - bx * cy;\n\t\t\tif (ac * ac - 4 * ab * bc < 0) {\n\t\t\t\tvar roots = [],\n\t\t\t\t\ttSplit,\n\t\t\t\t\tcount = Numerical.solveCubic(\n\t\t\t\t\t\t\tax * ax\t + ay * ay,\n\t\t\t\t\t\t\t3 * (ax * bx + ay * by),\n\t\t\t\t\t\t\t2 * (bx * bx + by * by) + ax * cx + ay * cy,\n\t\t\t\t\t\t\tbx * cx + by * cy,\n\t\t\t\t\t\t\troots, 0, 1);\n\t\t\t\tif (count > 0) {\n\t\t\t\t\tfor (var i = 0, maxCurvature = 0; i < count; i++) {\n\t\t\t\t\t\tvar curvature = Math.abs(\n\t\t\t\t\t\t\t\tc1.getCurvatureAt(roots[i], true));\n\t\t\t\t\t\tif (curvature > maxCurvature) {\n\t\t\t\t\t\t\tmaxCurvature = curvature;\n\t\t\t\t\t\t\ttSplit = roots[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar parts = Curve.subdivide(v1, tSplit);\n\t\t\t\t\tparam.endConnected = true;\n\t\t\t\t\tparam.renormalize = function(t1, t2) {\n\t\t\t\t\t\treturn [t1 * tSplit, t2 * (1 - tSplit) + tSplit];\n\t\t\t\t\t};\n\t\t\t\t\tCurve._getIntersections(parts[0], parts[1], c1, c1,\n\t\t\t\t\t\t\tlocations, param);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn locations;\n\t\t},\n\n\t\tgetOverlaps: function(v1, v2) {\n\t\t\tvar abs = Math.abs,\n\t\t\t\ttimeEpsilon = 4e-7,\n\t\t\t\tgeomEpsilon = 2e-7,\n\t\t\t\tstraight1 = Curve.isStraight(v1),\n\t\t\t\tstraight2 = Curve.isStraight(v2),\n\t\t\t\tstraight =\tstraight1 && straight2;\n\n\t\t\tfunction getLineLengthSquared(v) {\n\t\t\t\tvar x = v[6] - v[0],\n\t\t\t\t\ty = v[7] - v[1];\n\t\t\t\treturn x * x + y * y;\n\t\t\t}\n\n\t\t\tif (straight) {\n\t\t\t\tvar flip = getLineLengthSquared(v1) < getLineLengthSquared(v2),\n\t\t\t\t\tl1 = flip ? v2 : v1,\n\t\t\t\t\tl2 = flip ? v1 : v2,\n\t\t\t\t\tline = new Line(l1[0], l1[1], l1[6], l1[7]);\n\t\t\t\tif (line.getDistance(new Point(l2[0], l2[1])) > geomEpsilon ||\n\t\t\t\t\tline.getDistance(new Point(l2[6], l2[7])) > geomEpsilon)\n\t\t\t\t\treturn null;\n\t\t\t} else if (straight1 ^ straight2) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar v = [v1, v2],\n\t\t\t\tpairs = [];\n\t\t\tfor (var i = 0, t1 = 0;\n\t\t\t\t\ti < 2 && pairs.length < 2;\n\t\t\t\t\ti += t1 === 0 ? 0 : 1, t1 = t1 ^ 1) {\n\t\t\t\tvar t2 = Curve.getParameterOf(v[i ^ 1], new Point(\n\t\t\t\t\t\tv[i][t1 === 0 ? 0 : 6],\n\t\t\t\t\t\tv[i][t1 === 0 ? 1 : 7]));\n\t\t\t\tif (t2 != null) {\n\t\t\t\t\tvar pair = i === 0 ? [t1, t2] : [t2, t1];\n\t\t\t\t\tif (pairs.length === 0 ||\n\t\t\t\t\t\tabs(pair[0] - pairs[0][0]) > timeEpsilon &&\n\t\t\t\t\t\tabs(pair[1] - pairs[0][1]) > timeEpsilon)\n\t\t\t\t\t\tpairs.push(pair);\n\t\t\t\t}\n\t\t\t\tif (i === 1 && pairs.length === 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (pairs.length !== 2) {\n\t\t\t\tpairs = null;\n\t\t\t} else if (!straight) {\n\t\t\t\tvar o1 = Curve.getPart(v1, pairs[0][0], pairs[1][0]),\n\t\t\t\t\to2 = Curve.getPart(v2, pairs[0][1], pairs[1][1]);\n\t\t\t\tif (abs(o2[2] - o1[2]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[3] - o1[3]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[4] - o1[4]) > geomEpsilon ||\n\t\t\t\t\tabs(o2[5] - o1[5]) > geomEpsilon)\n\t\t\t\t\tpairs = null;\n\t\t\t}\n\t\t\treturn pairs;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point,\n\t\t\t_overlap, _distance) {\n\t\tif (parameter > 0.9999996) {\n\t\t\tvar next = curve.getNext();\n\t\t\tif (next) {\n\t\t\t\tparameter = 0;\n\t\t\t\tcurve = next;\n\t\t\t}\n\t\t}\n\t\tthis._id = UID.get(CurveLocation);\n\t\tthis._setCurve(curve);\n\t\tthis._parameter = parameter;\n\t\tthis._point = point || curve.getPointAt(parameter, true);\n\t\tthis._overlap = _overlap;\n\t\tthis._distance = _distance;\n\t\tthis._intersection = this._next = this._prev = null;\n\t},\n\n\t_setCurve: function(curve) {\n\t\tvar path = curve._path;\n\t\tthis._version = path ? path._version : 0;\n\t\tthis._curve = curve;\n\t\tthis._segment = null;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t},\n\n\t_setSegment: function(segment) {\n\t\tthis._setCurve(segment.getCurve());\n\t\tthis._segment = segment;\n\t\tthis._parameter = segment === this._segment1 ? 0 : 1;\n\t\tthis._point = segment._point.clone();\n\t},\n\n\tgetSegment: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tsegment = this._segment;\n\t\tif (!segment) {\n\t\t\tvar parameter = this.getParameter();\n\t\t\tif (parameter === 0) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (parameter === 1) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else if (parameter != null) {\n\t\t\t\tsegment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tthis._segment = segment;\n\t\t}\n\t\treturn segment;\n\t},\n\n\tgetCurve: function() {\n\t\tvar curve = this._curve,\n\t\t\tpath = curve && curve._path,\n\t\t\tthat = this;\n\t\tif (path && path._version !== this._version) {\n\t\t\tcurve = this._parameter = this._curve = this._offset = null;\n\t\t}\n\n\t\tfunction trySegment(segment) {\n\t\t\tvar curve = segment && segment.getCurve();\n\t\t\tif (curve && (that._parameter = curve.getParameterOf(that._point))\n\t\t\t\t\t!= null) {\n\t\t\t\tthat._setCurve(curve);\n\t\t\t\tthat._segment = segment;\n\t\t\t\treturn curve;\n\t\t\t}\n\t\t}\n\n\t\treturn curve\n\t\t\t|| trySegment(this._segment)\n\t\t\t|| trySegment(this._segment1)\n\t\t\t|| trySegment(this._segment2.getPrevious());\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetParameter: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this._parameter;\n\t\treturn curve && parameter == null\n\t\t\t? this._parameter = curve.getParameterOf(this._point)\n\t\t\t: parameter;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tgetOffset: function() {\n\t\tvar offset = this._offset;\n\t\tif (offset == null) {\n\t\t\toffset = 0;\n\t\t\tvar path = this.getPath(),\n\t\t\t\tindex = this.getIndex();\n\t\t\tif (path && index != null) {\n\t\t\t\tvar curves = path.getCurves();\n\t\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\t\toffset += curves[i].getLength();\n\t\t\t}\n\t\t\tthis._offset = offset += this.getCurveOffset();\n\t\t}\n\t\treturn offset;\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetIntersection: function() {\n\t\treturn this._intersection;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tres = null;\n\t\tif (curve) {\n\t\t\tres = curve.divide(this.getParameter(), true);\n\t\t\tif (res)\n\t\t\t\tthis._setSegment(res._segment1);\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve ? curve.split(this.getParameter(), true) : null;\n\t},\n\n\tequals: function(loc, _ignoreOther) {\n\t\tvar res = this === loc,\n\t\t\tepsilon = 2e-7;\n\t\tif (!res && loc instanceof CurveLocation\n\t\t\t\t&& this.getPath() === loc.getPath()\n\t\t\t\t&& this.getPoint().isClose(loc.getPoint(), epsilon)) {\n\t\t\tvar c1 = this.getCurve(),\n\t\t\t\tc2 = loc.getCurve(),\n\t\t\t\tabs = Math.abs,\n\t\t\t\tdiff = abs(\n\t\t\t\t\t((c1.isLast() && c2.isFirst() ? -1 : c1.getIndex())\n\t\t\t\t\t\t\t+ this.getParameter()) -\n\t\t\t\t\t((c2.isLast() && c1.isFirst() ? -1 : c2.getIndex())\n\t\t\t\t\t\t\t+ loc.getParameter()));\n\t\t\tres = (diff < 4e-7\n\t\t\t\t|| ((diff = abs(this.getOffset() - loc.getOffset())) < epsilon\n\t\t\t\t\t|| abs(this.getPath().getLength() - diff) < epsilon))\n\t\t\t\t&& (_ignoreOther\n\t\t\t\t\t|| (!this._intersection && !loc._intersection\n\t\t\t\t\t\t|| this._intersection && this._intersection.equals(\n\t\t\t\t\t\t\t\tloc._intersection, true)));\n\t\t}\n\t\treturn res;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\tisTouching: function() {\n\t\tvar inter = this._intersection;\n\t\tif (inter && this.getTangent().isCollinear(inter.getTangent())) {\n\t\t\tvar curve1 = this.getCurve(),\n\t\t\t\tcurve2 = inter.getCurve();\n\t\t\treturn !(curve1.isStraight() && curve2.isStraight()\n\t\t\t\t\t&& curve1.getLine().intersect(curve2.getLine()));\n\t\t}\n\t\treturn false;\n\t},\n\n\tisCrossing: function() {\n\t\tvar inter = this._intersection;\n\t\tif (!inter)\n\t\t\treturn false;\n\t\tvar t1 = this.getParameter(),\n\t\t\tt2 = inter.getParameter(),\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (t1 >= tMin && t1 <= tMax || t2 >= tMin && t2 <= tMax)\n\t\t\treturn !this.isTouching();\n\t\tvar c2 = this.getCurve(),\n\t\t\tc1 = c2.getPrevious(),\n\t\t\tc4 = inter.getCurve(),\n\t\t\tc3 = c4.getPrevious(),\n\t\t\tPI = Math.PI;\n\t\tif (!c1 || !c3)\n\t\t\treturn false;\n\n\t\tfunction isInRange(angle, min, max) {\n\t\t\treturn min < max\n\t\t\t\t? angle > min && angle < max\n\t\t\t\t: angle > min && angle <= PI || angle >= -PI && angle < max;\n\t\t}\n\n\t\tvar a1 = c1.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\ta2 = c2.getTangentAt(tMin, true).getAngleInRadians(),\n\t\t\ta3 = c3.getTangentAt(tMax, true).negate().getAngleInRadians(),\n\t\t\ta4 = c4.getTangentAt(tMin, true).getAngleInRadians();\n\n\t\treturn (isInRange(a3, a1, a2) ^ isInRange(a4, a1, a2))\n\t\t\t&& (isInRange(a3, a2, a1) ^ isInRange(a4, a2, a1));\n\t},\n\n\tisOverlap: function() {\n\t\treturn !!this._overlap;\n\t}\n}, Base.each(Curve.evaluateMethods, function(name) {\n\tvar get = name + 'At';\n\tthis[name] = function() {\n\t\tvar parameter = this.getParameter(),\n\t\t\tcurve = this.getCurve();\n\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t};\n}, {\n\tpreserve: true\n}),\nnew function() {\n\n\tfunction insert(locations, loc, merge) {\n\t\tvar length = locations.length,\n\t\t\tl = 0,\n\t\t\tr = length - 1;\n\n\t\tfunction search(index, dir) {\n\t\t\tfor (var i = index + dir; i >= -1 && i <= length; i += dir) {\n\t\t\t\tvar loc2 = locations[((i % length) + length) % length];\n\t\t\t\tif (!loc.getPoint().isClose(loc2.getPoint(),\n\t\t\t\t\t\t2e-7))\n\t\t\t\t\tbreak;\n\t\t\t\tif (loc.equals(loc2))\n\t\t\t\t\treturn loc2;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\twhile (l <= r) {\n\t\t\tvar m = (l + r) >>> 1,\n\t\t\t\tloc2 = locations[m],\n\t\t\t\tfound;\n\t\t\tif (merge && (found = loc.equals(loc2) ? loc2\n\t\t\t\t\t: (search(m, -1) || search(m, 1)))) {\n\t\t\t\tif (loc._overlap) {\n\t\t\t\t\tfound._overlap = found._intersection._overlap = true;\n\t\t\t\t}\n\t\t\t\treturn found;\n\t\t\t}\n\t\tvar path1 = loc.getPath(),\n\t\t\tpath2 = loc2.getPath(),\n\t\t\tdiff = path1 === path2\n\t\t\t\t? (loc.getIndex() + loc.getParameter())\n\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t: path1._id - path2._id;\n\t\t\tif (diff < 0) {\n\t\t\t\tr = m - 1;\n\t\t\t} else {\n\t\t\t\tl = m + 1;\n\t\t\t}\n\t\t}\n\t\tlocations.splice(l, 0, loc);\n\t\treturn loc;\n\t}\n\n\treturn { statics: {\n\t\tinsert: insert,\n\n\t\texpand: function(locations) {\n\t\t\tvar expanded = locations.slice();\n\t\t\tfor (var i = 0, l = locations.length; i < l; i++) {\n\t\t\t\tinsert(expanded, locations[i]._intersection, false);\n\t\t\t}\n\t\t\treturn expanded;\n\t\t}\n\t}};\n});\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, include, _matrix, _returnFirst) {\n\t\tvar self = this === path || !path,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = self ? matrix1\n\t\t\t\t: (_matrix || path._matrix).orNullIfIdentity();\n\t\tif (!self && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tvar curves1 = this.getCurves(),\n\t\t\tcurves2 = self ? curves1 : path.getCurves(),\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = self ? length1 : curves2.length,\n\t\t\tvalues2 = [],\n\t\t\tarrays = [],\n\t\t\tlocations,\n\t\t\tpath;\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = self ? values2[i] : curve1.getValues(matrix1),\n\t\t\t\tpath1 = curve1.getPath();\n\t\t\tif (path1 !== path) {\n\t\t\t\tpath = path1;\n\t\t\t\tlocations = [];\n\t\t\t\tarrays.push(locations);\n\t\t\t}\n\t\t\tif (self) {\n\t\t\t\tCurve._getSelfIntersection(values1, curve1, locations, {\n\t\t\t\t\tinclude: include,\n\t\t\t\t\tstartConnected: length1 === 1 &&\n\t\t\t\t\t\t\tcurve1.getPoint1().equals(curve1.getPoint2())\n\t\t\t\t});\n\t\t\t}\n\t\t\tfor (var j = self ? i + 1 : 0; j < length2; j++) {\n\t\t\t\tif (_returnFirst && locations.length)\n\t\t\t\t\treturn locations;\n\t\t\t\tvar curve2 = curves2[j];\n\t\t\t\tCurve._getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curve2, locations,\n\t\t\t\t\t{\n\t\t\t\t\t\tinclude: include,\n\t\t\t\t\t\tstartConnected: self && curve1.getPrevious() === curve2,\n\t\t\t\t\t\tendConnected: self && curve1.getNext() === curve2\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlocations = [];\n\t\tfor (var i = 0, l = arrays.length; i < l; i++) {\n\t\t\tlocations.push.apply(locations, arrays[i]);\n\t\t}\n\t\treturn locations;\n\t},\n\n\tgetCrossings: function(path) {\n\t\treturn this.getIntersections(path, function(inter) {\n\t\t\treturn inter.isCrossing();\n\t\t});\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tthis._version = 0;\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._area = this._clockwise = this._monoCurves =\n\t\t\t\t\tundefined;\n\t\t\tif (flags & 16) {\n\t\t\t\tthis._version++;\n\t\t\t} else if (this._curves) {\n\t\t\t   for (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves) {\n\t\t\tvar total = this._countCurves(),\n\t\t\t\tfrom = index + amount - 1 === total ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, total);\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\thasHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tif (segments[i].hasHandles())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tclearHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsegments[i].clearHandles();\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tlength = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tlength += curves[i].getLength();\n\t\t\tthis._length = length;\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tif (this._area == null) {\n\t\t\tvar segments = this._segments,\n\t\t\t\tcount = segments.length,\n\t\t\t\tlast = count - 1,\n\t\t\t\tarea = 0;\n\t\t\tfor (var i = 0, l = this._closed ? count : last; i < l; i++) {\n\t\t\t\tarea += Curve.getArea(Curve.getValues(\n\t\t\t\t\t\tsegments[i], segments[i < last ? i + 1 : 0]));\n\t\t\t}\n\t\t\tthis._area = area;\n\t\t}\n\t\treturn this._area;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn this.getArea() >= 0;\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.getPointAt(pos)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (!curve.hasHandles() && (curve.getLength() === 0\n\t\t\t\t\t|| curve.isCollinear(curve.getNext())))\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tMin = 4e-7,\n\t\t\ttMax = 1 - tMin;\n\t\tif (parameter >= tMax) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter >= tMin) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\tpath.insertAbove(this, true);\n\t\t\t\tthis._clone(path);\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path._closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isCollinear(i, j) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\tseg3 = segments[j],\n\t\t\t\tseg4 = seg3.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg3._handleOut.isZero() && seg4._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isCollinear(\n\t\t\t\t\t\tseg4._point.subtract(seg3._point));\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\tvar seg2 = segments[i],\n\t\t\t\tseg1 = seg2.getPrevious(),\n\t\t\t\tseg3 = seg2.getNext();\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg2._handleOut.isZero() && seg3._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isOrthogonal(\n\t\t\t\t\t\tseg3._point.subtract(seg2._point));\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\tvar seg1 = segments[i],\n\t\t\t\tseg2 = seg1.getNext(),\n\t\t\t\thandle1 = seg1._handleOut,\n\t\t\t\thandle2 = seg2._handleIn,\n\t\t\t\tkappa = 0.5522847498307936;\n\t\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\t\tvar pt1 = seg1._point,\n\t\t\t\t\tpt2 = seg2._point,\n\t\t\t\t\tcorner = new Line(pt1, handle1, true).intersect(\n\t\t\t\t\t\t\tnew Line(pt2, handle2, true), true);\n\t\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt1).getLength() - kappa)\n\t\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt2).getLength() - kappa);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (!this.hasHandles() && segments.length === 4\n\t\t\t\t&& isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = this._clone(new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t}), insert, false);\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset,\n\t\t\t\tcurve = curves[index];\n\t\t\treturn curve ? curve.getLocationAt(offset - index, true) : null;\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (curves.length > 0 && offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}),\nnew function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n},\nnew function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < 1e-12)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isCollinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().multiply(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\tvar item = items[i];\n\t\t\tif (item instanceof CompoundPath) {\n\t\t\t\titems.splice.apply(items, [i, 1].concat(item.removeChildren()));\n\t\t\t\titem.remove();\n\t\t\t}\n\t\t}\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tvar children = this._children;\n\t\tfor (var i = children.length - 1; i >= 0; i--) {\n\t\t\tvar path = children[i].reduce();\n\t\t\tif (path.isEmpty())\n\t\t\t\tchildren.splice(i, 1);\n\t\t}\n\t\tif (children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t}\n\t\treturn reduce.base.call(this);\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : _matrix, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n},\nnew function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current\n\t\t\t\t\t\t: new Path(Item.NO_INSERT);\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction preparePath(path, resolve) {\n\t\tvar res = path.clone(false).reduce().transform(null, true, true);\n\t\treturn resolve ? res.resolveCrossings().reorient() : res;\n\t}\n\n\tfunction finishBoolean(ctor, paths, path1, path2, reduce) {\n\t\tvar result = new ctor(Item.NO_INSERT);\n\t\tresult.addChildren(paths, true);\n\t\tif (reduce)\n\t\t\tresult = result.reduce();\n\t\tresult.insertAbove(path2 && path1.isSibling(path2)\n\t\t\t\t&& path1.getIndex() < path2.getIndex()\n\t\t\t\t\t? path2 : path1);\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tif (!path1._children && !path1._closed)\n\t\t\treturn computeOpenBoolean(path1, path2, operation);\n\t\tvar _path1 = preparePath(path1, true),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2, true);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tvar intersections = CurveLocation.expand(\n\t\t\t_path1.getIntersections(_path2, function(inter) {\n\t\t\t\treturn _path2 && inter.isOverlap() || inter.isCrossing();\n\t\t\t})\n\t\t);\n\t\tdivideLocations(intersections);\n\n\t\tvar segments = [],\n\t\t\tmonoCurves = [];\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tfor (var i = 0, l = intersections.length; i < l; i++) {\n\t\t\tpropagateWinding(intersections[i]._segment, _path1, _path2,\n\t\t\t\t\tmonoCurves, operation);\n\t\t}\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding == null) {\n\t\t\t\tpropagateWinding(segment, _path1, _path2, monoCurves,\n\t\t\t\t\t\toperation);\n\t\t\t}\n\t\t}\n\t\treturn finishBoolean(CompoundPath, tracePaths(segments, operation),\n\t\t\t\tpath1, path2, true);\n\t}\n\n\tfunction computeOpenBoolean(path1, path2, operation) {\n\t\tif (!path2 || !path2._children && !path2._closed\n\t\t\t\t|| !/^(subtract|intersect)$/.test(operation))\n\t\t\treturn null;\n\t\tvar _path1 = preparePath(path1, false),\n\t\t\t_path2 = preparePath(path2, false),\n\t\t\tintersections = _path1.getIntersections(_path2, function(inter) {\n\t\t\t\treturn inter.isOverlap() || inter.isCrossing();\n\t\t\t}),\n\t\t\tsub = operation === 'subtract',\n\t\t\tpaths = [];\n\n\t\tfunction addPath(path) {\n\t\t\tif (_path2.contains(path.getPointAt(path.getLength() / 2)) ^ sub) {\n\t\t\t\tpaths.unshift(path);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = intersections.length - 1; i >= 0; i--) {\n\t\t\tvar path = intersections[i].split();\n\t\t\tif (path) {\n\t\t\t\tif (addPath(path))\n\t\t\t\t\tpath.getFirstSegment().setHandleIn(0, 0);\n\t\t\t\t_path1.getLastSegment().setHandleOut(0, 0);\n\t\t\t}\n\t\t}\n\t\taddPath(_path1);\n\t\treturn finishBoolean(Group, paths, path1, path2);\n\t}\n\n\tfunction linkIntersections(from, to) {\n\t\tvar prev = from;\n\t\twhile (prev) {\n\t\t\tif (prev === to)\n\t\t\t\treturn;\n\t\t\tprev = prev._prev;\n\t\t}\n\t\twhile (from._next && from._next !== to)\n\t\t\tfrom = from._next;\n\t\tif (!from._next) {\n\t\t\twhile (to._prev)\n\t\t\t\tto = to._prev;\n\t\t\tfrom._next = to;\n\t\t\tto._prev = from;\n\t\t}\n\t}\n\n\tfunction divideLocations(locations) {\n\t\tvar tMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tnoHandles = false,\n\t\t\tclearSegments = [],\n\t\t\tprevCurve,\n\t\t\tprevT;\n\n\t\tfor (var i = locations.length - 1; i >= 0; i--) {\n\t\t\tvar loc = locations[i],\n\t\t\t\tcurve = loc._curve,\n\t\t\t\tt = loc._parameter,\n\t\t\t\torigT = t;\n\t\t\tif (curve !== prevCurve) {\n\t\t\t\tnoHandles = !curve.hasHandles();\n\t\t\t} else if (prevT > 0) {\n\t\t\t\tt /= prevT;\n\t\t\t}\n\t\t\tvar segment;\n\t\t\tif (t < tMin) {\n\t\t\t\tsegment = curve._segment1;\n\t\t\t} else if (t > tMax) {\n\t\t\t\tsegment = curve._segment2;\n\t\t\t} else {\n\t\t\t\tsegment = curve.divide(t, true, true)._segment1;\n\t\t\t\tif (noHandles)\n\t\t\t\t\tclearSegments.push(segment);\n\t\t\t}\n\t\t\tloc._setSegment(segment);\n\t\t\tvar inter = segment._intersection,\n\t\t\t\tdest = loc._intersection;\n\t\t\tif (inter) {\n\t\t\t\tlinkIntersections(inter, dest);\n\t\t\t\tvar other = inter;\n\t\t\t\twhile (other) {\n\t\t\t\t\tlinkIntersections(other._intersection, inter);\n\t\t\t\t\tother = other._next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tsegment._intersection = dest;\n\t\t\t}\n\t\t\tprevCurve = curve;\n\t\t\tprevT = origT;\n\t\t}\n\t\tfor (var i = 0, l = clearSegments.length; i < l; i++) {\n\t\t\tclearSegments[i].clearHandles();\n\t\t}\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar epsilon = 2e-7,\n\t\t\ttMin = 4e-7,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - epsilon,\n\t\t\t\tyAfter = py + epsilon;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.getPoint(values, roots[j]).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves, false,\n\t\t\t\t\t\ttestContains);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves, false,\n\t\t\t\t\t\ttestContains);\n\t\t} else {\n\t\t\tvar xBefore = px - epsilon,\n\t\t\t\txAfter = px + epsilon;\n\t\t\tvar startCounted = false,\n\t\t\t\tprevCurve,\n\t\t\t\tprevT;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0];\n\t\t\t\t\tif (!(\n\t\t\t\t\t\tt > tMax && startCounted && curve.next !== curves[i + 1]\n\t\t\t\t\t\t|| t < tMin && prevT > tMax\n\t\t\t\t\t\t\t&& curve.previous === prevCurve)) {\n\t\t\t\t\t\tvar x = Curve.getPoint(values, t).x,\n\t\t\t\t\t\t\tslope = Curve.getTangent(values, t).y,\n\t\t\t\t\t\t\tcounted = false;\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isStraight(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (curve.previous !== curves[i - 1])\n\t\t\t\t\t\t\tstartCounted = t < tMin && counted;\n\t\t\t\t\t}\n\t\t\t\t\tprevCurve = curve;\n\t\t\t\t\tprevT = t;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction propagateWinding(segment, path1, path2, monoCurves, operation) {\n\t\tvar epsilon = 2e-7,\n\t\t\tchain = [],\n\t\t\tstart = segment,\n\t\t\ttotalLength = 0,\n\t\t\twindingSum = 0;\n\t\tdo {\n\t\t\tvar curve = segment.getCurve(),\n\t\t\t\tlength = curve.getLength();\n\t\t\tchain.push({ segment: segment, curve: curve, length: length });\n\t\t\ttotalLength += length;\n\t\t\tsegment = segment.getNext();\n\t\t} while (segment && !segment._intersection && segment !== start);\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tvar length = totalLength * (i + 1) / 4;\n\t\t\tfor (var k = 0, m = chain.length; k < m; k++) {\n\t\t\t\tvar node = chain[k],\n\t\t\t\t\tcurveLength = node.length;\n\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\tif (length < epsilon || curveLength - length < epsilon)\n\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\tvar curve = node.curve,\n\t\t\t\t\t\tpath = curve._path,\n\t\t\t\t\t\tparent = path._parent,\n\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\thor = curve.isHorizontal();\n\t\t\t\t\tif (parent instanceof CompoundPath)\n\t\t\t\t\t\tpath = parent;\n\t\t\t\t\twindingSum += operation === 'subtract' && path2\n\t\t\t\t\t\t&& (path === path1 && path2._getWinding(pt, hor)\n\t\t\t\t\t\t|| path === path2 && !path1._getWinding(pt, hor))\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tlength -= curveLength;\n\t\t\t}\n\t\t}\n\t\tvar winding = Math.round(windingSum / 3);\n\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\tchain[j].segment._winding = winding;\n\t}\n\n\tfunction tracePaths(segments, operation) {\n\t\tvar paths = [],\n\t\t\tstart,\n\t\t\totherStart,\n\t\t\toperator = operators[operation],\n\t\t\toverlapWinding = {\n\t\t\t\tunite: { 1: 2 },\n\t\t\t\tintersect: { 2: 1 }\n\t\t\t}[operation];\n\n\t\tfunction isValid(seg, adjusted) {\n\t\t\tif (seg._visited)\n\t\t\t\treturn false;\n\t\t\tif (!operator)\n\t\t\t\treturn true;\n\t\t\tvar winding = seg._winding,\n\t\t\t\tinter = seg._intersection;\n\t\t\tif (inter && adjusted && overlapWinding && inter.isOverlap())\n\t\t\t\twinding = overlapWinding[winding] || winding;\n\t\t\treturn operator(winding);\n\t\t}\n\n\t\tfunction isStart(seg) {\n\t\t\treturn seg === start || seg === otherStart;\n\t\t}\n\n\t\tfunction findBestIntersection(inter, strict) {\n\t\t\tif (!inter._next)\n\t\t\t\treturn inter;\n\t\t\twhile (inter) {\n\t\t\t\tvar seg = inter._segment,\n\t\t\t\t\tnextSeg = seg.getNext(),\n\t\t\t\t\tnextInter = nextSeg._intersection;\n\t\t\t\tif (isStart(nextSeg)\n\t\t\t\t\t|| !seg._visited && !nextSeg._visited\n\t\t\t\t\t&& (!operator\n\t\t\t\t\t\t|| (!strict || isValid(seg))\n\t\t\t\t\t\t&& (!(strict && nextInter && nextInter.isOverlap())\n\t\t\t\t\t\t\t&& isValid(nextSeg)\n\t\t\t\t\t\t\t|| !strict && nextInter\n\t\t\t\t\t\t\t&& isValid(nextInter._segment))\n\t\t\t\t\t))\n\t\t\t\t\treturn inter;\n\t\t\t\tinter = inter._next;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tfunction findStartSegment(inter, next) {\n\t\t\twhile (inter) {\n\t\t\t\tvar seg = inter._segment;\n\t\t\t\tif (isStart(seg))\n\t\t\t\t\treturn seg;\n\t\t\t\tinter = inter[next ? '_next' : '_prev'];\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar seg = segments[i],\n\t\t\t\tpath = null,\n\t\t\t\tfinished = false;\n\t\t\tif (!isValid(seg, true))\n\t\t\t\tcontinue;\n\t\t\tstart = otherStart = null;\n\t\t\twhile (!finished) {\n\t\t\t\tvar inter = seg._intersection,\n\t\t\t\t\thandleIn = path && seg._handleIn;\n\t\t\t\tinter = inter && (findBestIntersection(inter, true)\n\t\t\t\t\t\t|| findBestIntersection(inter, false)) || inter;\n\t\t\t\tvar other = inter && inter._segment;\n\t\t\t\tif (other && isValid(other))\n\t\t\t\t\tseg = other;\n\t\t\t\tif (seg._visited) {\n\t\t\t\t\tfinished = isStart(seg);\n\t\t\t\t\tif (!finished && inter) {\n\t\t\t\t\t\tvar found = findStartSegment(inter, true)\n\t\t\t\t\t\t\t|| findStartSegment(inter, false);\n\t\t\t\t\t\tif (found) {\n\t\t\t\t\t\t\tseg = found;\n\t\t\t\t\t\t\tfinished = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (!path) {\n\t\t\t\t\tpath = new Path(Item.NO_INSERT);\n\t\t\t\t\tstart = seg;\n\t\t\t\t\totherStart = other;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, handleIn, seg._handleOut));\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = seg.getNext();\n\t\t\t\tfinished = isStart(seg);\n\t\t\t}\n\t\t\tif (finished) {\n\t\t\t\tpath.firstSegment.setHandleIn(seg._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else if (path) {\n\t\t\t\tconsole.error('Boolean operation resulted in open path',\n\t\t\t\t\t\t'segments =', path._segments.length,\n\t\t\t\t\t\t'length =', path.getLength());\n\t\t\t\tpath = null;\n\t\t\t}\n\t\t\tif (path && (path._segments.length > 8\n\t\t\t\t\t|| !Numerical.isZero(path.getArea()))) {\n\t\t\t\tpaths.push(path);\n\t\t\t\tpath = null;\n\t\t\t}\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn finishBoolean(Group,\n\t\t\t\t\t[this.subtract(path), this.intersect(path)],\n\t\t\t\t\tthis, path, true);\n\t\t},\n\n\t\tresolveCrossings: function() {\n\t\t\tvar crossings = this.getCrossings();\n\t\t\tif (!crossings.length)\n\t\t\t\treturn this;\n\t\t\tdivideLocations(CurveLocation.expand(crossings));\n\t\t\tvar paths = this._children || [this],\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tsegments.push.apply(segments, paths[i]._segments);\n\t\t\t}\n\t\t\treturn finishBoolean(CompoundPath, tracePaths(segments),\n\t\t\t\t\tthis, null, false);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isStraight(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttMin = 4e-7,\n\t\t\t\t\ttMax = 1 - tMin,\n\t\t\t\t\troots = [],\n\t\t\t\t\tn = Numerical.solveQuadratic(a, b, c, roots, tMin, tMax);\n\t\t\t\tif (n === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (n > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.getPoint(values, roots[j]).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve, 0.5),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 1e-6) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, weighted) {\n\t\t\tvar param = this.getParameterAt(offset);\n\t\t\treturn Curve[name](this.curves[param.index], param.value, weighted);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit,\n\t\t\tparametersInOrder = true;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error && parametersInOrder) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tparametersInOrder = this.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1),\n\t\t\teps = epsilon * segLength,\n\t\t\thandle1,\n\t\t\thandle2;\n\t\tif (alpha1 < eps || alpha2 < eps) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t} else {\n\t\t\tvar line = pt2.subtract(pt1);\n\t\t\thandle1 = tan1.normalize(alpha1);\n\t\t\thandle2 = tan2.normalize(alpha2);\n\t\t\tif (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t\thandle1 = handle2 = null;\n\t\t\t}\n\t\t}\n\n\t\treturn [pt1, pt1.add(handle1 || tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(handle2 || tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t\tfor (var i = 1, l = u.length; i < l; i++) {\n\t\t\tif (u[i] <= u[i - 1])\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 1e-6)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert, includeMatrix) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert, includeMatrix);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tthis._components[index] = parser.call(this, value);\n\t\t\t\tthis._changed();\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type],\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tthis._id = UID.get(Color);\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n},\nnew function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = UID.get();\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops, this._radial);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tDomEvent.add(window, {\n\t\tfocus: function() {\n\t\t\tfocused = true;\n\t\t},\n\t\tblur: function() {\n\t\t\tfocused = false;\n\t\t}\n\t});\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif (!this._pixelRatio)\n\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\tthis._id = element.getAttribute('id');\n\t\tif (this._id == null)\n\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\tDomEvent.add(element, this._viewEvents);\n\t\tvar none = 'none';\n\t\tDomElement.setPrefixed(element.style, {\n\t\t\tuserSelect: none,\n\t\t\ttouchAction: none,\n\t\t\ttouchCallout: none,\n\t\t\tcontentZooming: none,\n\t\t\tuserDrag: none,\n\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t});\n\n\t\tfunction getSize(name) {\n\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t};\n\n\t\tfunction getCanvasSize() {\n\t\t\tvar size = DomElement.getSize(element);\n\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t: size;\n\t\t};\n\n\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\tvar that = this;\n\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\tresize: function() {\n\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._setViewSize(size = getCanvasSize());\n\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\tthis._stats = new Stats();\n\t\t\tvar stats = this._stats.domElement,\n\t\t\t\tstyle = stats.style,\n\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\tstyle.position = 'absolute';\n\t\t\tstyle.left = offset.x + 'px';\n\t\t\tstyle.top = offset.y + 'px';\n\t\t\tdocument.body.appendChild(stats);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: Base.each(['onResize', 'onMouseDown', 'onMouseUp', 'onMouseMove'],\n\t\tfunction(name) {\n\t\t\tthis[name] = {\n\t\t\t\tinstall: function(type) {\n\t\t\t\t\tthis._installEvent(type);\n\t\t\t\t},\n\n\t\t\t\tuninstall: function(type) {\n\t\t\t\t\tthis._uninstallEvent(type);\n\t\t\t\t}\n\t\t\t};\n\t\t}, {\n\t\t\tonFrame: {\n\t\t\t\tinstall: function() {\n\t\t\t\t\tthis.play();\n\t\t\t\t},\n\n\t\t\t\tuninstall: function() {\n\t\t\t\t\tthis.pause();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t),\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n},\nnew function() {\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\tvar mouseFlags = {\n\t\tmousedown: {\n\t\t\tmousedown: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmouseup: {\n\t\t\tmouseup: 1,\n\t\t\tmousedrag: 1,\n\t\t\tclick: 1,\n\t\t\tdoubleclick: 1\n\t\t},\n\t\tmousemove: {\n\t\t\tmousedrag: 1,\n\t\t\tmousemove: 1,\n\t\t\tmouseenter: 1,\n\t\t\tmouseleave: 1\n\t\t}\n\t};\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\t_installEvent: function(type) {\n\t\t\tvar counters = this._eventCounters;\n\t\t\tif (counters) {\n\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_uninstallEvent: function(type) {\n\t\t\tvar counters = this._eventCounters;\n\t\t\tif (counters) {\n\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\tvar size = Size.read(arguments, 1);\n\t\t\tif (size.isZero())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t}\n\t\tthis._context = canvas.getContext('2d');\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar browser = paper.browser,\n\t\t\tpixels;\n\t\tif (browser && browser.firefox) {\n\t\t\tvar parent = this._element.parentNode,\n\t\t\t\ttemp = document.createElement('div');\n\t\t\ttemp.style.fontSize = size;\n\t\t\tparent.appendChild(temp);\n\t\t\tpixels = parseFloat(DomElement.getStyles(temp).fontSize);\n\t\t\tparent.removeChild(temp);\n\t\t} else {\n\t\t\tvar ctx = this._context,\n\t\t\t\tprevFont = ctx.font;\n\t\t\tctx.font = size + ' serif';\n\t\t\tpixels = parseFloat(ctx.font);\n\t\t\tctx.font = prevFont;\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function(force) {\n\t\tvar project = this._project;\n\t\tif (!project || !force && !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n},\nnew function() {\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tcommandFixMap,\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers) {\n\t\t\tmodifiers[name] = down;\n\t\t\tvar browser = paper.browser;\n\t\t\tif (name === 'command' && browser && browser.mac) {\n\t\t\t\tif (down) {\n\t\t\t\t\tcommandFixMap = {};\n\t\t\t\t} else {\n\t\t\t\t\tfor (var code in commandFixMap) {\n\t\t\t\t\t\tif (code in charCodeMap)\n\t\t\t\t\t\t\thandleKey(false, code, commandFixMap[code], event);\n\t\t\t\t\t}\n\t\t\t\t\tcommandFixMap = null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (down && commandFixMap) {\n\t\t\tcommandFixMap[keyCode] = charCode;\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (minDistance != null && this._maxDistance != null\n\t\t\t\t&& minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && maxDistance != null\n\t\t\t\t&& maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = this._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tif (maxDistance != null && maxDistance != 0) {\n\t\t\t\t\tif (distance > maxDistance) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDistance));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback, async) {\n\t\tasync = (async === undefined) ? true : async;\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, async);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize(),\n\t\t\timage = item.getImage();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = options.embedImages === false && image && image.src\n\t\t\t\t|| item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tvar matchShapes = options.matchShapes;\n\t\tif (matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (matchShapes && !item.hasHandles()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tif (isRoot) {\n\t\t\tvar defs = node.querySelectorAll('defs');\n\t\t\tfor (var i = 0, l = defs.length; i < l; i++) {\n\t\t\t\timportSVG(defs[i], options, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& childNode.nodeName.toLowerCase() !== 'defs'\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.set(Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {}), {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (item && Base.pick(options.applyMatrix, applyMatrix))\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\nBase.exports.PaperScript = (function() {\n\tvar exports, define,\n\t\tscope = this;\n!function(e,r){return\"object\"==typeof exports&&\"object\"==typeof module?r(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],r):(r(e.acorn||(e.acorn={})),void 0)}(this,function(e){\"use strict\";function r(e){fr=e||{};for(var r in mr)Object.prototype.hasOwnProperty.call(fr,r)||(fr[r]=mr[r]);hr=fr.sourceFile||null}function t(e,r){var t=vr(dr,e);r+=\" (\"+t.line+\":\"+t.column+\")\";var n=new SyntaxError(r);throw n.pos=e,n.loc=t,n.raisedAt=br,n}function n(e){function r(e){if(1==e.length)return t+=\"return str === \"+JSON.stringify(e[0])+\";\";t+=\"switch(str){\";for(var r=0;r<e.length;++r)t+=\"case \"+JSON.stringify(e[r])+\":\";t+=\"return true}return false;\"}e=e.split(\" \");var t=\"\",n=[];e:for(var a=0;a<e.length;++a){for(var o=0;o<n.length;++o)if(n[o][0].length==e[a].length){n[o].push(e[a]);continue e}n.push([e[a]])}if(n.length>3){n.sort(function(e,r){return r.length-e.length}),t+=\"switch(str.length){\";for(var a=0;a<n.length;++a){var i=n[a];t+=\"case \"+i[0].length+\":\",r(i)}t+=\"}\"}else r(e);return new Function(\"str\",t)}function a(){this.line=Ar,this.column=br-Sr}function o(){Ar=1,br=Sr=0,Er=!0,u()}function i(e,r){gr=br,fr.locations&&(kr=new a),wr=e,u(),Cr=r,Er=e.beforeExpr}function s(){var e=fr.onComment&&fr.locations&&new a,r=br,n=dr.indexOf(\"*/\",br+=2);if(-1===n&&t(br-2,\"Unterminated comment\"),br=n+2,fr.locations){Kt.lastIndex=r;for(var o;(o=Kt.exec(dr))&&o.index<br;)++Ar,Sr=o.index+o[0].length}fr.onComment&&fr.onComment(!0,dr.slice(r+2,n),r,br,e,fr.locations&&new a)}function c(){for(var e=br,r=fr.onComment&&fr.locations&&new a,t=dr.charCodeAt(br+=2);pr>br&&10!==t&&13!==t&&8232!==t&&8233!==t;)++br,t=dr.charCodeAt(br);fr.onComment&&fr.onComment(!1,dr.slice(e+2,br),e,br,r,fr.locations&&new a)}function u(){for(;pr>br;){var e=dr.charCodeAt(br);if(32===e)++br;else if(13===e){++br;var r=dr.charCodeAt(br);10===r&&++br,fr.locations&&(++Ar,Sr=br)}else if(10===e||8232===e||8233===e)++br,fr.locations&&(++Ar,Sr=br);else if(e>8&&14>e)++br;else if(47===e){var r=dr.charCodeAt(br+1);if(42===r)s();else{if(47!==r)break;c()}}else if(160===e)++br;else{if(!(e>=5760&&Jt.test(String.fromCharCode(e))))break;++br}}}function l(){var e=dr.charCodeAt(br+1);return e>=48&&57>=e?E(!0):(++br,i(xt))}function f(){var e=dr.charCodeAt(br+1);return Er?(++br,k()):61===e?x(Et,2):x(wt,1)}function d(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Dt,1)}function p(e){var r=dr.charCodeAt(br+1);return r===e?x(124===e?Lt:Ut,2):61===r?x(Et,2):x(124===e?Rt:Tt,1)}function h(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Vt,1)}function m(e){var r=dr.charCodeAt(br+1);return r===e?45==r&&62==dr.charCodeAt(br+2)&&Gt.test(dr.slice(Lr,br))?(br+=3,c(),u(),g()):x(St,2):61===r?x(Et,2):x(At,1)}function v(e){var r=dr.charCodeAt(br+1),t=1;return r===e?(t=62===e&&62===dr.charCodeAt(br+2)?3:2,61===dr.charCodeAt(br+t)?x(Et,t+1):x(jt,t)):33==r&&60==e&&45==dr.charCodeAt(br+2)&&45==dr.charCodeAt(br+3)?(br+=4,c(),u(),g()):(61===r&&(t=61===dr.charCodeAt(br+2)?3:2),x(Ot,t))}function b(e){var r=dr.charCodeAt(br+1);return 61===r?x(qt,61===dr.charCodeAt(br+2)?3:2):x(61===e?Ct:It,1)}function y(e){switch(e){case 46:return l();case 40:return++br,i(mt);case 41:return++br,i(vt);case 59:return++br,i(yt);case 44:return++br,i(bt);case 91:return++br,i(ft);case 93:return++br,i(dt);case 123:return++br,i(pt);case 125:return++br,i(ht);case 58:return++br,i(gt);case 63:return++br,i(kt);case 48:var r=dr.charCodeAt(br+1);if(120===r||88===r)return C();case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return E(!1);case 34:case 39:return A(e);case 47:return f(e);case 37:case 42:return d();case 124:case 38:return p(e);case 94:return h();case 43:case 45:return m(e);case 60:case 62:return v(e);case 61:case 33:return b(e);case 126:return x(It,1)}return!1}function g(e){if(e?br=yr+1:yr=br,fr.locations&&(xr=new a),e)return k();if(br>=pr)return i(Br);var r=dr.charCodeAt(br);if(Qt(r)||92===r)return L();var n=y(r);if(n===!1){var o=String.fromCharCode(r);if(\"\\\\\"===o||$t.test(o))return L();t(br,\"Unexpected character '\"+o+\"'\")}return n}function x(e,r){var t=dr.slice(br,br+r);br+=r,i(e,t)}function k(){for(var e,r,n=\"\",a=br;;){br>=pr&&t(a,\"Unterminated regular expression\");var o=dr.charAt(br);if(Gt.test(o)&&t(a,\"Unterminated regular expression\"),e)e=!1;else{if(\"[\"===o)r=!0;else if(\"]\"===o&&r)r=!1;else if(\"/\"===o&&!r)break;e=\"\\\\\"===o}++br}var n=dr.slice(a,br);++br;var s=I();return s&&!/^[gmsiy]*$/.test(s)&&t(a,\"Invalid regexp flag\"),i(jr,new RegExp(n,s))}function w(e,r){for(var t=br,n=0,a=0,o=null==r?1/0:r;o>a;++a){var i,s=dr.charCodeAt(br);if(i=s>=97?s-97+10:s>=65?s-65+10:s>=48&&57>=s?s-48:1/0,i>=e)break;++br,n=n*e+i}return br===t||null!=r&&br-t!==r?null:n}function C(){br+=2;var e=w(16);return null==e&&t(yr+2,\"Expected hexadecimal number\"),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\"),i(Or,e)}function E(e){var r=br,n=!1,a=48===dr.charCodeAt(br);e||null!==w(10)||t(r,\"Invalid number\"),46===dr.charCodeAt(br)&&(++br,w(10),n=!0);var o=dr.charCodeAt(br);(69===o||101===o)&&(o=dr.charCodeAt(++br),(43===o||45===o)&&++br,null===w(10)&&t(r,\"Invalid number\"),n=!0),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\");var s,c=dr.slice(r,br);return n?s=parseFloat(c):a&&1!==c.length?/[89]/.test(c)||Tr?t(r,\"Invalid number\"):s=parseInt(c,8):s=parseInt(c,10),i(Or,s)}function A(e){br++;for(var r=\"\";;){br>=pr&&t(yr,\"Unterminated string constant\");var n=dr.charCodeAt(br);if(n===e)return++br,i(Dr,r);if(92===n){n=dr.charCodeAt(++br);var a=/^[0-7]+/.exec(dr.slice(br,br+3));for(a&&(a=a[0]);a&&parseInt(a,8)>255;)a=a.slice(0,a.length-1);if(\"0\"===a&&(a=null),++br,a)Tr&&t(br-2,\"Octal literal in strict mode\"),r+=String.fromCharCode(parseInt(a,8)),br+=a.length-1;else switch(n){case 110:r+=\"\\n\";break;case 114:r+=\"\\r\";break;case 120:r+=String.fromCharCode(S(2));break;case 117:r+=String.fromCharCode(S(4));break;case 85:r+=String.fromCharCode(S(8));break;case 116:r+=\"\t\";break;case 98:r+=\"\\b\";break;case 118:r+=\"\u000b\";break;case 102:r+=\"\\f\";break;case 48:r+=\"\\0\";break;case 13:10===dr.charCodeAt(br)&&++br;case 10:fr.locations&&(Sr=br,++Ar);break;default:r+=String.fromCharCode(n)}}else(13===n||10===n||8232===n||8233===n)&&t(yr,\"Unterminated string constant\"),r+=String.fromCharCode(n),++br}}function S(e){var r=w(16,e);return null===r&&t(yr,\"Bad character escape sequence\"),r}function I(){Bt=!1;for(var e,r=!0,n=br;;){var a=dr.charCodeAt(br);if(Yt(a))Bt&&(e+=dr.charAt(br)),++br;else{if(92!==a)break;Bt||(e=dr.slice(n,br)),Bt=!0,117!=dr.charCodeAt(++br)&&t(br,\"Expecting Unicode escape sequence \\\\uXXXX\"),++br;var o=S(4),i=String.fromCharCode(o);i||t(br-1,\"Invalid Unicode escape\"),(r?Qt(o):Yt(o))||t(br-4,\"Invalid Unicode escape\"),e+=i}r=!1}return Bt?e:dr.slice(n,br)}function L(){var e=I(),r=Fr;return Bt||(Wt(e)?r=lt[e]:(fr.forbidReserved&&(3===fr.ecmaVersion?Mt:zt)(e)||Tr&&Xt(e))&&t(yr,\"The keyword '\"+e+\"' is reserved\")),i(r,e)}function U(){Ir=yr,Lr=gr,Ur=kr,g()}function R(e){if(Tr=e,br=Lr,fr.locations)for(;Sr>br;)Sr=dr.lastIndexOf(\"\\n\",Sr-2)+1,--Ar;u(),g()}function V(){this.type=null,this.start=yr,this.end=null}function T(){this.start=xr,this.end=null,null!==hr&&(this.source=hr)}function q(){var e=new V;return fr.locations&&(e.loc=new T),fr.ranges&&(e.range=[yr,0]),e}function O(e){var r=new V;return r.start=e.start,fr.locations&&(r.loc=new T,r.loc.start=e.loc.start),fr.ranges&&(r.range=[e.range[0],0]),r}function j(e,r){return e.type=r,e.end=Lr,fr.locations&&(e.loc.end=Ur),fr.ranges&&(e.range[1]=Lr),e}function D(e){return fr.ecmaVersion>=5&&\"ExpressionStatement\"===e.type&&\"Literal\"===e.expression.type&&\"use strict\"===e.expression.value}function F(e){return wr===e?(U(),!0):void 0}function B(){return!fr.strictSemicolons&&(wr===Br||wr===ht||Gt.test(dr.slice(Lr,yr)))}function M(){F(yt)||B()||X()}function z(e){wr===e?U():X()}function X(){t(yr,\"Unexpected token\")}function N(e){\"Identifier\"!==e.type&&\"MemberExpression\"!==e.type&&t(e.start,\"Assigning to rvalue\"),Tr&&\"Identifier\"===e.type&&Nt(e.name)&&t(e.start,\"Assigning to \"+e.name+\" in strict mode\")}function W(e){Ir=Lr=br,fr.locations&&(Ur=new a),Rr=Tr=null,Vr=[],g();var r=e||q(),t=!0;for(e||(r.body=[]);wr!==Br;){var n=J();r.body.push(n),t&&D(n)&&R(!0),t=!1}return j(r,\"Program\")}function J(){(wr===wt||wr===Et&&\"/=\"==Cr)&&g(!0);var e=wr,r=q();switch(e){case Mr:case Nr:U();var n=e===Mr;F(yt)||B()?r.label=null:wr!==Fr?X():(r.label=lr(),M());for(var a=0;a<Vr.length;++a){var o=Vr[a];if(null==r.label||o.name===r.label.name){if(null!=o.kind&&(n||\"loop\"===o.kind))break;if(r.label&&n)break}}return a===Vr.length&&t(r.start,\"Unsyntactic \"+e.keyword),j(r,n?\"BreakStatement\":\"ContinueStatement\");case Wr:return U(),M(),j(r,\"DebuggerStatement\");case Pr:return U(),Vr.push(Zt),r.body=J(),Vr.pop(),z(tt),r.test=P(),M(),j(r,\"DoWhileStatement\");case _r:if(U(),Vr.push(Zt),z(mt),wr===yt)return $(r,null);if(wr===rt){var i=q();return U(),G(i,!0),j(i,\"VariableDeclaration\"),1===i.declarations.length&&F(ut)?_(r,i):$(r,i)}var i=K(!1,!0);return F(ut)?(N(i),_(r,i)):$(r,i);case Gr:return U(),cr(r,!0);case Kr:return U(),r.test=P(),r.consequent=J(),r.alternate=F(Hr)?J():null,j(r,\"IfStatement\");case Qr:return Rr||t(yr,\"'return' outside of function\"),U(),F(yt)||B()?r.argument=null:(r.argument=K(),M()),j(r,\"ReturnStatement\");case Yr:U(),r.discriminant=P(),r.cases=[],z(pt),Vr.push(en);for(var s,c;wr!=ht;)if(wr===zr||wr===Jr){var u=wr===zr;s&&j(s,\"SwitchCase\"),r.cases.push(s=q()),s.consequent=[],U(),u?s.test=K():(c&&t(Ir,\"Multiple default clauses\"),c=!0,s.test=null),z(gt)}else s||X(),s.consequent.push(J());return s&&j(s,\"SwitchCase\"),U(),Vr.pop(),j(r,\"SwitchStatement\");case Zr:return U(),Gt.test(dr.slice(Lr,yr))&&t(Lr,\"Illegal newline after throw\"),r.argument=K(),M(),j(r,\"ThrowStatement\");case et:if(U(),r.block=H(),r.handler=null,wr===Xr){var l=q();U(),z(mt),l.param=lr(),Tr&&Nt(l.param.name)&&t(l.param.start,\"Binding \"+l.param.name+\" in strict mode\"),z(vt),l.guard=null,l.body=H(),r.handler=j(l,\"CatchClause\")}return r.guardedHandlers=qr,r.finalizer=F($r)?H():null,r.handler||r.finalizer||t(r.start,\"Missing catch or finally clause\"),j(r,\"TryStatement\");case rt:return U(),G(r),M(),j(r,\"VariableDeclaration\");case tt:return U(),r.test=P(),Vr.push(Zt),r.body=J(),Vr.pop(),j(r,\"WhileStatement\");case nt:return Tr&&t(yr,\"'with' in strict mode\"),U(),r.object=P(),r.body=J(),j(r,\"WithStatement\");case pt:return H();case yt:return U(),j(r,\"EmptyStatement\");default:var f=Cr,d=K();if(e===Fr&&\"Identifier\"===d.type&&F(gt)){for(var a=0;a<Vr.length;++a)Vr[a].name===f&&t(d.start,\"Label '\"+f+\"' is already declared\");var p=wr.isLoop?\"loop\":wr===Yr?\"switch\":null;return Vr.push({name:f,kind:p}),r.body=J(),Vr.pop(),r.label=d,j(r,\"LabeledStatement\")}return r.expression=d,M(),j(r,\"ExpressionStatement\")}}function P(){z(mt);var e=K();return z(vt),e}function H(e){var r,t=q(),n=!0,a=!1;for(t.body=[],z(pt);!F(ht);){var o=J();t.body.push(o),n&&e&&D(o)&&(r=a,R(a=!0)),n=!1}return a&&!r&&R(!1),j(t,\"BlockStatement\")}function $(e,r){return e.init=r,z(yt),e.test=wr===yt?null:K(),z(yt),e.update=wr===vt?null:K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForStatement\")}function _(e,r){return e.left=r,e.right=K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForInStatement\")}function G(e,r){for(e.declarations=[],e.kind=\"var\";;){var n=q();if(n.id=lr(),Tr&&Nt(n.id.name)&&t(n.id.start,\"Binding \"+n.id.name+\" in strict mode\"),n.init=F(Ct)?K(!0,r):null,e.declarations.push(j(n,\"VariableDeclarator\")),!F(bt))break}return e}function K(e,r){var t=Q(r);if(!e&&wr===bt){var n=O(t);for(n.expressions=[t];F(bt);)n.expressions.push(Q(r));return j(n,\"SequenceExpression\")}return t}function Q(e){var r=Y(e);if(wr.isAssign){var t=O(r);return t.operator=Cr,t.left=r,U(),t.right=Q(e),N(r),j(t,\"AssignmentExpression\")}return r}function Y(e){var r=Z(e);if(F(kt)){var t=O(r);return t.test=r,t.consequent=K(!0),z(gt),t.alternate=K(!0,e),j(t,\"ConditionalExpression\")}return r}function Z(e){return er(rr(),-1,e)}function er(e,r,t){var n=wr.binop;if(null!=n&&(!t||wr!==ut)&&n>r){var a=O(e);a.left=e,a.operator=Cr,U(),a.right=er(rr(),n,t);var o=j(a,/&&|\\|\\|/.test(a.operator)?\"LogicalExpression\":\"BinaryExpression\");return er(o,r,t)}return e}function rr(){if(wr.prefix){var e=q(),r=wr.isUpdate;return e.operator=Cr,e.prefix=!0,Er=!0,U(),e.argument=rr(),r?N(e.argument):Tr&&\"delete\"===e.operator&&\"Identifier\"===e.argument.type&&t(e.start,\"Deleting local variable in strict mode\"),j(e,r?\"UpdateExpression\":\"UnaryExpression\")}for(var n=tr();wr.postfix&&!B();){var e=O(n);e.operator=Cr,e.prefix=!1,e.argument=n,N(n),U(),n=j(e,\"UpdateExpression\")}return n}function tr(){return nr(ar())}function nr(e,r){if(F(xt)){var t=O(e);return t.object=e,t.property=lr(!0),t.computed=!1,nr(j(t,\"MemberExpression\"),r)}if(F(ft)){var t=O(e);return t.object=e,t.property=K(),t.computed=!0,z(dt),nr(j(t,\"MemberExpression\"),r)}if(!r&&F(mt)){var t=O(e);return t.callee=e,t.arguments=ur(vt,!1),nr(j(t,\"CallExpression\"),r)}return e}function ar(){switch(wr){case ot:var e=q();return U(),j(e,\"ThisExpression\");case Fr:return lr();case Or:case Dr:case jr:var e=q();return e.value=Cr,e.raw=dr.slice(yr,gr),U(),j(e,\"Literal\");case it:case st:case ct:var e=q();return e.value=wr.atomValue,e.raw=wr.keyword,U(),j(e,\"Literal\");case mt:var r=xr,t=yr;U();var n=K();return n.start=t,n.end=gr,fr.locations&&(n.loc.start=r,n.loc.end=kr),fr.ranges&&(n.range=[t,gr]),z(vt),n;case ft:var e=q();return U(),e.elements=ur(dt,!0,!0),j(e,\"ArrayExpression\");case pt:return ir();case Gr:var e=q();return U(),cr(e,!1);case at:return or();default:X()}}function or(){var e=q();return U(),e.callee=nr(ar(),!0),e.arguments=F(mt)?ur(vt,!1):qr,j(e,\"NewExpression\")}function ir(){var e=q(),r=!0,n=!1;for(e.properties=[],U();!F(ht);){if(r)r=!1;else if(z(bt),fr.allowTrailingCommas&&F(ht))break;var a,o={key:sr()},i=!1;if(F(gt)?(o.value=K(!0),a=o.kind=\"init\"):fr.ecmaVersion>=5&&\"Identifier\"===o.key.type&&(\"get\"===o.key.name||\"set\"===o.key.name)?(i=n=!0,a=o.kind=o.key.name,o.key=sr(),wr!==mt&&X(),o.value=cr(q(),!1)):X(),\"Identifier\"===o.key.type&&(Tr||n))for(var s=0;s<e.properties.length;++s){var c=e.properties[s];if(c.key.name===o.key.name){var u=a==c.kind||i&&\"init\"===c.kind||\"init\"===a&&(\"get\"===c.kind||\"set\"===c.kind);u&&!Tr&&\"init\"===a&&\"init\"===c.kind&&(u=!1),u&&t(o.key.start,\"Redefinition of property\")}}e.properties.push(o)}return j(e,\"ObjectExpression\")}function sr(){return wr===Or||wr===Dr?ar():lr(!0)}function cr(e,r){wr===Fr?e.id=lr():r?X():e.id=null,e.params=[];var n=!0;for(z(mt);!F(vt);)n?n=!1:z(bt),e.params.push(lr());var a=Rr,o=Vr;if(Rr=!0,Vr=[],e.body=H(!0),Rr=a,Vr=o,Tr||e.body.body.length&&D(e.body.body[0]))for(var i=e.id?-1:0;i<e.params.length;++i){var s=0>i?e.id:e.params[i];if((Xt(s.name)||Nt(s.name))&&t(s.start,\"Defining '\"+s.name+\"' in strict mode\"),i>=0)for(var c=0;i>c;++c)s.name===e.params[c].name&&t(s.start,\"Argument name clash in strict mode\")}return j(e,r?\"FunctionDeclaration\":\"FunctionExpression\")}function ur(e,r,t){for(var n=[],a=!0;!F(e);){if(a)a=!1;else if(z(bt),r&&fr.allowTrailingCommas&&F(e))break;t&&wr===bt?n.push(null):n.push(K(!0))}return n}function lr(e){var r=q();return r.name=wr===Fr?Cr:e&&!fr.forbidReserved&&wr.keyword||X(),Er=!1,U(),j(r,\"Identifier\")}e.version=\"0.4.0\";var fr,dr,pr,hr;e.parse=function(e,t){return dr=String(e),pr=dr.length,r(t),o(),W(fr.program)};var mr=e.defaultOptions={ecmaVersion:5,strictSemicolons:!1,allowTrailingCommas:!0,forbidReserved:!1,locations:!1,onComment:null,ranges:!1,program:null,sourceFile:null},vr=e.getLineInfo=function(e,r){for(var t=1,n=0;;){Kt.lastIndex=n;var a=Kt.exec(e);if(!(a&&a.index<r))break;++t,n=a.index+a[0].length}return{line:t,column:r-n}};e.tokenize=function(e,t){function n(e){return g(e),a.start=yr,a.end=gr,a.startLoc=xr,a.endLoc=kr,a.type=wr,a.value=Cr,a}dr=String(e),pr=dr.length,r(t),o();var a={};return n.jumpTo=function(e,r){if(br=e,fr.locations){Ar=1,Sr=Kt.lastIndex=0;for(var t;(t=Kt.exec(dr))&&t.index<e;)++Ar,Sr=t.index+t[0].length}Er=r,u()},n};var br,yr,gr,xr,kr,wr,Cr,Er,Ar,Sr,Ir,Lr,Ur,Rr,Vr,Tr,qr=[],Or={type:\"num\"},jr={type:\"regexp\"},Dr={type:\"string\"},Fr={type:\"name\"},Br={type:\"eof\"},Mr={keyword:\"break\"},zr={keyword:\"case\",beforeExpr:!0},Xr={keyword:\"catch\"},Nr={keyword:\"continue\"},Wr={keyword:\"debugger\"},Jr={keyword:\"default\"},Pr={keyword:\"do\",isLoop:!0},Hr={keyword:\"else\",beforeExpr:!0},$r={keyword:\"finally\"},_r={keyword:\"for\",isLoop:!0},Gr={keyword:\"function\"},Kr={keyword:\"if\"},Qr={keyword:\"return\",beforeExpr:!0},Yr={keyword:\"switch\"},Zr={keyword:\"throw\",beforeExpr:!0},et={keyword:\"try\"},rt={keyword:\"var\"},tt={keyword:\"while\",isLoop:!0},nt={keyword:\"with\"},at={keyword:\"new\",beforeExpr:!0},ot={keyword:\"this\"},it={keyword:\"null\",atomValue:null},st={keyword:\"true\",atomValue:!0},ct={keyword:\"false\",atomValue:!1},ut={keyword:\"in\",binop:7,beforeExpr:!0},lt={\"break\":Mr,\"case\":zr,\"catch\":Xr,\"continue\":Nr,\"debugger\":Wr,\"default\":Jr,\"do\":Pr,\"else\":Hr,\"finally\":$r,\"for\":_r,\"function\":Gr,\"if\":Kr,\"return\":Qr,\"switch\":Yr,\"throw\":Zr,\"try\":et,\"var\":rt,\"while\":tt,\"with\":nt,\"null\":it,\"true\":st,\"false\":ct,\"new\":at,\"in\":ut,\"instanceof\":{keyword:\"instanceof\",binop:7,beforeExpr:!0},\"this\":ot,\"typeof\":{keyword:\"typeof\",prefix:!0,beforeExpr:!0},\"void\":{keyword:\"void\",prefix:!0,beforeExpr:!0},\"delete\":{keyword:\"delete\",prefix:!0,beforeExpr:!0}},ft={type:\"[\",beforeExpr:!0},dt={type:\"]\"},pt={type:\"{\",beforeExpr:!0},ht={type:\"}\"},mt={type:\"(\",beforeExpr:!0},vt={type:\")\"},bt={type:\",\",beforeExpr:!0},yt={type:\";\",beforeExpr:!0},gt={type:\":\",beforeExpr:!0},xt={type:\".\"},kt={type:\"?\",beforeExpr:!0},wt={binop:10,beforeExpr:!0},Ct={isAssign:!0,beforeExpr:!0},Et={isAssign:!0,beforeExpr:!0},At={binop:9,prefix:!0,beforeExpr:!0},St={postfix:!0,prefix:!0,isUpdate:!0},It={prefix:!0,beforeExpr:!0},Lt={binop:1,beforeExpr:!0},Ut={binop:2,beforeExpr:!0},Rt={binop:3,beforeExpr:!0},Vt={binop:4,beforeExpr:!0},Tt={binop:5,beforeExpr:!0},qt={binop:6,beforeExpr:!0},Ot={binop:7,beforeExpr:!0},jt={binop:8,beforeExpr:!0},Dt={binop:10,beforeExpr:!0};e.tokTypes={bracketL:ft,bracketR:dt,braceL:pt,braceR:ht,parenL:mt,parenR:vt,comma:bt,semi:yt,colon:gt,dot:xt,question:kt,slash:wt,eq:Ct,name:Fr,eof:Br,num:Or,regexp:jr,string:Dr};for(var Ft in lt)e.tokTypes[\"_\"+Ft]=lt[Ft];var Bt,Mt=n(\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\"),zt=n(\"class enum extends super const export import\"),Xt=n(\"implements interface let package private protected public static yield\"),Nt=n(\"eval arguments\"),Wt=n(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\"),Jt=/[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/,Pt=\"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\",Ht=\"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\",$t=new RegExp(\"[\"+Pt+\"]\"),_t=new RegExp(\"[\"+Pt+Ht+\"]\"),Gt=/[\\n\\r\\u2028\\u2029]/,Kt=/\\r\\n|[\\n\\r\\u2028\\u2029]/g,Qt=e.isIdentifierStart=function(e){return 65>e?36===e:91>e?!0:97>e?95===e:123>e?!0:e>=170&&$t.test(String.fromCharCode(e))},Yt=e.isIdentifierChar=function(e){return 48>e?36===e:58>e?!0:65>e?!1:91>e?!0:97>e?95===e:123>e?!0:e>=170&&_t.test(String.fromCharCode(e))},Zt={kind:\"loop\"},en={kind:\"switch\"}});\n\n\tvar binaryOperators = {\n\t\t'+': '__add',\n\t\t'-': '__subtract',\n\t\t'*': '__multiply',\n\t\t'/': '__divide',\n\t\t'%': '__modulo',\n\t\t'==': 'equals',\n\t\t'!=': 'equals'\n\t};\n\n\tvar unaryOperators = {\n\t\t'-': '__negate',\n\t\t'+': null\n\t};\n\n\tvar fields = Base.each(\n\t\t['add', 'subtract', 'multiply', 'divide', 'modulo', 'negate'],\n\t\tfunction(name) {\n\t\t\tthis['__' + name] = '#' + name;\n\t\t},\n\t\t{}\n\t);\n\tPoint.inject(fields);\n\tSize.inject(fields);\n\tColor.inject(fields);\n\n\tfunction __$__(left, operator, right) {\n\t\tvar handler = binaryOperators[operator];\n\t\tif (left && left[handler]) {\n\t\t\tvar res = left[handler](right);\n\t\t\treturn operator === '!=' ? !res : res;\n\t\t}\n\t\tswitch (operator) {\n\t\tcase '+': return left + right;\n\t\tcase '-': return left - right;\n\t\tcase '*': return left * right;\n\t\tcase '/': return left / right;\n\t\tcase '%': return left % right;\n\t\tcase '==': return left == right;\n\t\tcase '!=': return left != right;\n\t\t}\n\t}\n\n\tfunction $__(operator, value) {\n\t\tvar handler = unaryOperators[operator];\n\t\tif (handler && value && value[handler])\n\t\t\treturn value[handler]();\n\t\tswitch (operator) {\n\t\tcase '+': return +value;\n\t\tcase '-': return -value;\n\t\t}\n\t}\n\n\tfunction parse(code, options) {\n\t\treturn scope.acorn.parse(code, options);\n\t}\n\n\tfunction compile(code, url, options) {\n\t\tif (!code)\n\t\t\treturn '';\n\t\toptions = options || {};\n\t\turl = url || '';\n\n\t\tvar insertions = [];\n\n\t\tfunction getOffset(offset) {\n\t\t\tfor (var i = 0, l = insertions.length; i < l; i++) {\n\t\t\t\tvar insertion = insertions[i];\n\t\t\t\tif (insertion[0] >= offset)\n\t\t\t\t\tbreak;\n\t\t\t\toffset += insertion[1];\n\t\t\t}\n\t\t\treturn offset;\n\t\t}\n\n\t\tfunction getCode(node) {\n\t\t\treturn code.substring(getOffset(node.range[0]),\n\t\t\t\t\tgetOffset(node.range[1]));\n\t\t}\n\n\t\tfunction getBetween(left, right) {\n\t\t\treturn code.substring(getOffset(left.range[1]),\n\t\t\t\t\tgetOffset(right.range[0]));\n\t\t}\n\n\t\tfunction replaceCode(node, str) {\n\t\t\tvar start = getOffset(node.range[0]),\n\t\t\t\tend = getOffset(node.range[1]),\n\t\t\t\tinsert = 0;\n\t\t\tfor (var i = insertions.length - 1; i >= 0; i--) {\n\t\t\t\tif (start > insertions[i][0]) {\n\t\t\t\t\tinsert = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinsertions.splice(insert, 0, [start, str.length - end + start]);\n\t\t\tcode = code.substring(0, start) + str + code.substring(end);\n\t\t}\n\n\t\tfunction walkAST(node, parent) {\n\t\t\tif (!node)\n\t\t\t\treturn;\n\t\t\tfor (var key in node) {\n\t\t\t\tif (key === 'range' || key === 'loc')\n\t\t\t\t\tcontinue;\n\t\t\t\tvar value = node[key];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (var i = 0, l = value.length; i < l; i++)\n\t\t\t\t\t\twalkAST(value[i], node);\n\t\t\t\t} else if (value && typeof value === 'object') {\n\t\t\t\t\twalkAST(value, node);\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch (node.type) {\n\t\t\tcase 'UnaryExpression':\n\t\t\t\tif (node.operator in unaryOperators\n\t\t\t\t\t\t&& node.argument.type !== 'Literal') {\n\t\t\t\t\tvar arg = getCode(node.argument);\n\t\t\t\t\treplaceCode(node, '$__(\"' + node.operator + '\", '\n\t\t\t\t\t\t\t+ arg + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'BinaryExpression':\n\t\t\t\tif (node.operator in binaryOperators\n\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\tright = getCode(node.right),\n\t\t\t\t\t\tbetween = getBetween(node.left, node.right),\n\t\t\t\t\t\toperator = node.operator;\n\t\t\t\t\treplaceCode(node, '__$__(' + left + ','\n\t\t\t\t\t\t\t+ between.replace(new RegExp('\\\\' + operator),\n\t\t\t\t\t\t\t\t'\"' + operator + '\"')\n\t\t\t\t\t\t\t+ ', ' + right + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'UpdateExpression':\n\t\t\tcase 'AssignmentExpression':\n\t\t\t\tvar parentType = parent && parent.type;\n\t\t\t\tif (!(\n\t\t\t\t\t\tparentType === 'ForStatement'\n\t\t\t\t\t\t|| parentType === 'BinaryExpression'\n\t\t\t\t\t\t\t&& /^[=!<>]/.test(parent.operator)\n\t\t\t\t\t\t|| parentType === 'MemberExpression' && parent.computed\n\t\t\t\t)) {\n\t\t\t\t\tif (node.type === 'UpdateExpression') {\n\t\t\t\t\t\tvar arg = getCode(node.argument),\n\t\t\t\t\t\t\texp = '__$__(' + arg + ', \"' + node.operator[0]\n\t\t\t\t\t\t\t\t\t+ '\", 1)',\n\t\t\t\t\t\t\tstr = arg + ' = ' + exp;\n\t\t\t\t\t\tif (!node.prefix\n\t\t\t\t\t\t\t\t&& (parentType === 'AssignmentExpression'\n\t\t\t\t\t\t\t\t\t|| parentType === 'VariableDeclarator')) {\n\t\t\t\t\t\t\tif (getCode(parent.left || parent.id) === arg)\n\t\t\t\t\t\t\t\tstr = exp;\n\t\t\t\t\t\t\tstr = arg + '; ' + str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplaceCode(node, str);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (/^.=$/.test(node.operator)\n\t\t\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\t\t\tright = getCode(node.right);\n\t\t\t\t\t\t\treplaceCode(node, left + ' = __$__(' + left + ', \"'\n\t\t\t\t\t\t\t\t\t+ node.operator[0] + '\", ' + right + ')');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar sourceMap = null,\n\t\t\tbrowser = paper.browser,\n\t\t\tversion = browser.versionNumber,\n\t\t\tlineBreaks = /\\r\\n|\\n|\\r/mg;\n\t\tif (browser.chrome && version >= 30\n\t\t\t\t|| browser.webkit && version >= 537.76\n\t\t\t\t|| browser.firefox && version >= 23) {\n\t\t\tvar offset = 0;\n\t\t\tif (window.location.href.indexOf(url) === 0) {\n\t\t\t\tvar html = document.getElementsByTagName('html')[0].innerHTML;\n\t\t\t\toffset = html.substr(0, html.indexOf(code) + 1).match(\n\t\t\t\t\t\tlineBreaks).length + 1;\n\t\t\t}\n\t\t\tvar mappings = ['AAAA'];\n\t\t\tmappings.length = (code.match(lineBreaks) || []).length + 1 + offset;\n\t\t\tsourceMap = {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: url,\n\t\t\t\tnames:[],\n\t\t\t\tmappings: mappings.join(';AACA'),\n\t\t\t\tsourceRoot: '',\n\t\t\t\tsources: [url]\n\t\t\t};\n\t\t\tvar source = options.source || !url && code;\n\t\t\tif (source)\n\t\t\t\tsourceMap.sourcesContent = [source];\n\t\t}\n\t\twalkAST(parse(code, { ranges: true }));\n\t\tif (sourceMap) {\n\t\t\tcode = new Array(offset + 1).join('\\n') + code\n\t\t\t\t\t+ \"\\n//# sourceMappingURL=data:application/json;base64,\"\n\t\t\t\t\t+ (btoa(unescape(encodeURIComponent(\n\t\t\t\t\t\tJSON.stringify(sourceMap)))))\n\t\t\t\t\t+ \"\\n//# sourceURL=\" + (url || 'paperscript');\n\t\t}\n\t\treturn code;\n\t}\n\n\tfunction execute(code, scope, url, options) {\n\t\tpaper = scope;\n\t\tvar view = scope.getView(),\n\t\t\ttool = /\\s+on(?:Key|Mouse)(?:Up|Down|Move|Drag)\\b/.test(code)\n\t\t\t\t\t? new Tool()\n\t\t\t\t\t: null,\n\t\t\ttoolHandlers = tool ? tool._events : [],\n\t\t\thandlers = ['onFrame', 'onResize'].concat(toolHandlers),\n\t\t\tparams = [],\n\t\t\targs = [],\n\t\t\tfunc;\n\t\tcode = compile(code, url, options);\n\t\tfunction expose(scope, hidden) {\n\t\t\tfor (var key in scope) {\n\t\t\t\tif ((hidden || !/^_/.test(key)) && new RegExp('([\\\\b\\\\s\\\\W]|^)'\n\t\t\t\t\t\t+ key.replace(/\\$/g, '\\\\$') + '\\\\b').test(code)) {\n\t\t\t\t\tparams.push(key);\n\t\t\t\t\targs.push(scope[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\texpose({ __$__: __$__, $__: $__, paper: scope, view: view, tool: tool },\n\t\t\t\ttrue);\n\t\texpose(scope);\n\t\thandlers = Base.each(handlers, function(key) {\n\t\t\tif (new RegExp('\\\\s+' + key + '\\\\b').test(code)) {\n\t\t\t\tparams.push(key);\n\t\t\t\tthis.push(key + ': ' + key);\n\t\t\t}\n\t\t}, []).join(', ');\n\t\tif (handlers)\n\t\t\tcode += '\\nreturn { ' + handlers + ' };';\n\t\tvar browser = paper.browser;\n\t\tif (browser.chrome || browser.firefox) {\n\t\t\tvar script = document.createElement('script'),\n\t\t\t\thead = document.head || document.getElementsByTagName('head')[0];\n\t\t\tif (browser.firefox)\n\t\t\t\tcode = '\\n' + code;\n\t\t\tscript.appendChild(document.createTextNode(\n\t\t\t\t'paper._execute = function(' + params + ') {' + code + '\\n}'\n\t\t\t));\n\t\t\thead.appendChild(script);\n\t\t\tfunc = paper._execute;\n\t\t\tdelete paper._execute;\n\t\t\thead.removeChild(script);\n\t\t} else {\n\t\t\tfunc = Function(params, code);\n\t\t}\n\t\tvar res = func.apply(scope, args) || {};\n\t\tBase.each(toolHandlers, function(key) {\n\t\t\tvar value = res[key];\n\t\t\tif (value)\n\t\t\t\ttool[key] = value;\n\t\t});\n\t\tif (view) {\n\t\t\tif (res.onResize)\n\t\t\t\tview.setOnResize(res.onResize);\n\t\t\tview.emit('resize', {\n\t\t\t\tsize: view.size,\n\t\t\t\tdelta: new Point()\n\t\t\t});\n\t\t\tif (res.onFrame)\n\t\t\t\tview.setOnFrame(res.onFrame);\n\t\t\tview.update();\n\t\t}\n\t}\n\n\tfunction loadScript(script) {\n\t\tif (/^text\\/(?:x-|)paperscript$/.test(script.type)\n\t\t\t\t&& PaperScope.getAttribute(script, 'ignore') !== 'true') {\n\t\t\tvar canvasId = PaperScope.getAttribute(script, 'canvas'),\n\t\t\t\tcanvas = document.getElementById(canvasId),\n\t\t\t\tsrc = script.src || script.getAttribute('data-src'),\n\t\t\t\tasync = PaperScope.hasAttribute(script, 'async'),\n\t\t\t\tscopeAttribute = 'data-paper-scope';\n\t\t\tif (!canvas)\n\t\t\t\tthrow new Error('Unable to find canvas with id \"'\n\t\t\t\t\t\t+ canvasId + '\"');\n\t\t\tvar scope = PaperScope.get(canvas.getAttribute(scopeAttribute))\n\t\t\t\t\t\t|| new PaperScope().setup(canvas);\n\t\t\tcanvas.setAttribute(scopeAttribute, scope._id);\n\t\t\tif (src) {\n\t\t\t\tHttp.request('get', src, function(code) {\n\t\t\t\t\texecute(code, scope, src);\n\t\t\t\t}, async);\n\t\t\t} else {\n\t\t\t\texecute(script.innerHTML, scope, script.baseURI);\n\t\t\t}\n\t\t\tscript.setAttribute('data-paper-ignore', 'true');\n\t\t\treturn scope;\n\t\t}\n\t}\n\n\tfunction loadAll() {\n\t\tBase.each(document.getElementsByTagName('script'), loadScript);\n\t}\n\n\tfunction load(script) {\n\t\treturn script ? loadScript(script) : loadAll();\n\t}\n\n\tif (document.readyState === 'complete') {\n\t\tsetTimeout(loadAll);\n\t} else {\n\t\tDomEvent.add(window, { load: loadAll });\n\t}\n\n\treturn {\n\t\tcompile: compile,\n\t\texecute: execute,\n\t\tload: load,\n\t\tparse: parse\n\t};\n\n}).call(this);\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n","/* ========================================================================\n * Bootstrap: transition.js v3.3.5\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: alert.js v3.3.5\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.5'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: button.js v3.3.5\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.5'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target)\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"]') || $(e.target).is('input[type=\"checkbox\"]'))) e.preventDefault()\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: carousel.js v3.3.5\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.5'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: collapse.js v3.3.5\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.5'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: dropdown.js v3.3.5\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.5'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger('shown.bs.dropdown', relatedTarget)\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: modal.js v3.3.5\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.5'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element.addClass('in')\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $(document.createElement('div'))\n        .addClass('modal-backdrop ' + animate)\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tooltip.js v3.3.5\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.5'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: popover.js v3.3.5\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.5'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.5\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.5'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tab.js v3.3.5\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element)\n    // jscs:enable requireDollarBeforejQueryAssignment\n  }\n\n  Tab.VERSION = '3.3.5'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: affix.js v3.3.5\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.5'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * DOM-based Routing\n * Based on http://goo.gl/EUTi53 by Paul Irish\n *\n * Only fires on body classes that match. If a body class contains a dash,\n * replace the dash with an underscore when adding it to the object below.\n *\n * .noConflict()\n * The routing is enclosed within an anonymous function so that you can\n * always reference jQuery with $, even when in .noConflict() mode.\n * ======================================================================== */\n\n(function($) {\n\n  // Use this variable to set up the common and page specific functions. If you\n  // rename this variable, you will also need to rename the namespace below.\n  var Sage = {\n    // All pages\n    'common': {\n      init: function() {\n        // JavaScript to be fired on all pages\n      },\n      finalize: function() {\n        // JavaScript to be fired on all pages, after page specific JS is fired\n      }\n    },\n    // Home page\n    'home': {\n      init: function() {\n        // JavaScript to be fired on the home page\n      },\n      finalize: function() {\n        // JavaScript to be fired on the home page, after the init JS\n      }\n    },\n    // About us page, note the change from about-us to about_us.\n    'about_us': {\n      init: function() {\n        // JavaScript to be fired on the about us page\n      }\n    }\n  };\n\n  // The routing fires all common scripts, followed by the page specific scripts.\n  // Add additional events for more control over timing e.g. a finalize event\n  var UTIL = {\n    fire: function(func, funcname, args) {\n      var fire;\n      var namespace = Sage;\n      funcname = (funcname === undefined) ? 'init' : funcname;\n      fire = func !== '';\n      fire = fire && namespace[func];\n      fire = fire && typeof namespace[func][funcname] === 'function';\n\n      if (fire) {\n        namespace[func][funcname](args);\n      }\n    },\n    loadEvents: function() {\n      // Fire common init JS\n      UTIL.fire('common');\n\n      // Fire page-specific init JS, and then finalize JS\n      $.each(document.body.className.replace(/-/g, '_').split(/\\s+/), function(i, classnm) {\n        UTIL.fire(classnm);\n        UTIL.fire(classnm, 'finalize');\n      });\n\n      // Fire common finalize JS\n      UTIL.fire('common', 'finalize');\n    }\n  };\n\n  // Load Events\n  $(document).ready(UTIL.loadEvents);\n\n})(jQuery); // Fully reference jQuery after this point.\n"],"sourceRoot":"assets/scripts/"}