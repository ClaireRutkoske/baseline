{"version":3,"sources":["../bower_components/d3/d3.js","../bower_components/paper/dist/paper-full.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/transition.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/alert.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/button.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/carousel.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/collapse.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/dropdown.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/modal.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/tooltip.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/popover.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/scrollspy.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/tab.js","../bower_components/bootstrap-sass/assets/javascripts/bootstrap/affix.js","../assets/scripts/main.js"],"names":["d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","length","mid","right","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","this","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","i","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","call","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","toLowerCase","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","define","amd","module","exports","paper","undefined","Base","inject","dest","src","beans","preserve","val","describe","bean","isFunc","res","prev","beansNames","isPlainObject","writable","configurable","hidden","part","obj","iter","getLength","forIn","props","exclude","proto","getOwnPropertyDescriptor","__lookupGetter__","__lookupSetter__","_define","desc","__defineGetter__","__defineSetter__","statics","extend","initialize","clone","constructor","pick","_id","_class","_name","Formatter","instance","getClassName","exportJSON","options","toJSON","serialize","_set","dontCheck","_filtering","obj1","obj2","read","peek","__index","readIndex","_readIndex","readNull","__read","remain","readAll","readNamed","getNamed","hasObject","filtered","_filtered","arg","_hasObject","hasNamed","isPlainValue","asString","compact","dictionary","formatter","definitions","references","item","ref","_serialize","_compact","deserialize","_data","_isDictionary","isRoot","isDictionary","importJSON","isTarget","Item","Layer","items","amount","_index","removed","capitalize","str","camelize","all","chr","hyphenate","Emitter","func","types","_eventTypes","handlers","_callbacks","install","uninstall","once","emit","responds","attach","detach","fire","_installEvents","events","_events","isString","PaperScope","settings","applyMatrix","handleSize","hitTolerance","projects","tools","palettes","_scopes","support","ctx","CanvasProvider","getContext","nativeDash","nativeBlendModes","BlendMode","nativeModes","release","browser","agent","platform","v1","v2","rv","chrome","versionNumber","webkit","atom","getView","getPaper","execute","PaperScript","View","updateFocus","scope","setup","element","Project","activate","handleAttribute","el","hasAttribute","PaperScopeItem","_scope","_list","_reference","isActive","multiplier","pair","val1","val2","separator","height","rectangle","Numerical","abscissas","weights","TOLERANCE","EPSILON","MACHINE_EPSILON","KAPPA","isZero","integrate","Ax","findRoot","df","tolerance","solveQuadratic","roots","gmC","mult","LOG10E","solveCubic","qd","tmp","ec","UID","_pools","pool","arg0","arg1","hasY","setAngle","setLength","_angle","getAngle","getAngleInRadians","setAngleInRadians","getAngleInDegrees","setAngleInDegrees","div","dot","getQuadrant","getDirectedAngle","getDistance","squared","normalize","subtract","_transformPoint","multiply","divide","modulo","negate","isInside","Rectangle","isClose","isCollinear","isColinear","isOrthogonal","op","LinkedPoint","owner","_x","_y","_owner","_setter","_dontNotify","getX","setX","getY","setY","Size","hasHeight","size1","size2","LinkedSize","_width","_height","getWidth","setWidth","getHeight","setHeight","arg2","arg3","rt","getPoint","_dontLink","setPoint","getSize","setSize","_fixX","_fixY","_fixW","_fixH","getLeft","setLeft","getTop","setTop","getRight","setRight","getBottom","setBottom","getCenterX","setCenterX","getCenterY","setCenterY","getCenter","setCenter","getArea","isEmpty","_containsRectangle","_containsPoint","intersects","unite","include","hor","ver","parts","xFirst","LinkedRectangle","internal","isSelected","_boundsSelected","setSelected","selected","_selectedSegmentState","Matrix","ok","_a","_c","_b","_d","_tx","_ty","ty","_changed","getValues","_applyMatrix","mx","recursively","_setApplyMatrix","isIdentity","shear","toRadians","concatenate","a2","b2","tx2","ty2","preConcatenate","tx1","ty1","chain","orNullIfIdentity","isInvertible","_getDeterminant","isSingular","dst","_transformCoordinates","_transformCorners","coords","_transformBounds","inverseTransform","_inverseTransform","det","decompose","scaleX","scaleY","scaling","shearing","getTranslation","getScaling","getRotation","inverted","shiftless","applyToContext","prop","Line","arg4","asVector","_px","_py","_vx","_vy","getVector","isInfinite","getSide","getSignedDistance","apx","apy","avx","avy","bpx","bpy","bvx","bvy","vx","vy","v2x","v2y","ccw","layers","_activeLayer","symbols","_currentStyle","Style","_view","getCanvas","_selectedItems","_selectedItemCount","_updateVersion","getCurrentStyle","setCurrentStyle","getIndex","getOptions","getActiveLayer","getSelectedItems","isInserted","_preserve","_remove","_setProject","_changes","NO_INSERT","addChild","_updateSelection","selectedItems","_selected","setFullySelected","deselectAll","hitTest","HitResult","_hitTest","getItems","_getItems","getItem","layer","draw","pixelRatio","save","param","viewMatrix","matrices","updateMatrix","restore","strokeWidth","_drawSelection","Symbol","dontCenter","setDefinition","_definition","flags","_clearBoundsCache","_needsUpdate","getDefinition","_dontCenter","_parentSymbol","setPosition","place","PlacedSymbol","definition","_serializeFields","_canApplyMatrix","_selectChildren","pivot","locked","blendMode","opacity","guide","clipMask","_initialize","hasProps","_matrix","_style","_project","setParent","mouseFlags","mousedrag","doubleclick","mouseEvent","counters","_eventCounters","onFrame","_animateItem","onLoad","animate","fontSize","Group","_defaults","cacheParent","_parent","_bounds","_position","_decomposed","_globalMatrix","_currentPath","_changesById","getId","getName","setName","unique","_removeNamed","_children","namedChildren","_namedChildren","orig","getStyle","setStyle","_locked","_visible","_blendMode","_opacity","_guide","noChildren","isFullySelected","isClipMask","_clipMask","setClipMask","setFillColor","setStrokeColor","getData","setData","getPosition","_pivot","getBounds","getPivot","setPivot","getter","internalGetter","boundsGetter","_boundsGetter","_getCachedBounds","_getBounds","cacheItem","_updateBoundsCache","setBounds","cache","cached","_internal","_boundsCache","ids","_decompose","decomposed","setRotation","setScaling","getMatrix","setMatrix","getGlobalMatrix","_dontClone","updateVersion","getApplyMatrix","setApplyMatrix","getTransformContent","setTransformContent","getProject","installEvents","getLayer","getParent","getChildren","setChildren","removeChildren","addChildren","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","_equals","_clone","includeMatrix","insertAbove","copyTo","itemOrProject","rasterize","resolution","getStrokeBounds","getResolution","topLeft","getTopLeft","bottomRight","getBottomRight","canvas","raster","Raster","setCanvas","_contains","getInternalBounds","_asPathItem","Path","getIntersections","checkBounds","pt","tolerancePadding","guides","parentTotalMatrix","_totalMatrix","totalMatrix","_tolerancePadding","_getPenPadding","getInternalRoughBounds","checkSelf","opts","_getChildHitTestOptions","_hitTestSelf","hasFill","matchObject","firstOnly","overlapping","childMatrix","insertChildren","_proto","notifySelf","_insertSibling","insertBelow","sendToBack","bringToFront","appendTop","appendBottom","moveAbove","moveBelow","namedArray","notifyParent","replaceWith","reverseChildren","isEditable","hasStroke","hasShadow","_getOrder","getList","list1","list2","hasChildren","isAbove","isBelow","isParent","isChild","isDescendant","isAncestor","isGroupedWith","_applyRecursively","_transformContent","fillColor","getFillColor","strokeColor","getStrokeColor","decomp","applyRecursively","globalToLocal","localToGlobal","parentToLocal","localToParent","fitBounds","itemRatio","rectRatio","newBounds","_setStyles","shadowColor","getShadowColor","fillStyle","toCanvasStyle","getStrokeWidth","strokeStyle","lineWidth","strokeJoin","getStrokeJoin","strokeCap","getStrokeCap","miterLimit","getMiterLimit","lineJoin","lineCap","dashArray","getDashArray","dashOffset","getDashOffset","setLineDash","lineDashOffset","mozDash","mozDashOffset","shadowBlur","getShadowBlur","getShadowOffset","shadowOffsetX","shadowOffsetY","parentStrokeMatrix","getViewMatrix","globalMatrix","mainCtx","itemOffset","prevOffset","normalBlend","nativeBlend","direct","dontStart","_canComposite","strokeMatrix","getStrokeScaling","clipItem","globalAlpha","globalCompositeOperation","setTransform","_draw","dontFinish","process","_isUpdated","CompoundPath","updated","_drawSelected","getSelectedColor","half","beginPath","stroke","fillRect","hash","removeOn","sets","_removeSets","_clipItem","_getClipItem","isClipped","setClipped","clipped","currentPath","Shape","_type","_size","_radius","setType","setRadius","getType","getShape","setShape","getRadius","rad","toPath","dontPaint","untransformed","isCircle","kappa","bezierCurveTo","getWindingRule","getCornerCenter","halfSize","dir","getEllipseRadius","hit","outer","inner","createShape","Circle","Ellipse","ellipse","_readEllipse","crossOrigin","setSource","setImage","_loaded","getSource","image","_image","_canvas","copyCanvas","drawImage","_crossOrigin","getElement","getPpi","getImage","complete","naturalWidth","naturalHeight","_context","modify","setContext","toDataURL","loaded","getElementById","Image","DomEvent","getCrossOrigin","setCrossOrigin","getSubCanvas","getSubRaster","getAverageColor","PathItem","sampleSize","_sampleContext","clearRect","pixels","getImageData","channels","total","Color","getPixel","setPixel","components","_convert","_alpha","imageData","createImageData","putImageData","setImageData","setSymbol","_symbol","getSymbol","handles","ends","Segment","arg5","handleIn","handleOut","SegmentPoint","isStraight","_point","_handleIn","_handleOut","_path","curves","_curves","_closed","getHandleIn","setHandleIn","getHandleOut","setHandleOut","hasHandles","isLinear","getNext","getPrevious","isOrthogonalArc","isArc","_selectionState","state","oldState","flag","getPath","getCurve","_segments","getCurves","getLocation","CurveLocation","_segment1","removeSegment","seg1","seg2","seg3","seg4","handle1","handle2","pt1","pt2","Curve","arg6","arg7","_segment2","segment1","segment2","_length","getPoint1","setPoint1","getPoint2","setPoint2","getHandle1","setHandle1","getHandle2","setHandle2","getSegment1","getSegment2","getPoints","getPart","getPartLength","Ssegment","filterIntersections","_getParameter","isParameter","parameter","getParameterAt","ignoreLinear","subdivide","h2","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","p3x","p3y","p4x","p4y","p5x","p5y","p6x","p6y","p7x","p7y","p8x","p8y","coord","getParameterOf","txs","tys","isFlatEnough","ux","uy","getEdgeSum","_addBounds","v3","tMin","tMax","getLocationAt","getLocationOf","getOffsetOf","loc","getOffset","getNearestLocation","refine","dist","minDist","minT","getNearestPoint","evaluateMethods","getLengthIntegrand","getIterations","evaluate","normalized","len","ds","rangeLength","guess","getTangent","getWeightedTangent","getNormal","getWeightedNormal","getCurvature","addLocation","locations","curve1","curve2","addCurveIntersections","uMin","uMax","oldTDiff","recursion","tMinNew","tMaxNew","tDiff","q0x","q0y","q3x","q3y","factor","dMin","dMax","dp0","dp1","dp2","dp3","tMinClip","tMaxClip","getConvexHull","clipConvexHull","dq0","dq1","dq2","dq3","dist1","dist2","flip","pmax","distZero","hullTop","hullBottom","clipConvexHullPart","qx","qy","addCurveLineIntersections","vc","vl","lx1","ly1","lx2","ly2","ldx","ldy","rlx2","rvl","rvc","tc","tl","addLineIntersection","linear1","linear2","c1p1","c1p2","c2p1","c2p2","_expand","loc1","loc2","path1","path2","getParameter","last","_curve","next2","_curve2","_parameter","_parameter2","getIntersection","_point2","_distance","_version","getPointAt","getSegment","_preferFirst","_segment","_getOffset","getCurveOffset","_intersection","curves1","curves2","matrix1","matrix2","length1","length2","values2","values1","setPathData","getCoord","relative","control","command","cubicCurveTo","quadraticCurveTo","arcTo","_getWinding","setSegments","_clockwise","_monoCurves","getSegments","fullySelected","_add","getFirstSegment","getLastSegment","_countCurves","getFirstCurve","getLastCurve","isClosed","setClosed","getPathData","_precision","addSegment","skipLine","curX","curY","inX","inY","outX","prevX","outY","prevY","segs","_adjustCurves","insertSegment","addSegments","insertSegments","removeSegments","_includeCurves","_selectSegments","newState","flatten","maxDistance","iterator","PathIterator","pos","simplify","fitter","PathFitter","fit","isClockwise","setClockwise","clockwise","last1","last2","first2","first1","toShape","topCenter","shape","isCloseEnough","checkSegmentPoint","seg","anchor","strokePadding","checkSegmentPoints","addToArea","checkSegmentStroke","cap","numSegments","_addBevelJoin","_addSquareCap","hitStroke","hitFill","hitCurves","minLoc","drawHandles","drawHandle","hX","hY","pX","pY","drawSegments","drawSegment","handle","dashLength","drawPart","getFirstControlPoints","rhs","smooth","overlap","knots","f1","f2","ie","je","getCurrentSegment","moveBy","curveTo","through","middle","large","epsilon","rxSq","rySq","xSq","ySq","l2","throughSide","centerSide","ext","inc","_in","lineBy","curveBy","cubicCurveBy","quadraticCurveBy","arcBy","processSegment","prevCoords","addRound","joinBounds","addJoin","addCap","phi","addPoint","normal1","getNormalAt","normal2","getHandleBounds","joinPadding","paddingX","paddingY","xn","xx","yn","yx","getRoughBounds","strokeRadius","joinRadius","createPath","createEllipse","ellipseSegments","getBottomLeft","tr","getTopRight","hx","hy","RoundRectangle","Oval","Arc","RegularPolygon","sides","three","Star","radius1","radius2","getCurrentPath","check","computeBoolean","operation","preparePath","reorient","collect","monoCurves","_getMonoCurves","operator","operators","_path1","_path2","splitPath","_winding","startSeg","totalLength","windingSum","curveLength","getTangentAt","getWinding","tracePaths","intersections","resetLinear","linearHandles","newCurve","horizontal","testContains","windLeft","windRight","yTop","yBottom","yBefore","yAfter","prevCurve","prevT","xBefore","xAfter","startCounted","slope","counted","selfOp","_visited","inter","startInterSeg","added","interSeg","c4","c3","t4","w3","w4","nextCurve","nextSeg","lastSegment","firstSegment","insertCurve","handleCurve","getInteriorPoint","xIntercepts","maxRecursion","addCurve","computeParts","maxT","minDifference","halfT","prevVal","prevLen","weighted","fitCubic","tan1","tan2","uPrime","chordLengthParameterize","maxError","parametersInOrder","generateBezier","findMaxError","reparameterize","V1","V2","tanCenter","b3","alpha1","alpha2","detC0C1","detC0X","detXC1","segLength","eps","diff","degree","maxDist","TextItem","content","_content","_lines","setContent","getContent","getCharacterStyle","setCharacterStyle","getParagraphStyle","setParagraphStyle","PointText","leading","getLeading","font","getFontStyle","textAlign","getJustification","fillText","strokeText","numLines","justification","getTextWidth","fromCSS","colorCache","colorCtx","hsb","gradient","componentParsers","hsbIndices","converters","rgb-hsb","delta","hsb-rgb","rgb-hsl","achromatic","hsl-rgb","t3s","rgb-gray","gray-rgb","gray-hsb","gray-hsl","gradient-rgb","rgb-gradient","hasOverlap","parser","_components","Gradient","_removeOwner","_addOwner","_properties","argType","parsers","stops","getComponents","_canvasStyle","converter","convert","getAlpha","setAlpha","hasAlpha","col","isGradient","toCSS","hex","canvasGradient","_stops","destination","_radial","highlight","createRadialGradient","createLinearGradient","addColorStop","_rampPoint","_color","_types","components1","components2","acronym","setStops","setRadial","_owners","getStops","GradientStop","_defaultRamp","setRampPoint","getRadial","rampPoint","setColor","getRampPoint","getColor","defaults","strokeScaling","windingRule","shadowOffset","selectedColor","fontFamily","fontWeight","_textDefaults","isColor","isPoint","old","_values","_dontMerge","childValue","isStyle","getFontSize","getFontWeight","getFontFamily","getFont","setFont","getPixelSize","DomElement","handlePrefix","prefixes","getStyles","doc","viewport","pageXOffset","scrollLeft","pageYOffset","scrollTop","getViewportBounds","innerWidth","clientWidth","innerHeight","clientHeight","isInvisible","isInView","getPrefixed","setPrefixed","targetTouches","getTarget","srcElement","getRelatedTarget","toElement","stopPropagation","requestAnimationFrame","handleCallbacks","callbacks","focused","nativeRequest","requested","focus","blur","setInterval","getCanvasSize","_element","_pixelRatio","devicePixelRatio","_viewEvents","none","userSelect","touchAction","touchCallout","contentZooming","userDrag","tapHighlightColor","_windowEvents","setViewSize","_setViewSize","Stats","_stats","stats","domElement","_views","_viewsById","_viewSize","_zoom","_focused","_frameItems","_frameItemCount","_animate","play","pause","onResize","_time","_count","_requestFrame","_requested","_handleFrame","_before","_handlingFrame","_handleFrameItems","_update","_transform","getPixelRatio","getViewSize","scrollBy","getZoom","setZoom","isVisible","projectToView","viewToProject","CanvasView","tempFocus","handleMouseMove","_handleEvent","tool","prevFocus","pointerEnabled","msPointerEnabled","viewEvents","selectstart dragstart","docEvents","mouseout","nodeName","scroll","HTMLCanvasElement","deviceRatio","backingStoreRatio","firefox","temp","prevFont","measureText","callEvent","lastPoint","MouseEvent","isStopped","downPoint","overPoint","downItem","lastItem","overItem","dragItem","dblClick","clickTime","stopped","Event","isPrevented","getModifiers","Key","modifiers","KeyEvent","down","character","handleKey","charCode","specialKey","specialKeys","charCodeMap","mac","commandFixMap","downCode",8,9,13,16,17,18,19,20,27,32,35,36,37,38,39,40,46,91,93,224,"specialChars","option","capsLock","which","keypress","isDown","ToolEvent","_item","_choosePoint","toolPoint","getLastPoint","_lastPoint","setLastPoint","getDownPoint","_downPoint","setDownPoint","getMiddlePoint","_middlePoint","setMiddlePoint","middlePoint","getDelta","_delta","setDelta","getCount","_downCount","setCount","setItem","Tool","_firstMove","getMinDistance","_minDistance","setMinDistance","minDistance","_maxDistance","getMaxDistance","setMaxDistance","getFixedDistance","setFixedDistance","_updateEvent","needsChange","matchMaxDistance","_fireEvent","called","Http","async","ActiveXObject","canvases","getLum","setLum","dg","mn","lmn","ln","mxl","getSat","setSat","md","sg","sb","sa","modes","screen","overlay","soft-light","hard-light","color-dodge","color-burn","darken","lighten","difference","exclusion","hue","saturation","luminosity","average","negation","srcContext","dstContext","srcCanvas","dstData","SVGStyles","true","false","lookup","attribute","toSVG","fromSVG","exportFilter","SVGNamespaces","href","setAttributes","attrs","tag","getTransform","trans","exportGroup","childNode","exportSVG","clip-path","exportRaster","embedImages","exportPath","matchShapes","exportShape","exportCompoundPath","exportPlacedSymbol","symbolNode","viewBox","overflow","exportGradient","gradientNode","getGradient","getOrigin","getDestination","getHighlight","gradientUnits","stopColor","stop-color","exportText","applyStyle","visibility","svgs","exportDefinitions","defs","firstChild","XMLSerializer","serializeToString","exporter","exporters","onExport","setOptions","xmlns:xlink","getValue","allowNull","convertValue","importGroup","isClip","currentStyle","applyAttributes","importSVG","importPoly","importPath","pathData","importGradient","isRadial","applyTransform","transforms","applyOpacity","styles","attributes","onLoadCallback","File","reader","FileReader","readAsText","DOMParser","parseFromString","importer","importers","onImport","expandShapes","#document","clippath","polyline","lineargradient","radialgradient","use","gradientTransform","fill-opacity","stroke-opacity","setVisible","display","stop-opacity","percentage","__$__","handler","binaryOperators","$__","unaryOperators","acorn","compile","insertions","insertion","getCode","getBetween","replaceCode","walkAST","argument","between","parentType","computed","sourceMap","lineBreaks","getElementsByTagName","substr","mappings","file","sourceRoot","sources","sourcesContent","btoa","unescape","encodeURIComponent","expose","params","toolHandlers","script","head","createTextNode","_execute","setOnResize","setOnFrame","loadScript","canvasId","scopeAttribute","baseURI","loadAll","fr","mr","hr","sourceFile","vr","column","SyntaxError","raisedAt","Ar","Sr","Er","gr","kr","wr","Cr","beforeExpr","onComment","Kt","pr","Jt","E","xt","Et","wt","Dt","Lt","Ut","Rt","Tt","Vt","Gt","Lr","St","At","jt","Ot","qt","Ct","It","mt","vt","yt","bt","ft","ht","gt","kt","yr","xr","Br","Qt","$t","jr","Or","Tr","Dr","Bt","Yt","Fr","Wt","lt","forbidReserved","ecmaVersion","Mt","zt","Xt","Ir","Ur","V","T","O","expression","strictSemicolons","Nt","Rr","Vr","J","Mr","Nr","label","lr","kind","keyword","Wr","Pr","Zt","tt","_r","declarations","ut","K","Gr","Kr","consequent","alternate","Hr","Qr","Yr","discriminant","cases","en","zr","Jr","Zr","et","block","Xr","guard","guardedHandlers","qr","finalizer","$r","nt","isLoop","init","Q","expressions","isAssign","er","rr","binop","isUpdate","postfix","nr","callee","ur","ot","it","st","ct","atomValue","elements","ir","at","or","allowTrailingCommas","program","defaultOptions","getLineInfo","tokenize","startLoc","endLoc","jumpTo","break","case","catch","continue","debugger","do","else","finally","for","function","if","return","switch","throw","try","var","while","with","null","new","instanceof","typeof","void","delete","tokTypes","bracketL","bracketR","braceL","braceR","parenL","parenR","semi","colon","question","slash","eq","eof","num","regexp","Ft","Pt","Ht","_t","isIdentifierStart","isIdentifierChar","+","*","/","==","!=","transitionEnd","transEndEventNames","WebkitTransition","MozTransition","OTransition","fn","emulateTransitionEnd","$el","one","trigger","special","bsTransitionEnd","bindType","delegateType","is","handleObj","jQuery","Plugin","$this","Alert","dismiss","close","VERSION","TRANSITION_DURATION","removeElement","$parent","closest","isDefaultPrevented","removeClass","hasClass","alert","Constructor","noConflict","Button","toggle","setState","$element","DEFAULTS","isLoading","loadingText","resetText","proxy","addClass","removeAttr","$input","toggleClass","button","$btn","Carousel","action","slide","cycle","$indicators","paused","sliding","$active","$items","keyboard","tagName","clearInterval","getItemIndex","getItemForDirection","activeIndex","willWrap","itemIndex","$next","isCycling","slideEvent","$nextIndicator","slidEvent","offsetWidth","carousel","clickHandler","$target","slideIndex","$carousel","getTargetFromTrigger","$trigger","Collapse","transitioning","addAriaAndCollapsedClass","hasWidth","show","activesData","actives","startEvent","scrollSize","camelCase","hide","offsetHeight","isOpen","collapse","clearMenus","backdrop","Dropdown","insertAfter","dropdown","_relatedTarget","Modal","$body","$dialog","$backdrop","isShown","originalBodyPad","scrollbarWidth","ignoreBackdropClick","remote","BACKDROP_TRANSITION_DURATION","checkScrollbar","setScrollbar","escape","appendTo","adjustDialog","enforceFocus","hideModal","handleUpdate","resetAdjustments","resetScrollbar","removeBackdrop","doAnimate","currentTarget","callbackRemove","modalIsOverflowing","scrollHeight","css","paddingLeft","bodyIsOverflowing","paddingRight","fullWindowWidth","documentElementRect","measureScrollbar","bodyPad","scrollDiv","className","modal","showEvent","Tooltip","enabled","timeout","hoverState","inState","animation","placement","title","$viewport","isFunction","hover","triggers","eventIn","eventOut","leave","_options","fixTitle","getDefaults","getDelegateOptions","tip","isInStateTrue","hasContent","inDom","$tip","tipId","getUID","autoToken","autoPlace","actualWidth","actualHeight","orgPlacement","viewportDim","calculatedOffset","getCalculatedOffset","applyPlacement","prevHoverState","marginTop","marginLeft","setOffset","using","getViewportAdjustedDelta","isVertical","arrowDelta","arrowOffsetPosition","replaceArrow","arrow","getTitle","$e","isBody","elRect","elOffset","outerDims","viewportPadding","viewportDimensions","topEdgeOffset","bottomEdgeOffset","leftEdgeOffset","rightEdgeOffset","$arrow","enable","disable","toggleEnabled","destroy","removeData","tooltip","Popover","popover","ScrollSpy","$scrollElement","activeTarget","refresh","getScrollHeight","offsetMethod","offsetBase","isWindow","$href","maxScroll","parents","parentsUntil","scrollspy","$spy","Tab","$ul","$previous","hideEvent","tab","Affix","checkPosition","checkPositionWithEventLoop","affixed","unpin","pinnedOffset","RESET","getState","offsetTop","offsetBottom","targetHeight","initializing","colliderTop","colliderHeight","getPinnedOffset","affix","affixType","Sage","common","finalize","home","about_us","UTIL","funcname","loadEvents","classnm","ready"],"mappings":"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","file":"main.js","sourcesContent":["!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();","/*!\n * Paper.js v0.9.24 - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2014, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n *\n * Date: Fri Aug 21 16:39:41 2015 +0200\n *\n ***\n *\n * Straps.js - Class inheritance library with support for bean-style accessors\n *\n * Copyright (c) 2006 - 2013 Juerg Lehni\n * http://scratchdisk.com/\n *\n * Distributed under the MIT license.\n *\n ***\n *\n * Acorn.js\n * http://marijnhaverbeke.nl/acorn/\n *\n * Acorn is a tiny, fast JavaScript parser written in JavaScript,\n * created by Marijn Haverbeke and released under an MIT license.\n *\n */\n\nvar paper = new function(undefined) {\n\nvar Base = new function() {\n\tvar hidden = /^(statics|enumerable|beans|preserve)$/,\n\n\t\tforEach = [].forEach || function(iter, bind) {\n\t\t\tfor (var i = 0, l = this.length; i < l; i++)\n\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tforIn = function(iter, bind) {\n\t\t\tfor (var i in this)\n\t\t\t\tif (this.hasOwnProperty(i))\n\t\t\t\t\titer.call(bind, this[i], i, this);\n\t\t},\n\n\t\tcreate = Object.create || function(proto) {\n\t\t\treturn { __proto__: proto };\n\t\t},\n\n\t\tdescribe = Object.getOwnPropertyDescriptor || function(obj, name) {\n\t\t\tvar get = obj.__lookupGetter__ && obj.__lookupGetter__(name);\n\t\t\treturn get\n\t\t\t\t\t? { get: get, set: obj.__lookupSetter__(name),\n\t\t\t\t\t\tenumerable: true, configurable: true }\n\t\t\t\t\t: obj.hasOwnProperty(name)\n\t\t\t\t\t\t? { value: obj[name], enumerable: true,\n\t\t\t\t\t\t\tconfigurable: true, writable: true }\n\t\t\t\t\t\t: null;\n\t\t},\n\n\t\t_define = Object.defineProperty || function(obj, name, desc) {\n\t\t\tif ((desc.get || desc.set) && obj.__defineGetter__) {\n\t\t\t\tif (desc.get)\n\t\t\t\t\tobj.__defineGetter__(name, desc.get);\n\t\t\t\tif (desc.set)\n\t\t\t\t\tobj.__defineSetter__(name, desc.set);\n\t\t\t} else {\n\t\t\t\tobj[name] = desc.value;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tdefine = function(obj, name, desc) {\n\t\t\tdelete obj[name];\n\t\t\treturn _define(obj, name, desc);\n\t\t};\n\n\tfunction inject(dest, src, enumerable, beans, preserve) {\n\t\tvar beansNames = {};\n\n\t\tfunction field(name, val) {\n\t\t\tval = val || (val = describe(src, name))\n\t\t\t\t\t&& (val.get ? val : val.value);\n\t\t\tif (typeof val === 'string' && val[0] === '#')\n\t\t\t\tval = dest[val.substring(1)] || val;\n\t\t\tvar isFunc = typeof val === 'function',\n\t\t\t\tres = val,\n\t\t\t\tprev = preserve || isFunc && !val.base\n\t\t\t\t\t\t? (val && val.get ? name in dest : dest[name])\n\t\t\t\t\t\t: null,\n\t\t\t\tbean;\n\t\t\tif (!preserve || !prev) {\n\t\t\t\tif (isFunc && prev)\n\t\t\t\t\tval.base = prev;\n\t\t\t\tif (isFunc && beans !== false\n\t\t\t\t\t\t&& (bean = name.match(/^([gs]et|is)(([A-Z])(.*))$/)))\n\t\t\t\t\tbeansNames[bean[3].toLowerCase() + bean[4]] = bean[2];\n\t\t\t\tif (!res || isFunc || !res.get || typeof res.get !== 'function'\n\t\t\t\t\t\t|| !Base.isPlainObject(res))\n\t\t\t\t\tres = { value: res, writable: true };\n\t\t\t\tif ((describe(dest, name)\n\t\t\t\t\t\t|| { configurable: true }).configurable) {\n\t\t\t\t\tres.configurable = true;\n\t\t\t\t\tres.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tdefine(dest, name, res);\n\t\t\t}\n\t\t}\n\t\tif (src) {\n\t\t\tfor (var name in src) {\n\t\t\t\tif (src.hasOwnProperty(name) && !hidden.test(name))\n\t\t\t\t\tfield(name);\n\t\t\t}\n\t\t\tfor (var name in beansNames) {\n\t\t\t\tvar part = beansNames[name],\n\t\t\t\t\tset = dest['set' + part],\n\t\t\t\t\tget = dest['get' + part] || set && dest['is' + part];\n\t\t\t\tif (get && (beans === true || get.length === 0))\n\t\t\t\t\tfield(name, { get: get, set: set });\n\t\t\t}\n\t\t}\n\t\treturn dest;\n\t}\n\n\tfunction each(obj, iter, bind) {\n\t\tif (obj)\n\t\t\t('length' in obj && !obj.getLength\n\t\t\t\t\t&& typeof obj.length === 'number'\n\t\t\t\t? forEach\n\t\t\t\t: forIn).call(obj, iter, bind = bind || obj);\n\t\treturn bind;\n\t}\n\n\tfunction set(obj, props, exclude) {\n\t\tfor (var key in props)\n\t\t\tif (props.hasOwnProperty(key) && !(exclude && exclude[key]))\n\t\t\t\tobj[key] = props[key];\n\t\treturn obj;\n\t}\n\n\treturn inject(function Base() {\n\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\tset(this, arguments[i]);\n\t}, {\n\t\tinject: function(src) {\n\t\t\tif (src) {\n\t\t\t\tvar statics = src.statics === true ? src : src.statics,\n\t\t\t\t\tbeans = src.beans,\n\t\t\t\t\tpreserve = src.preserve;\n\t\t\t\tif (statics !== src)\n\t\t\t\t\tinject(this.prototype, src, src.enumerable, beans, preserve);\n\t\t\t\tinject(this, statics, true, beans, preserve);\n\t\t\t}\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++)\n\t\t\t\tthis.inject(arguments[i]);\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar base = this,\n\t\t\t\tctor,\n\t\t\t\tproto;\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++)\n\t\t\t\tif (ctor = arguments[i].initialize)\n\t\t\t\t\tbreak;\n\t\t\tctor = ctor || function() {\n\t\t\t\tbase.apply(this, arguments);\n\t\t\t};\n\t\t\tproto = ctor.prototype = create(this.prototype);\n\t\t\tdefine(proto, 'constructor',\n\t\t\t\t\t{ value: ctor, writable: true, configurable: true });\n\t\t\tinject(ctor, this, true);\n\t\t\tif (arguments.length)\n\t\t\t\tthis.inject.apply(ctor, arguments);\n\t\t\tctor.base = base;\n\t\t\treturn ctor;\n\t\t}\n\t}, true).inject({\n\t\tinject: function() {\n\t\t\tfor (var i = 0, l = arguments.length; i < l; i++) {\n\t\t\t\tvar src = arguments[i];\n\t\t\t\tif (src)\n\t\t\t\t\tinject(this, src, src.enumerable, src.beans, src.preserve);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\textend: function() {\n\t\t\tvar res = create(this);\n\t\t\treturn res.inject.apply(res, arguments);\n\t\t},\n\n\t\teach: function(iter, bind) {\n\t\t\treturn each(this, iter, bind);\n\t\t},\n\n\t\tset: function(props) {\n\t\t\treturn set(this, props);\n\t\t},\n\n\t\tclone: function() {\n\t\t\treturn new this.constructor(this);\n\t\t},\n\n\t\tstatics: {\n\t\t\teach: each,\n\t\t\tcreate: create,\n\t\t\tdefine: define,\n\t\t\tdescribe: describe,\n\t\t\tset: set,\n\n\t\t\tclone: function(obj) {\n\t\t\t\treturn set(new obj.constructor(), obj);\n\t\t\t},\n\n\t\t\tisPlainObject: function(obj) {\n\t\t\t\tvar ctor = obj != null && obj.constructor;\n\t\t\t\treturn ctor && (ctor === Object || ctor === Base\n\t\t\t\t\t\t|| ctor.name === 'Object');\n\t\t\t},\n\n\t\t\tpick: function(a, b) {\n\t\t\t\treturn a !== undefined ? a : b;\n\t\t\t}\n\t\t}\n\t});\n};\n\nif (typeof module !== 'undefined')\n\tmodule.exports = Base;\n\nBase.inject({\n\ttoString: function() {\n\t\treturn this._id != null\n\t\t\t?  (this._class || 'Object') + (this._name\n\t\t\t\t? \" '\" + this._name + \"'\"\n\t\t\t\t: ' @' + this._id)\n\t\t\t: '{ ' + Base.each(this, function(value, key) {\n\t\t\t\tif (!/^_/.test(key)) {\n\t\t\t\t\tvar type = typeof value;\n\t\t\t\t\tthis.push(key + ': ' + (type === 'number'\n\t\t\t\t\t\t\t? Formatter.instance.number(value)\n\t\t\t\t\t\t\t: type === 'string' ? \"'\" + value + \"'\" : value));\n\t\t\t\t}\n\t\t\t}, []).join(', ') + ' }';\n\t},\n\n\tgetClassName: function() {\n\t\treturn this._class || '';\n\t},\n\n\texportJSON: function(options) {\n\t\treturn Base.exportJSON(this, options);\n\t},\n\n\ttoJSON: function() {\n\t\treturn Base.serialize(this);\n\t},\n\n\t_set: function(props, exclude, dontCheck) {\n\t\tif (props && (dontCheck || Base.isPlainObject(props))) {\n\t\t\tvar keys = Object.keys(props._filtering || props);\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\tvar key = keys[i];\n\t\t\t\tif (!(exclude && exclude[key])) {\n\t\t\t\t\tvar value = props[key];\n\t\t\t\t\tif (value !== undefined)\n\t\t\t\t\t\tthis[key] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tstatics: {\n\n\t\texports: {\n\t\t\tenumerable: true\n\t\t},\n\n\t\textend: function extend() {\n\t\t\tvar res = extend.base.apply(this, arguments),\n\t\t\t\tname = res.prototype._class;\n\t\t\tif (name && !Base.exports[name])\n\t\t\t\tBase.exports[name] = res;\n\t\t\treturn res;\n\t\t},\n\n\t\tequals: function(obj1, obj2) {\n\t\t\tif (obj1 === obj2)\n\t\t\t\treturn true;\n\t\t\tif (obj1 && obj1.equals)\n\t\t\t\treturn obj1.equals(obj2);\n\t\t\tif (obj2 && obj2.equals)\n\t\t\t\treturn obj2.equals(obj1);\n\t\t\tif (obj1 && obj2\n\t\t\t\t\t&& typeof obj1 === 'object' && typeof obj2 === 'object') {\n\t\t\t\tif (Array.isArray(obj1) && Array.isArray(obj2)) {\n\t\t\t\t\tvar length = obj1.length;\n\t\t\t\t\tif (length !== obj2.length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tif (!Base.equals(obj1[length], obj2[length]))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar keys = Object.keys(obj1),\n\t\t\t\t\t\tlength = keys.length;\n\t\t\t\t\tif (length !== Object.keys(obj2).length)\n\t\t\t\t\t\treturn false;\n\t\t\t\t\twhile (length--) {\n\t\t\t\t\t\tvar key = keys[length];\n\t\t\t\t\t\tif (!(obj2.hasOwnProperty(key)\n\t\t\t\t\t\t\t\t&& Base.equals(obj1[key], obj2[key])))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tread: function(list, start, options, length) {\n\t\t\tif (this === Base) {\n\t\t\t\tvar value = this.peek(list, start);\n\t\t\t\tlist.__index++;\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tvar proto = this.prototype,\n\t\t\t\treadIndex = proto._readIndex,\n\t\t\t\tindex = start || readIndex && list.__index || 0;\n\t\t\tif (!length)\n\t\t\t\tlength = list.length - index;\n\t\t\tvar obj = list[index];\n\t\t\tif (obj instanceof this\n\t\t\t\t|| options && options.readNull && obj == null && length <= 1) {\n\t\t\t\tif (readIndex)\n\t\t\t\t\tlist.__index = index + 1;\n\t\t\t\treturn obj && options && options.clone ? obj.clone() : obj;\n\t\t\t}\n\t\t\tobj = Base.create(this.prototype);\n\t\t\tif (readIndex)\n\t\t\t\tobj.__read = true;\n\t\t\tobj = obj.initialize.apply(obj, index > 0 || length < list.length\n\t\t\t\t? Array.prototype.slice.call(list, index, index + length)\n\t\t\t\t: list) || obj;\n\t\t\tif (readIndex) {\n\t\t\t\tlist.__index = index + obj.__read;\n\t\t\t\tobj.__read = undefined;\n\t\t\t}\n\t\t\treturn obj;\n\t\t},\n\n\t\tpeek: function(list, start) {\n\t\t\treturn list[list.__index = start || list.__index || 0];\n\t\t},\n\n\t\tremain: function(list) {\n\t\t\treturn list.length - (list.__index || 0);\n\t\t},\n\n\t\treadAll: function(list, start, options) {\n\t\t\tvar res = [],\n\t\t\t\tentry;\n\t\t\tfor (var i = start || 0, l = list.length; i < l; i++) {\n\t\t\t\tres.push(Array.isArray(entry = list[i])\n\t\t\t\t\t\t? this.read(entry, 0, options)\n\t\t\t\t\t\t: this.read(list, i, options, 1));\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\n\t\treadNamed: function(list, name, start, options, length) {\n\t\t\tvar value = this.getNamed(list, name),\n\t\t\t\thasObject = value !== undefined;\n\t\t\tif (hasObject) {\n\t\t\t\tvar filtered = list._filtered;\n\t\t\t\tif (!filtered) {\n\t\t\t\t\tfiltered = list._filtered = Base.create(list[0]);\n\t\t\t\t\tfiltered._filtering = list[0];\n\t\t\t\t}\n\t\t\t\tfiltered[name] = undefined;\n\t\t\t}\n\t\t\treturn this.read(hasObject ? [value] : list, start, options, length);\n\t\t},\n\n\t\tgetNamed: function(list, name) {\n\t\t\tvar arg = list[0];\n\t\t\tif (list._hasObject === undefined)\n\t\t\t\tlist._hasObject = list.length === 1 && Base.isPlainObject(arg);\n\t\t\tif (list._hasObject)\n\t\t\t\treturn name ? arg[name] : list._filtered || arg;\n\t\t},\n\n\t\thasNamed: function(list, name) {\n\t\t\treturn !!this.getNamed(list, name);\n\t\t},\n\n\t\tisPlainValue: function(obj, asString) {\n\t\t\treturn this.isPlainObject(obj) || Array.isArray(obj)\n\t\t\t\t\t|| asString && typeof obj === 'string';\n\t\t},\n\n\t\tserialize: function(obj, options, compact, dictionary) {\n\t\t\toptions = options || {};\n\n\t\t\tvar root = !dictionary,\n\t\t\t\tres;\n\t\t\tif (root) {\n\t\t\t\toptions.formatter = new Formatter(options.precision);\n\t\t\t\tdictionary = {\n\t\t\t\t\tlength: 0,\n\t\t\t\t\tdefinitions: {},\n\t\t\t\t\treferences: {},\n\t\t\t\t\tadd: function(item, create) {\n\t\t\t\t\t\tvar id = '#' + item._id,\n\t\t\t\t\t\t\tref = this.references[id];\n\t\t\t\t\t\tif (!ref) {\n\t\t\t\t\t\t\tthis.length++;\n\t\t\t\t\t\t\tvar res = create.call(item),\n\t\t\t\t\t\t\t\tname = item._class;\n\t\t\t\t\t\t\tif (name && res[0] !== name)\n\t\t\t\t\t\t\t\tres.unshift(name);\n\t\t\t\t\t\t\tthis.definitions[id] = res;\n\t\t\t\t\t\t\tref = this.references[id] = [id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (obj && obj._serialize) {\n\t\t\t\tres = obj._serialize(options, dictionary);\n\t\t\t\tvar name = obj._class;\n\t\t\t\tif (name && !compact && !res._compact && res[0] !== name)\n\t\t\t\t\tres.unshift(name);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\tres = [];\n\t\t\t\tfor (var i = 0, l = obj.length; i < l; i++)\n\t\t\t\t\tres[i] = Base.serialize(obj[i], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\tif (compact)\n\t\t\t\t\tres._compact = true;\n\t\t\t} else if (Base.isPlainObject(obj)) {\n\t\t\t\tres = {};\n\t\t\t\tvar keys = Object.keys(obj);\n\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\t\t\tvar key = keys[i];\n\t\t\t\t\tres[key] = Base.serialize(obj[key], options, compact,\n\t\t\t\t\t\t\tdictionary);\n\t\t\t\t}\n\t\t\t} else if (typeof obj === 'number') {\n\t\t\t\tres = options.formatter.number(obj, options.precision);\n\t\t\t} else {\n\t\t\t\tres = obj;\n\t\t\t}\n\t\t\treturn root && dictionary.length > 0\n\t\t\t\t\t? [['dictionary', dictionary.definitions], res]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\tdeserialize: function(json, create, _data, _isDictionary) {\n\t\t\tvar res = json,\n\t\t\t\tisRoot = !_data;\n\t\t\t_data = _data || {};\n\t\t\tif (Array.isArray(json)) {\n\t\t\t\tvar type = json[0],\n\t\t\t\t\tisDictionary = type === 'dictionary';\n\t\t\t\tif (json.length == 1 && /^#/.test(type))\n\t\t\t\t\treturn _data.dictionary[type];\n\t\t\t\ttype = Base.exports[type];\n\t\t\t\tres = [];\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var i = type ? 1 : 0, l = json.length; i < l; i++)\n\t\t\t\t\tres.push(Base.deserialize(json[i], create, _data,\n\t\t\t\t\t\t\tisDictionary));\n\t\t\t\tif (type) {\n\t\t\t\t\tvar args = res;\n\t\t\t\t\tif (create) {\n\t\t\t\t\t\tres = create(type, args);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tres = Base.create(type.prototype);\n\t\t\t\t\t\ttype.apply(res, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (Base.isPlainObject(json)) {\n\t\t\t\tres = {};\n\t\t\t\tif (_isDictionary)\n\t\t\t\t\t_data.dictionary = res;\n\t\t\t\tfor (var key in json)\n\t\t\t\t\tres[key] = Base.deserialize(json[key], create, _data);\n\t\t\t}\n\t\t\treturn isRoot && json && json.length && json[0][0] === 'dictionary'\n\t\t\t\t\t? res[1]\n\t\t\t\t\t: res;\n\t\t},\n\n\t\texportJSON: function(obj, options) {\n\t\t\tvar json = Base.serialize(obj, options);\n\t\t\treturn options && options.asString === false\n\t\t\t\t\t? json\n\t\t\t\t\t: JSON.stringify(json);\n\t\t},\n\n\t\timportJSON: function(json, target) {\n\t\t\treturn Base.deserialize(\n\t\t\t\t\ttypeof json === 'string' ? JSON.parse(json) : json,\n\t\t\t\t\tfunction(type, args) {\n\t\t\t\t\t\tvar obj = target && target.constructor === type\n\t\t\t\t\t\t\t\t? target\n\t\t\t\t\t\t\t\t: Base.create(type.prototype),\n\t\t\t\t\t\t\tisTarget = obj === target;\n\t\t\t\t\t\tif (args.length === 1 && obj instanceof Item\n\t\t\t\t\t\t\t\t&& (isTarget || !(obj instanceof Layer))) {\n\t\t\t\t\t\t\tvar arg = args[0];\n\t\t\t\t\t\t\tif (Base.isPlainObject(arg))\n\t\t\t\t\t\t\t\targ.insert = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttype.apply(obj, args);\n\t\t\t\t\t\tif (isTarget)\n\t\t\t\t\t\t\ttarget = null;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t});\n\t\t},\n\n\t\tsplice: function(list, items, index, remove) {\n\t\t\tvar amount = items && items.length,\n\t\t\t\tappend = index === undefined;\n\t\t\tindex = append ? list.length : index;\n\t\t\tif (index > list.length)\n\t\t\t\tindex = list.length;\n\t\t\tfor (var i = 0; i < amount; i++)\n\t\t\t\titems[i]._index = index + i;\n\t\t\tif (append) {\n\t\t\t\tlist.push.apply(list, items);\n\t\t\t\treturn [];\n\t\t\t} else {\n\t\t\t\tvar args = [index, remove];\n\t\t\t\tif (items)\n\t\t\t\t\targs.push.apply(args, items);\n\t\t\t\tvar removed = list.splice.apply(list, args);\n\t\t\t\tfor (var i = 0, l = removed.length; i < l; i++)\n\t\t\t\t\tremoved[i]._index = undefined;\n\t\t\t\tfor (var i = index + amount, l = list.length; i < l; i++)\n\t\t\t\t\tlist[i]._index = i;\n\t\t\t\treturn removed;\n\t\t\t}\n\t\t},\n\n\t\tcapitalize: function(str) {\n\t\t\treturn str.replace(/\\b[a-z]/g, function(match) {\n\t\t\t\treturn match.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\tcamelize: function(str) {\n\t\t\treturn str.replace(/-(.)/g, function(all, chr) {\n\t\t\t\treturn chr.toUpperCase();\n\t\t\t});\n\t\t},\n\n\t\thyphenate: function(str) {\n\t\t\treturn str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n\t\t}\n\t}\n});\n\nvar Emitter = {\n\ton: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.on(key, value);\n\t\t\t}, this);\n\t\t} else {\n\t\t\tvar types = this._eventTypes,\n\t\t\t\tentry = types && types[type],\n\t\t\t\thandlers = this._callbacks = this._callbacks || {};\n\t\t\thandlers = handlers[type] = handlers[type] || [];\n\t\t\tif (handlers.indexOf(func) === -1) {\n\t\t\t\thandlers.push(func);\n\t\t\t\tif (entry && entry.install && handlers.length == 1)\n\t\t\t\t\tentry.install.call(this, type);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\toff: function(type, func) {\n\t\tif (typeof type !== 'string') {\n\t\t\tBase.each(type, function(value, key) {\n\t\t\t\tthis.off(key, value);\n\t\t\t}, this);\n\t\t\treturn;\n\t\t}\n\t\tvar types = this._eventTypes,\n\t\t\tentry = types && types[type],\n\t\t\thandlers = this._callbacks && this._callbacks[type],\n\t\t\tindex;\n\t\tif (handlers) {\n\t\t\tif (!func || (index = handlers.indexOf(func)) !== -1\n\t\t\t\t\t&& handlers.length === 1) {\n\t\t\t\tif (entry && entry.uninstall)\n\t\t\t\t\tentry.uninstall.call(this, type);\n\t\t\t\tdelete this._callbacks[type];\n\t\t\t} else if (index !== -1) {\n\t\t\t\thandlers.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t},\n\n\tonce: function(type, func) {\n\t\treturn this.on(type, function() {\n\t\t\tfunc.apply(this, arguments);\n\t\t\tthis.off(type, func);\n\t\t});\n\t},\n\n\temit: function(type, event) {\n\t\tvar handlers = this._callbacks && this._callbacks[type];\n\t\tif (!handlers)\n\t\t\treturn false;\n\t\tvar args = [].slice.call(arguments, 1);\n\t\thandlers = handlers.slice();\n\t\tfor (var i = 0, l = handlers.length; i < l; i++) {\n\t\t\tif (handlers[i].apply(this, args) === false) {\n\t\t\t\tif (event && event.stop)\n\t\t\t\t\tevent.stop();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tresponds: function(type) {\n\t\treturn !!(this._callbacks && this._callbacks[type]);\n\t},\n\n\tattach: '#on',\n\tdetach: '#off',\n\tfire: '#emit',\n\n\t_installEvents: function(install) {\n\t\tvar handlers = this._callbacks,\n\t\t\tkey = install ? 'install' : 'uninstall';\n\t\tfor (var type in handlers) {\n\t\t\tif (handlers[type].length > 0) {\n\t\t\t\tvar types = this._eventTypes,\n\t\t\t\t\tentry = types && types[type],\n\t\t\t\t\tfunc = entry && entry[key];\n\t\t\t\tif (func)\n\t\t\t\t\tfunc.call(this, type);\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tinject: function inject(src) {\n\t\t\tvar events = src._events;\n\t\t\tif (events) {\n\t\t\t\tvar types = {};\n\t\t\t\tBase.each(events, function(entry, key) {\n\t\t\t\t\tvar isString = typeof entry === 'string',\n\t\t\t\t\t\tname = isString ? entry : key,\n\t\t\t\t\t\tpart = Base.capitalize(name),\n\t\t\t\t\t\ttype = name.substring(2).toLowerCase();\n\t\t\t\t\ttypes[type] = isString ? {} : entry;\n\t\t\t\t\tname = '_' + name;\n\t\t\t\t\tsrc['get' + part] = function() {\n\t\t\t\t\t\treturn this[name];\n\t\t\t\t\t};\n\t\t\t\t\tsrc['set' + part] = function(func) {\n\t\t\t\t\t\tvar prev = this[name];\n\t\t\t\t\t\tif (prev)\n\t\t\t\t\t\t\tthis.off(type, prev);\n\t\t\t\t\t\tif (func)\n\t\t\t\t\t\t\tthis.on(type, func);\n\t\t\t\t\t\tthis[name] = func;\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsrc._eventTypes = types;\n\t\t\t}\n\t\t\treturn inject.base.apply(this, arguments);\n\t\t}\n\t}\n};\n\nvar PaperScope = Base.extend({\n\t_class: 'PaperScope',\n\n\tinitialize: function PaperScope() {\n\t\tpaper = this;\n\t\tthis.settings = new Base({\n\t\t\tapplyMatrix: true,\n\t\t\thandleSize: 4,\n\t\t\thitTolerance: 0\n\t\t});\n\t\tthis.project = null;\n\t\tthis.projects = [];\n\t\tthis.tools = [];\n\t\tthis.palettes = [];\n\t\tthis._id = PaperScope._id++;\n\t\tPaperScope._scopes[this._id] = this;\n\t\tvar proto = PaperScope.prototype;\n\t\tif (!this.support) {\n\t\t\tvar ctx = CanvasProvider.getContext(1, 1);\n\t\t\tproto.support = {\n\t\t\t\tnativeDash: 'setLineDash' in ctx || 'mozDash' in ctx,\n\t\t\t\tnativeBlendModes: BlendMode.nativeModes\n\t\t\t};\n\t\t\tCanvasProvider.release(ctx);\n\t\t}\n\n\t\tif (!this.browser) {\n\t\t\tvar agent = navigator.userAgent.toLowerCase(),\n\t\t\t\tplatform = (/(win)/.exec(agent)\n\t\t\t\t\t\t|| /(mac)/.exec(agent)\n\t\t\t\t\t\t|| /(linux)/.exec(agent)\n\t\t\t\t\t\t|| [])[0],\n\t\t\t\tbrowser = proto.browser = { platform: platform };\n\t\t\tif (platform)\n\t\t\t\tbrowser[platform] = true;\n\t\t\tagent.replace(\n\t\t\t\t/(opera|chrome|safari|webkit|firefox|msie|trident|atom)\\/?\\s*([.\\d]+)(?:.*version\\/([.\\d]+))?(?:.*rv\\:([.\\d]+))?/g,\n\t\t\t\tfunction(all, n, v1, v2, rv) {\n\t\t\t\t\tif (!browser.chrome) {\n\t\t\t\t\t\tvar v = n === 'opera' ? v2 : v1;\n\t\t\t\t\t\tif (n === 'trident') {\n\t\t\t\t\t\t\tv = rv;\n\t\t\t\t\t\t\tn = 'msie';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbrowser.version = v;\n\t\t\t\t\t\tbrowser.versionNumber = parseFloat(v);\n\t\t\t\t\t\tbrowser.name = n;\n\t\t\t\t\t\tbrowser[n] = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (browser.chrome)\n\t\t\t\tdelete browser.webkit;\n\t\t\tif (browser.atom)\n\t\t\t\tdelete browser.chrome;\n\t\t}\n\t},\n\n\tversion: '0.9.24',\n\n\tgetView: function() {\n\t\treturn this.project && this.project.getView();\n\t},\n\n\tgetPaper: function() {\n\t\treturn this;\n\t},\n\n\texecute: function(code, url, options) {\n\t\tpaper.PaperScript.execute(code, this, url, options);\n\t\tView.updateFocus();\n\t},\n\n\tinstall: function(scope) {\n\t\tvar that = this;\n\t\tBase.each(['project', 'view', 'tool'], function(key) {\n\t\t\tBase.define(scope, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tget: function() {\n\t\t\t\t\treturn that[key];\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\tfor (var key in this)\n\t\t\tif (!/^_/.test(key) && this[key])\n\t\t\t\tscope[key] = this[key];\n\t},\n\n\tsetup: function(element) {\n\t\tpaper = this;\n\t\tthis.project = new Project(element);\n\t\treturn this;\n\t},\n\n\tactivate: function() {\n\t\tpaper = this;\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.projects.length - 1; i >= 0; i--)\n\t\t\tthis.projects[i].remove();\n\t\tfor (var i = this.tools.length - 1; i >= 0; i--)\n\t\t\tthis.tools[i].remove();\n\t\tfor (var i = this.palettes.length - 1; i >= 0; i--)\n\t\t\tthis.palettes[i].remove();\n\t},\n\n\tremove: function() {\n\t\tthis.clear();\n\t\tdelete PaperScope._scopes[this._id];\n\t},\n\n\tstatics: new function() {\n\t\tfunction handleAttribute(name) {\n\t\t\tname += 'Attribute';\n\t\t\treturn function(el, attr) {\n\t\t\t\treturn el[name](attr) || el[name]('data-paper-' + attr);\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t_scopes: {},\n\t\t\t_id: 0,\n\n\t\t\tget: function(id) {\n\t\t\t\treturn this._scopes[id] || null;\n\t\t\t},\n\n\t\t\tgetAttribute: handleAttribute('get'),\n\t\t\thasAttribute: handleAttribute('has')\n\t\t};\n\t}\n});\n\nvar PaperScopeItem = Base.extend(Emitter, {\n\n\tinitialize: function(activate) {\n\t\tthis._scope = paper;\n\t\tthis._index = this._scope[this._list].push(this) - 1;\n\t\tif (activate || !this._scope[this._reference])\n\t\t\tthis.activate();\n\t},\n\n\tactivate: function() {\n\t\tif (!this._scope)\n\t\t\treturn false;\n\t\tvar prev = this._scope[this._reference];\n\t\tif (prev && prev !== this)\n\t\t\tprev.emit('deactivate');\n\t\tthis._scope[this._reference] = this;\n\t\tthis.emit('activate', prev);\n\t\treturn true;\n\t},\n\n\tisActive: function() {\n\t\treturn this._scope[this._reference] === this;\n\t},\n\n\tremove: function() {\n\t\tif (this._index == null)\n\t\t\treturn false;\n\t\tBase.splice(this._scope[this._list], null, this._index, 1);\n\t\tif (this._scope[this._reference] == this)\n\t\t\tthis._scope[this._reference] = null;\n\t\tthis._scope = null;\n\t\treturn true;\n\t}\n});\n\nvar Formatter = Base.extend({\n\tinitialize: function(precision) {\n\t\tthis.precision = precision || 5;\n\t\tthis.multiplier = Math.pow(10, this.precision);\n\t},\n\n\tnumber: function(val) {\n\t\treturn Math.round(val * this.multiplier) / this.multiplier;\n\t},\n\n\tpair: function(val1, val2, separator) {\n\t\treturn this.number(val1) + (separator || ',') + this.number(val2);\n\t},\n\n\tpoint: function(val, separator) {\n\t\treturn this.number(val.x) + (separator || ',') + this.number(val.y);\n\t},\n\n\tsize: function(val, separator) {\n\t\treturn this.number(val.width) + (separator || ',')\n\t\t\t\t+ this.number(val.height);\n\t},\n\n\trectangle: function(val, separator) {\n\t\treturn this.point(val, separator) + (separator || ',')\n\t\t\t\t+ this.size(val, separator);\n\t}\n});\n\nFormatter.instance = new Formatter();\n\nvar Numerical = new function() {\n\n\tvar abscissas = [\n\t\t[  0.5773502691896257645091488],\n\t\t[0,0.7745966692414833770358531],\n\t\t[  0.3399810435848562648026658,0.8611363115940525752239465],\n\t\t[0,0.5384693101056830910363144,0.9061798459386639927976269],\n\t\t[  0.2386191860831969086305017,0.6612093864662645136613996,0.9324695142031520278123016],\n\t\t[0,0.4058451513773971669066064,0.7415311855993944398638648,0.9491079123427585245261897],\n\t\t[  0.1834346424956498049394761,0.5255324099163289858177390,0.7966664774136267395915539,0.9602898564975362316835609],\n\t\t[0,0.3242534234038089290385380,0.6133714327005903973087020,0.8360311073266357942994298,0.9681602395076260898355762],\n\t\t[  0.1488743389816312108848260,0.4333953941292471907992659,0.6794095682990244062343274,0.8650633666889845107320967,0.9739065285171717200779640],\n\t\t[0,0.2695431559523449723315320,0.5190961292068118159257257,0.7301520055740493240934163,0.8870625997680952990751578,0.9782286581460569928039380],\n\t\t[  0.1252334085114689154724414,0.3678314989981801937526915,0.5873179542866174472967024,0.7699026741943046870368938,0.9041172563704748566784659,0.9815606342467192506905491],\n\t\t[0,0.2304583159551347940655281,0.4484927510364468528779129,0.6423493394403402206439846,0.8015780907333099127942065,0.9175983992229779652065478,0.9841830547185881494728294],\n\t\t[  0.1080549487073436620662447,0.3191123689278897604356718,0.5152486363581540919652907,0.6872929048116854701480198,0.8272013150697649931897947,0.9284348836635735173363911,0.9862838086968123388415973],\n\t\t[0,0.2011940939974345223006283,0.3941513470775633698972074,0.5709721726085388475372267,0.7244177313601700474161861,0.8482065834104272162006483,0.9372733924007059043077589,0.9879925180204854284895657],\n\t\t[  0.0950125098376374401853193,0.2816035507792589132304605,0.4580167776572273863424194,0.6178762444026437484466718,0.7554044083550030338951012,0.8656312023878317438804679,0.9445750230732325760779884,0.9894009349916499325961542]\n\t];\n\n\tvar weights = [\n\t\t[1],\n\t\t[0.8888888888888888888888889,0.5555555555555555555555556],\n\t\t[0.6521451548625461426269361,0.3478548451374538573730639],\n\t\t[0.5688888888888888888888889,0.4786286704993664680412915,0.2369268850561890875142640],\n\t\t[0.4679139345726910473898703,0.3607615730481386075698335,0.1713244923791703450402961],\n\t\t[0.4179591836734693877551020,0.3818300505051189449503698,0.2797053914892766679014678,0.1294849661688696932706114],\n\t\t[0.3626837833783619829651504,0.3137066458778872873379622,0.2223810344533744705443560,0.1012285362903762591525314],\n\t\t[0.3302393550012597631645251,0.3123470770400028400686304,0.2606106964029354623187429,0.1806481606948574040584720,0.0812743883615744119718922],\n\t\t[0.2955242247147528701738930,0.2692667193099963550912269,0.2190863625159820439955349,0.1494513491505805931457763,0.0666713443086881375935688],\n\t\t[0.2729250867779006307144835,0.2628045445102466621806889,0.2331937645919904799185237,0.1862902109277342514260976,0.1255803694649046246346943,0.0556685671161736664827537],\n\t\t[0.2491470458134027850005624,0.2334925365383548087608499,0.2031674267230659217490645,0.1600783285433462263346525,0.1069393259953184309602547,0.0471753363865118271946160],\n\t\t[0.2325515532308739101945895,0.2262831802628972384120902,0.2078160475368885023125232,0.1781459807619457382800467,0.1388735102197872384636018,0.0921214998377284479144218,0.0404840047653158795200216],\n\t\t[0.2152638534631577901958764,0.2051984637212956039659241,0.1855383974779378137417166,0.1572031671581935345696019,0.1215185706879031846894148,0.0801580871597602098056333,0.0351194603317518630318329],\n\t\t[0.2025782419255612728806202,0.1984314853271115764561183,0.1861610000155622110268006,0.1662692058169939335532009,0.1395706779261543144478048,0.1071592204671719350118695,0.0703660474881081247092674,0.0307532419961172683546284],\n\t\t[0.1894506104550684962853967,0.1826034150449235888667637,0.1691565193950025381893121,0.1495959888165767320815017,0.1246289712555338720524763,0.0951585116824927848099251,0.0622535239386478928628438,0.0271524594117540948517806]\n\t];\n\n\tvar abs = Math.abs,\n\t\tsqrt = Math.sqrt,\n\t\tpow = Math.pow,\n\t\tTOLERANCE = 1e-6,\n\t\tEPSILON = 1e-12,\n\t\tMACHINE_EPSILON = 1.12e-16;\n\n\treturn {\n\t\tTOLERANCE: TOLERANCE,\n\t\tEPSILON: EPSILON,\n\t\tMACHINE_EPSILON: MACHINE_EPSILON,\n\t\tKAPPA: 4 * (sqrt(2) - 1) / 3,\n\n\t\tisZero: function(val) {\n\t\t\treturn abs(val) <= EPSILON;\n\t\t},\n\n\t\tintegrate: function(f, a, b, n) {\n\t\t\tvar x = abscissas[n - 2],\n\t\t\t\tw = weights[n - 2],\n\t\t\t\tA = (b - a) * 0.5,\n\t\t\t\tB = A + a,\n\t\t\t\ti = 0,\n\t\t\t\tm = (n + 1) >> 1,\n\t\t\t\tsum = n & 1 ? w[i++] * f(B) : 0;\n\t\t\twhile (i < m) {\n\t\t\t\tvar Ax = A * x[i];\n\t\t\t\tsum += w[i++] * (f(B + Ax) + f(B - Ax));\n\t\t\t}\n\t\t\treturn A * sum;\n\t\t},\n\n\t\tfindRoot: function(f, df, x, a, b, n, tolerance) {\n\t\t\tfor (var i = 0; i < n; i++) {\n\t\t\t\tvar fx = f(x),\n\t\t\t\t\tdx = fx / df(x),\n\t\t\t\t\tnx = x - dx;\n\t\t\t\tif (abs(dx) < tolerance)\n\t\t\t\t\treturn nx;\n\t\t\t\tif (fx > 0) {\n\t\t\t\t\tb = x;\n\t\t\t\t\tx = nx <= a ? (a + b) * 0.5 : nx;\n\t\t\t\t} else {\n\t\t\t\t\ta = x;\n\t\t\t\t\tx = nx >= b ? (a + b) * 0.5 : nx;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn x;\n\t\t},\n\n\t\tsolveQuadratic: function(a, b, c, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx1, x2 = Infinity,\n\t\t\t\tB = b,\n\t\t\t\tD;\n\t\t\tb /= 2;\n\t\t\tD = b * b - a * c;\n\t\t\tif (D !== 0 && abs(D) < MACHINE_EPSILON) {\n\t\t\t\tvar gmC = pow(abs(a * b * c), 1 / 3);\n\t\t\t\tif (gmC < 1e-8) {\n\t\t\t\t\tvar mult = pow(10, abs(\n\t\t\t\t\t\tMath.floor(Math.log(gmC) * Math.LOG10E)));\n\t\t\t\t\tif (!isFinite(mult))\n\t\t\t\t\t\tmult = 0;\n\t\t\t\t\ta *= mult;\n\t\t\t\t\tb *= mult;\n\t\t\t\t\tc *= mult;\n\t\t\t\t\tD = b * b - a * c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\tif (abs(B) < EPSILON)\n\t\t\t\t\treturn abs(c) < EPSILON ? -1 : 0;\n\t\t\t\tx1 = -c / B;\n\t\t\t} else {\n\t\t\t\tif (D >= -MACHINE_EPSILON) {\n\t\t\t\t\tD = D < 0 ? 0 : D;\n\t\t\t\t\tvar R = sqrt(D);\n\t\t\t\t\tif (b >= MACHINE_EPSILON && b <= MACHINE_EPSILON) {\n\t\t\t\t\t\tx1 = abs(a) >= abs(c) ? R / a : -c / R;\n\t\t\t\t\t\tx2 = -x1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar q = -(b + (b < 0 ? -1 : 1) * R);\n\t\t\t\t\t\tx1 = q / a;\n\t\t\t\t\t\tx2 = c / q;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isFinite(x1) && (min == null || x1 >= min && x1 <= max))\n\t\t\t\troots[count++] = x1;\n\t\t\tif (x2 !== x1\n\t\t\t\t\t&& isFinite(x2) && (min == null || x2 >= min && x2 <= max))\n\t\t\t\troots[count++] = x2;\n\t\t\treturn count;\n\t\t},\n\n\t\tsolveCubic: function(a, b, c, d, roots, min, max) {\n\t\t\tvar count = 0,\n\t\t\t\tx, b1, c2;\n\t\t\tif (abs(a) < EPSILON) {\n\t\t\t\ta = b;\n\t\t\t\tb1 = c;\n\t\t\t\tc2 = d;\n\t\t\t\tx = Infinity;\n\t\t\t} else if (abs(d) < EPSILON) {\n\t\t\t\tb1 = b;\n\t\t\t\tc2 = c;\n\t\t\t\tx = 0;\n\t\t\t} else {\n\t\t\t\tvar ec = 1 + MACHINE_EPSILON,\n\t\t\t\t\tx0, q, qd, t, r, s, tmp;\n\t\t\t\tx = -(b / a) / 3;\n\t\t\t\ttmp = a * x,\n\t\t\t\tb1 = tmp + b,\n\t\t\t\tc2 = b1 * x + c,\n\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\tq = c2 * x + d;\n\t\t\t\tt = q /a;\n\t\t\t\tr = pow(abs(t), 1/3);\n\t\t\t\ts = t < 0 ? -1 : 1;\n\t\t\t\tt = -qd / a;\n\t\t\t\tr = t > 0 ? 1.3247179572 * Math.max(r, sqrt(t)) : r;\n\t\t\t\tx0 = x - s * r;\n\t\t\t\tif (x0 !== x) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\ttmp = a * x,\n\t\t\t\t\t\tb1 = tmp + b,\n\t\t\t\t\t\tc2 = b1 * x + c,\n\t\t\t\t\t\tqd = (tmp + b1) * x + c2,\n\t\t\t\t\t\tq = c2 * x + d;\n\t\t\t\t\t\tx0 = qd === 0 ? x : x - q / qd / ec;\n\t\t\t\t\t\tif (x0 === x) {\n\t\t\t\t\t\t\tx = x0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} while (s * x0 > s * x);\n\t\t\t\t\tif (abs(a) * x * x > abs(d / x)) {\n\t\t\t\t\t\tc2 = -d / x;\n\t\t\t\t\t\tb1 = (c2 - c) / x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar count = Numerical.solveQuadratic(a, b1, c2, roots, min, max);\n\t\t\tif (isFinite(x) && (count === 0 || x !== roots[count - 1])\n\t\t\t\t\t&& (min == null || x >= min && x <= max))\n\t\t\t\troots[count++] = x;\n\t\t\treturn count;\n\t\t}\n\t};\n};\n\nvar UID = {\n\t_id: 1,\n\t_pools: {},\n\n\tget: function(ctor) {\n\t\tif (ctor) {\n\t\t\tvar name = ctor._class,\n\t\t\t\tpool = this._pools[name];\n\t\t\tif (!pool)\n\t\t\t\tpool = this._pools[name] = { _id: 1 };\n\t\t\treturn pool._id++;\n\t\t} else {\n\t\t\treturn this._id++;\n\t\t}\n\t}\n};\n\nvar Point = Base.extend({\n\t_class: 'Point',\n\t_readIndex: true,\n\n\tinitialize: function Point(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasY = typeof arg1 === 'number';\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = hasY ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasY ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.x = arg0.x;\n\t\t\t\tthis.y = arg0.y;\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.x = arg0.width;\n\t\t\t\tthis.y = arg0.height;\n\t\t\t} else if (arg0.angle != null) {\n\t\t\t\tthis.x = arg0.length;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.setAngle(arg0.angle);\n\t\t\t} else {\n\t\t\t\tthis.x = this.y = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\treturn this;\n\t},\n\n\tequals: function(point) {\n\t\treturn this === point || point\n\t\t\t\t&& (this.x === point.x && this.y === point.y\n\t\t\t\t\t|| Array.isArray(point)\n\t\t\t\t\t\t&& this.x === point[0] && this.y === point[1])\n\t\t\t\t|| false;\n\t},\n\n\tclone: function() {\n\t\treturn new Point(this.x, this.y);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x) + ', y: ' + f.number(this.y) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x), f.number(this.y)];\n\t},\n\n\tgetLength: function() {\n\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t},\n\n\tsetLength: function(length) {\n\t\tif (this.isZero()) {\n\t\t\tvar angle = this._angle || 0;\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t} else {\n\t\t\tvar scale = length / this.getLength();\n\t\t\tif (Numerical.isZero(scale))\n\t\t\t\tthis.getAngle();\n\t\t\tthis.set(\n\t\t\t\tthis.x * scale,\n\t\t\t\tthis.y * scale\n\t\t\t);\n\t\t}\n\t},\n\tgetAngle: function() {\n\t\treturn this.getAngleInRadians.apply(this, arguments) * 180 / Math.PI;\n\t},\n\n\tsetAngle: function(angle) {\n\t\tthis.setAngleInRadians.call(this, angle * Math.PI / 180);\n\t},\n\n\tgetAngleInDegrees: '#getAngle',\n\tsetAngleInDegrees: '#setAngle',\n\n\tgetAngleInRadians: function() {\n\t\tif (!arguments.length) {\n\t\t\treturn this.isZero()\n\t\t\t\t\t? this._angle || 0\n\t\t\t\t\t: this._angle = Math.atan2(this.y, this.x);\n\t\t} else {\n\t\t\tvar point = Point.read(arguments),\n\t\t\t\tdiv = this.getLength() * point.getLength();\n\t\t\tif (Numerical.isZero(div)) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\tvar a = this.dot(point) / div;\n\t\t\t\treturn Math.acos(a < -1 ? -1 : a > 1 ? 1 : a);\n\t\t\t}\n\t\t}\n\t},\n\n\tsetAngleInRadians: function(angle) {\n\t\tthis._angle = angle;\n\t\tif (!this.isZero()) {\n\t\t\tvar length = this.getLength();\n\t\t\tthis.set(\n\t\t\t\tMath.cos(angle) * length,\n\t\t\t\tMath.sin(angle) * length\n\t\t\t);\n\t\t}\n\t},\n\n\tgetQuadrant: function() {\n\t\treturn this.x >= 0 ? this.y >= 0 ? 1 : 4 : this.y >= 0 ? 2 : 3;\n\t}\n}, {\n\tbeans: false,\n\n\tgetDirectedAngle: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Math.atan2(this.cross(point), this.dot(point)) * 180 / Math.PI;\n\t},\n\n\tgetDistance: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x - this.x,\n\t\t\ty = point.y - this.y,\n\t\t\td = x * x + y * y,\n\t\t\tsquared = Base.read(arguments);\n\t\treturn squared ? d : Math.sqrt(d);\n\t},\n\n\tnormalize: function(length) {\n\t\tif (length === undefined)\n\t\t\tlength = 1;\n\t\tvar current = this.getLength(),\n\t\t\tscale = current !== 0 ? length / current : 0,\n\t\t\tpoint = new Point(this.x * scale, this.y * scale);\n\t\tif (scale >= 0)\n\t\t\tpoint._angle = this._angle;\n\t\treturn point;\n\t},\n\n\trotate: function(angle, center) {\n\t\tif (angle === 0)\n\t\t\treturn this.clone();\n\t\tangle = angle * Math.PI / 180;\n\t\tvar point = center ? this.subtract(center) : this,\n\t\t\ts = Math.sin(angle),\n\t\t\tc = Math.cos(angle);\n\t\tpoint = new Point(\n\t\t\tpoint.x * c - point.y * s,\n\t\t\tpoint.x * s + point.y * c\n\t\t);\n\t\treturn center ? point.add(center) : point;\n\t},\n\n\ttransform: function(matrix) {\n\t\treturn matrix ? matrix._transformPoint(this) : this;\n\t},\n\n\tadd: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x + point.x, this.y + point.y);\n\t},\n\n\tsubtract: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x - point.x, this.y - point.y);\n\t},\n\n\tmultiply: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x * point.x, this.y * point.y);\n\t},\n\n\tdivide: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x / point.x, this.y / point.y);\n\t},\n\n\tmodulo: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn new Point(this.x % point.x, this.y % point.y);\n\t},\n\n\tnegate: function() {\n\t\treturn new Point(-this.x, -this.y);\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this);\n\t},\n\n\tisClose: function(point, tolerance) {\n\t\treturn this.getDistance(point) < tolerance;\n\t},\n\n\tisCollinear: function(point) {\n\t\treturn Math.abs(this.cross(point)) < 0.000001;\n\t},\n\n\tisColinear: '#isCollinear',\n\n\tisOrthogonal: function(point) {\n\t\treturn Math.abs(this.dot(point)) < 0.000001;\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.x) && Numerical.isZero(this.y);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.x) || isNaN(this.y);\n\t},\n\n\tdot: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.x + this.y * point.y;\n\t},\n\n\tcross: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn this.x * point.y - this.y * point.x;\n\t},\n\n\tproject: function() {\n\t\tvar point = Point.read(arguments);\n\t\tif (point.isZero()) {\n\t\t\treturn new Point(0, 0);\n\t\t} else {\n\t\t\tvar scale = this.dot(point) / point.dot(point);\n\t\t\treturn new Point(\n\t\t\t\tpoint.x * scale,\n\t\t\t\tpoint.y * scale\n\t\t\t);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tmin: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.min(point1.x, point2.x),\n\t\t\t\tMath.min(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\tmax: function() {\n\t\t\tvar point1 = Point.read(arguments),\n\t\t\t\tpoint2 = Point.read(arguments);\n\t\t\treturn new Point(\n\t\t\t\tMath.max(point1.x, point2.x),\n\t\t\t\tMath.max(point1.y, point2.y)\n\t\t\t);\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Point(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Point(op(this.x), op(this.y));\n\t};\n}, {}));\n\nvar LinkedPoint = Point.extend({\n\tinitialize: function Point(x, y, owner, setter) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Size = Base.extend({\n\t_class: 'Size',\n\t_readIndex: true,\n\n\tinitialize: function Size(arg0, arg1) {\n\t\tvar type = typeof arg0;\n\t\tif (type === 'number') {\n\t\t\tvar hasHeight = typeof arg1 === 'number';\n\t\t\tthis.width = arg0;\n\t\t\tthis.height = hasHeight ? arg1 : arg0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = hasHeight ? 2 : 1;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.width = this.height = 0;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = arg0 === null ? 1 : 0;\n\t\t} else {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.width = arg0[0];\n\t\t\t\tthis.height = arg0.length > 1 ? arg0[1] : arg0[0];\n\t\t\t} else if (arg0.width != null) {\n\t\t\t\tthis.width = arg0.width;\n\t\t\t\tthis.height = arg0.height;\n\t\t\t} else if (arg0.x != null) {\n\t\t\t\tthis.width = arg0.x;\n\t\t\t\tthis.height = arg0.y;\n\t\t\t} else {\n\t\t\t\tthis.width = this.height = 0;\n\t\t\t\tif (this.__read)\n\t\t\t\t\tthis.__read = 0;\n\t\t\t}\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = 1;\n\t\t}\n\t},\n\n\tset: function(width, height) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tequals: function(size) {\n\t\treturn size === this || size && (this.width === size.width\n\t\t\t\t&& this.height === size.height\n\t\t\t\t|| Array.isArray(size) && this.width === size[0]\n\t\t\t\t\t&& this.height === size[1]) || false;\n\t},\n\n\tclone: function() {\n\t\treturn new Size(this.width, this.height);\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height) + ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tadd: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width + size.width, this.height + size.height);\n\t},\n\n\tsubtract: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width - size.width, this.height - size.height);\n\t},\n\n\tmultiply: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width * size.width, this.height * size.height);\n\t},\n\n\tdivide: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width / size.width, this.height / size.height);\n\t},\n\n\tmodulo: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn new Size(this.width % size.width, this.height % size.height);\n\t},\n\n\tnegate: function() {\n\t\treturn new Size(-this.width, -this.height);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this.width) && Numerical.isZero(this.height);\n\t},\n\n\tisNaN: function() {\n\t\treturn isNaN(this.width) || isNaN(this.height);\n\t},\n\n\tstatics: {\n\t\tmin: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.min(size1.width, size2.width),\n\t\t\t\tMath.min(size1.height, size2.height));\n\t\t},\n\n\t\tmax: function(size1, size2) {\n\t\t\treturn new Size(\n\t\t\t\tMath.max(size1.width, size2.width),\n\t\t\t\tMath.max(size1.height, size2.height));\n\t\t},\n\n\t\trandom: function() {\n\t\t\treturn new Size(Math.random(), Math.random());\n\t\t}\n\t}\n}, Base.each(['round', 'ceil', 'floor', 'abs'], function(name) {\n\tvar op = Math[name];\n\tthis[name] = function() {\n\t\treturn new Size(op(this.width), op(this.height));\n\t};\n}, {}));\n\nvar LinkedSize = Size.extend({\n\tinitialize: function Size(width, height, owner, setter) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(width, height, _dontNotify) {\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._width;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis._width = width;\n\t\tthis._owner[this._setter](this);\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._height;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis._height = height;\n\t\tthis._owner[this._setter](this);\n\t}\n});\n\nvar Rectangle = Base.extend({\n\t_class: 'Rectangle',\n\t_readIndex: true,\n\tbeans: true,\n\n\tinitialize: function Rectangle(arg0, arg1, arg2, arg3) {\n\t\tvar type = typeof arg0,\n\t\t\tread = 0;\n\t\tif (type === 'number') {\n\t\t\tthis.x = arg0;\n\t\t\tthis.y = arg1;\n\t\t\tthis.width = arg2;\n\t\t\tthis.height = arg3;\n\t\t\tread = 4;\n\t\t} else if (type === 'undefined' || arg0 === null) {\n\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\tread = arg0 === null ? 1 : 0;\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (Array.isArray(arg0)) {\n\t\t\t\tthis.x = arg0[0];\n\t\t\t\tthis.y = arg0[1];\n\t\t\t\tthis.width = arg0[2];\n\t\t\t\tthis.height = arg0[3];\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.x !== undefined || arg0.width !== undefined) {\n\t\t\t\tthis.x = arg0.x || 0;\n\t\t\t\tthis.y = arg0.y || 0;\n\t\t\t\tthis.width = arg0.width || 0;\n\t\t\t\tthis.height = arg0.height || 0;\n\t\t\t\tread = 1;\n\t\t\t} else if (arg0.from === undefined && arg0.to === undefined) {\n\t\t\t\tthis.x = this.y = this.width = this.height = 0;\n\t\t\t\tthis._set(arg0);\n\t\t\t\tread = 1;\n\t\t\t}\n\t\t}\n\t\tif (!read) {\n\t\t\tvar point = Point.readNamed(arguments, 'from'),\n\t\t\t\tnext = Base.peek(arguments);\n\t\t\tthis.x = point.x;\n\t\t\tthis.y = point.y;\n\t\t\tif (next && next.x !== undefined || Base.hasNamed(arguments, 'to')) {\n\t\t\t\tvar to = Point.readNamed(arguments, 'to');\n\t\t\t\tthis.width = to.x - point.x;\n\t\t\t\tthis.height = to.y - point.y;\n\t\t\t\tif (this.width < 0) {\n\t\t\t\t\tthis.x = to.x;\n\t\t\t\t\tthis.width = -this.width;\n\t\t\t\t}\n\t\t\t\tif (this.height < 0) {\n\t\t\t\t\tthis.y = to.y;\n\t\t\t\t\tthis.height = -this.height;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar size = Size.read(arguments);\n\t\t\t\tthis.width = size.width;\n\t\t\t\tthis.height = size.height;\n\t\t\t}\n\t\t\tread = arguments.__index;\n\t\t}\n\t\tif (this.__read)\n\t\t\tthis.__read = read;\n\t},\n\n\tset: function(x, y, width, height) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\treturn this;\n\t},\n\n\tclone: function() {\n\t\treturn new Rectangle(this.x, this.y, this.width, this.height);\n\t},\n\n\tequals: function(rect) {\n\t\tvar rt = Base.isPlainValue(rect)\n\t\t\t\t? Rectangle.read(arguments)\n\t\t\t\t: rect;\n\t\treturn rt === this\n\t\t\t\t|| rt && this.x === rt.x && this.y === rt.y\n\t\t\t\t\t&& this.width === rt.width && this.height === rt.height\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '{ x: ' + f.number(this.x)\n\t\t\t\t+ ', y: ' + f.number(this.y)\n\t\t\t\t+ ', width: ' + f.number(this.width)\n\t\t\t\t+ ', height: ' + f.number(this.height)\n\t\t\t\t+ ' }';\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter;\n\t\treturn [f.number(this.x),\n\t\t\t\tf.number(this.y),\n\t\t\t\tf.number(this.width),\n\t\t\t\tf.number(this.height)];\n\t},\n\n\tgetPoint: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.x, this.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.x = point.x;\n\t\tthis.y = point.y;\n\t},\n\n\tgetSize: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Size : LinkedSize;\n\t\treturn new ctor(this.width, this.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (this._fixX)\n\t\t\tthis.x += (this.width - size.width) * this._fixX;\n\t\tif (this._fixY)\n\t\t\tthis.y += (this.height - size.height) * this._fixY;\n\t\tthis.width = size.width;\n\t\tthis.height = size.height;\n\t\tthis._fixW = 1;\n\t\tthis._fixH = 1;\n\t},\n\n\tgetLeft: function() {\n\t\treturn this.x;\n\t},\n\n\tsetLeft: function(left) {\n\t\tif (!this._fixW)\n\t\t\tthis.width -= left - this.x;\n\t\tthis.x = left;\n\t\tthis._fixX = 0;\n\t},\n\n\tgetTop: function() {\n\t\treturn this.y;\n\t},\n\n\tsetTop: function(top) {\n\t\tif (!this._fixH)\n\t\t\tthis.height -= top - this.y;\n\t\tthis.y = top;\n\t\tthis._fixY = 0;\n\t},\n\n\tgetRight: function() {\n\t\treturn this.x + this.width;\n\t},\n\n\tsetRight: function(right) {\n\t\tif (this._fixX !== undefined && this._fixX !== 1)\n\t\t\tthis._fixW = 0;\n\t\tif (this._fixW)\n\t\t\tthis.x = right - this.width;\n\t\telse\n\t\t\tthis.width = right - this.x;\n\t\tthis._fixX = 1;\n\t},\n\n\tgetBottom: function() {\n\t\treturn this.y + this.height;\n\t},\n\n\tsetBottom: function(bottom) {\n\t\tif (this._fixY !== undefined && this._fixY !== 1)\n\t\t\tthis._fixH = 0;\n\t\tif (this._fixH)\n\t\t\tthis.y = bottom - this.height;\n\t\telse\n\t\t\tthis.height = bottom - this.y;\n\t\tthis._fixY = 1;\n\t},\n\n\tgetCenterX: function() {\n\t\treturn this.x + this.width * 0.5;\n\t},\n\n\tsetCenterX: function(x) {\n\t\tthis.x = x - this.width * 0.5;\n\t\tthis._fixX = 0.5;\n\t},\n\n\tgetCenterY: function() {\n\t\treturn this.y + this.height * 0.5;\n\t},\n\n\tsetCenterY: function(y) {\n\t\tthis.y = y - this.height * 0.5;\n\t\tthis._fixY = 0.5;\n\t},\n\n\tgetCenter: function(_dontLink) {\n\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\treturn new ctor(this.getCenterX(), this.getCenterY(), this, 'setCenter');\n\t},\n\n\tsetCenter: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.setCenterX(point.x);\n\t\tthis.setCenterY(point.y);\n\t\treturn this;\n\t},\n\n\tgetArea: function() {\n\t\treturn this.width * this.height;\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.width === 0 || this.height === 0;\n\t},\n\n\tcontains: function(arg) {\n\t\treturn arg && arg.width !== undefined\n\t\t\t\t|| (Array.isArray(arg) ? arg : arguments).length == 4\n\t\t\t\t? this._containsRectangle(Rectangle.read(arguments))\n\t\t\t\t: this._containsPoint(Point.read(arguments));\n\t},\n\n\t_containsPoint: function(point) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x <= this.x + this.width\n\t\t\t\t&& y <= this.y + this.height;\n\t},\n\n\t_containsRectangle: function(rect) {\n\t\tvar x = rect.x,\n\t\t\ty = rect.y;\n\t\treturn x >= this.x && y >= this.y\n\t\t\t\t&& x + rect.width <= this.x + this.width\n\t\t\t\t&& y + rect.height <= this.y + this.height;\n\t},\n\n\tintersects: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width > this.x\n\t\t\t\t&& rect.y + rect.height > this.y\n\t\t\t\t&& rect.x < this.x + this.width\n\t\t\t\t&& rect.y < this.y + this.height;\n\t},\n\n\ttouches: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\treturn rect.x + rect.width >= this.x\n\t\t\t\t&& rect.y + rect.height >= this.y\n\t\t\t\t&& rect.x <= this.x + this.width\n\t\t\t\t&& rect.y <= this.y + this.height;\n\t},\n\n\tintersect: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.max(this.x, rect.x),\n\t\t\ty1 = Math.max(this.y, rect.y),\n\t\t\tx2 = Math.min(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.min(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tunite: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tx1 = Math.min(this.x, rect.x),\n\t\t\ty1 = Math.min(this.y, rect.y),\n\t\t\tx2 = Math.max(this.x + this.width, rect.x + rect.width),\n\t\t\ty2 = Math.max(this.y + this.height, rect.y + rect.height);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tinclude: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar x1 = Math.min(this.x, point.x),\n\t\t\ty1 = Math.min(this.y, point.y),\n\t\t\tx2 = Math.max(this.x + this.width, point.x),\n\t\t\ty2 = Math.max(this.y + this.height, point.y);\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\texpand: function() {\n\t\tvar amount = Size.read(arguments),\n\t\t\thor = amount.width,\n\t\t\tver = amount.height;\n\t\treturn new Rectangle(this.x - hor / 2, this.y - ver / 2,\n\t\t\t\tthis.width + hor, this.height + ver);\n\t},\n\n\tscale: function(hor, ver) {\n\t\treturn this.expand(this.width * hor - this.width,\n\t\t\t\tthis.height * (ver === undefined ? hor : ver) - this.height);\n\t}\n}, Base.each([\n\t\t['Top', 'Left'], ['Top', 'Right'],\n\t\t['Bottom', 'Left'], ['Bottom', 'Right'],\n\t\t['Left', 'Center'], ['Top', 'Center'],\n\t\t['Right', 'Center'], ['Bottom', 'Center']\n\t],\n\tfunction(parts, index) {\n\t\tvar part = parts.join('');\n\t\tvar xFirst = /^[RL]/.test(part);\n\t\tif (index >= 4)\n\t\t\tparts[1] += xFirst ? 'Y' : 'X';\n\t\tvar x = parts[xFirst ? 0 : 1],\n\t\t\ty = parts[xFirst ? 1 : 0],\n\t\t\tgetX = 'get' + x,\n\t\t\tgetY = 'get' + y,\n\t\t\tsetX = 'set' + x,\n\t\t\tsetY = 'set' + y,\n\t\t\tget = 'get' + part,\n\t\t\tset = 'set' + part;\n\t\tthis[get] = function(_dontLink) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\treturn new ctor(this[getX](), this[getY](), this, set);\n\t\t};\n\t\tthis[set] = function() {\n\t\t\tvar point = Point.read(arguments);\n\t\t\tthis[setX](point.x);\n\t\t\tthis[setY](point.y);\n\t\t};\n\t}, {\n\t\tbeans: true\n\t}\n));\n\nvar LinkedRectangle = Rectangle.extend({\n\tinitialize: function Rectangle(x, y, width, height, owner, setter) {\n\t\tthis.set(x, y, width, height, true);\n\t\tthis._owner = owner;\n\t\tthis._setter = setter;\n\t},\n\n\tset: function(x, y, width, height, _dontNotify) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t\tif (!_dontNotify)\n\t\t\tthis._owner[this._setter](this);\n\t\treturn this;\n\t}\n}, new function() {\n\tvar proto = Rectangle.prototype;\n\n\treturn Base.each(['x', 'y', 'width', 'height'], function(key) {\n\t\tvar part = Base.capitalize(key);\n\t\tvar internal = '_' + key;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[internal];\n\t\t};\n\n\t\tthis['set' + part] = function(value) {\n\t\t\tthis[internal] = value;\n\t\t\tif (!this._dontNotify)\n\t\t\t\tthis._owner[this._setter](this);\n\t\t};\n\t}, Base.each(['Point', 'Size', 'Center',\n\t\t\t'Left', 'Top', 'Right', 'Bottom', 'CenterX', 'CenterY',\n\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'],\n\t\tfunction(key) {\n\t\t\tvar name = 'set' + key;\n\t\t\tthis[name] = function() {\n\t\t\t\tthis._dontNotify = true;\n\t\t\t\tproto[name].apply(this, arguments);\n\t\t\t\tthis._dontNotify = false;\n\t\t\t\tthis._owner[this._setter](this);\n\t\t\t};\n\t\t}, {\n\t\t\tisSelected: function() {\n\t\t\t\treturn this._owner._boundsSelected;\n\t\t\t},\n\n\t\t\tsetSelected: function(selected) {\n\t\t\t\tvar owner = this._owner;\n\t\t\t\tif (owner.setSelected) {\n\t\t\t\t\towner._boundsSelected = selected;\n\t\t\t\t\towner.setSelected(selected || owner._selectedSegmentState > 0);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t);\n});\n\nvar Matrix = Base.extend({\n\t_class: 'Matrix',\n\n\tinitialize: function Matrix(arg) {\n\t\tvar count = arguments.length,\n\t\t\tok = true;\n\t\tif (count === 6) {\n\t\t\tthis.set.apply(this, arguments);\n\t\t} else if (count === 1) {\n\t\t\tif (arg instanceof Matrix) {\n\t\t\t\tthis.set(arg._a, arg._c, arg._b, arg._d, arg._tx, arg._ty);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tthis.set.apply(this, arg);\n\t\t\t} else {\n\t\t\t\tok = false;\n\t\t\t}\n\t\t} else if (count === 0) {\n\t\t\tthis.reset();\n\t\t} else {\n\t\t\tok = false;\n\t\t}\n\t\tif (!ok)\n\t\t\tthrow new Error('Unsupported matrix parameters');\n\t},\n\n\tset: function(a, c, b, d, tx, ty, _dontNotify) {\n\t\tthis._a = a;\n\t\tthis._c = c;\n\t\tthis._b = b;\n\t\tthis._d = d;\n\t\tthis._tx = tx;\n\t\tthis._ty = ty;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.getValues(), options);\n\t},\n\n\t_changed: function() {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\tif (owner._applyMatrix) {\n\t\t\t\towner.transform(null, true);\n\t\t\t} else {\n\t\t\t\towner._changed(9);\n\t\t\t}\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d,\n\t\t\t\tthis._tx, this._ty);\n\t},\n\n\tequals: function(mx) {\n\t\treturn mx === this || mx && this._a === mx._a && this._b === mx._b\n\t\t\t\t&& this._c === mx._c && this._d === mx._d\n\t\t\t\t&& this._tx === mx._tx && this._ty === mx._ty\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar f = Formatter.instance;\n\t\treturn '[[' + [f.number(this._a), f.number(this._b),\n\t\t\t\t\tf.number(this._tx)].join(', ') + '], ['\n\t\t\t\t+ [f.number(this._c), f.number(this._d),\n\t\t\t\t\tf.number(this._ty)].join(', ') + ']]';\n\t},\n\n\treset: function(_dontNotify) {\n\t\tthis._a = this._d = 1;\n\t\tthis._c = this._b = this._tx = this._ty = 0;\n\t\tif (!_dontNotify)\n\t\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tapply: function(recursively, _setApplyMatrix) {\n\t\tvar owner = this._owner;\n\t\tif (owner) {\n\t\t\towner.transform(null, true, Base.pick(recursively, true),\n\t\t\t\t\t_setApplyMatrix);\n\t\t\treturn this.isIdentity();\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tx = point.x,\n\t\t\ty = point.y;\n\t\tthis._tx += x * this._a + y * this._b;\n\t\tthis._ty += x * this._c + y * this._d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tscale: function() {\n\t\tvar scale = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tthis._a *= scale.x;\n\t\tthis._c *= scale.x;\n\t\tthis._b *= scale.y;\n\t\tthis._d *= scale.y;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\trotate: function(angle ) {\n\t\tangle *= Math.PI / 180;\n\t\tvar center = Point.read(arguments, 1),\n\t\t\tx = center.x,\n\t\t\ty = center.y,\n\t\t\tcos = Math.cos(angle),\n\t\t\tsin = Math.sin(angle),\n\t\t\ttx = x - x * cos + y * sin,\n\t\t\tty = y - x * sin - y * cos,\n\t\t\ta = this._a,\n\t\t\tb = this._b,\n\t\t\tc = this._c,\n\t\t\td = this._d;\n\t\tthis._a = cos * a + sin * b;\n\t\tthis._b = -sin * a + cos * b;\n\t\tthis._c = cos * c + sin * d;\n\t\tthis._d = -sin * c + cos * d;\n\t\tthis._tx += tx * a + ty * b;\n\t\tthis._ty += tx * c + ty * d;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tshear: function() {\n\t\tvar shear = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\tif (center)\n\t\t\tthis.translate(center);\n\t\tvar a = this._a,\n\t\t\tc = this._c;\n\t\tthis._a += shear.y * this._b;\n\t\tthis._c += shear.y * this._d;\n\t\tthis._b += shear.x * a;\n\t\tthis._d += shear.x * c;\n\t\tif (center)\n\t\t\tthis.translate(center.negate());\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tskew: function() {\n\t\tvar skew = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true }),\n\t\t\ttoRadians = Math.PI / 180,\n\t\t\tshear = new Point(Math.tan(skew.x * toRadians),\n\t\t\t\tMath.tan(skew.y * toRadians));\n\t\treturn this.shear(shear, center);\n\t},\n\n\tconcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + c2 * b1;\n\t\tthis._b = b2 * a1 + d2 * b1;\n\t\tthis._c = a2 * c1 + c2 * d1;\n\t\tthis._d = b2 * c1 + d2 * d1;\n\t\tthis._tx += tx2 * a1 + ty2 * b1;\n\t\tthis._ty += tx2 * c1 + ty2 * d1;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tpreConcatenate: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\tthis._a = a2 * a1 + b2 * c1;\n\t\tthis._b = a2 * b1 + b2 * d1;\n\t\tthis._c = c2 * a1 + d2 * c1;\n\t\tthis._d = c2 * b1 + d2 * d1;\n\t\tthis._tx = a2 * tx1 + b2 * ty1 + tx2;\n\t\tthis._ty = c2 * tx1 + d2 * ty1 + ty2;\n\t\tthis._changed();\n\t\treturn this;\n\t},\n\n\tchain: function(mx) {\n\t\tvar a1 = this._a,\n\t\t\tb1 = this._b,\n\t\t\tc1 = this._c,\n\t\t\td1 = this._d,\n\t\t\ttx1 = this._tx,\n\t\t\tty1 = this._ty,\n\t\t\ta2 = mx._a,\n\t\t\tb2 = mx._b,\n\t\t\tc2 = mx._c,\n\t\t\td2 = mx._d,\n\t\t\ttx2 = mx._tx,\n\t\t\tty2 = mx._ty;\n\t\treturn new Matrix(\n\t\t\t\ta2 * a1 + c2 * b1,\n\t\t\t\ta2 * c1 + c2 * d1,\n\t\t\t\tb2 * a1 + d2 * b1,\n\t\t\t\tb2 * c1 + d2 * d1,\n\t\t\t\ttx1 + tx2 * a1 + ty2 * b1,\n\t\t\t\tty1 + tx2 * c1 + ty2 * d1);\n\t},\n\n\tisIdentity: function() {\n\t\treturn this._a === 1 && this._c === 0 && this._b === 0 && this._d === 1\n\t\t\t\t&& this._tx === 0 && this._ty === 0;\n\t},\n\n\torNullIfIdentity: function() {\n\t\treturn this.isIdentity() ? null : this;\n\t},\n\n\tisInvertible: function() {\n\t\treturn !!this._getDeterminant();\n\t},\n\n\tisSingular: function() {\n\t\treturn !this._getDeterminant();\n\t},\n\n\ttransform: function( src, dst, count) {\n\t\treturn arguments.length < 3\n\t\t\t? this._transformPoint(Point.read(arguments))\n\t\t\t: this._transformCoordinates(src, dst, count);\n\t},\n\n\t_transformPoint: function(point, dest, _dontNotify) {\n\t\tvar x = point.x,\n\t\t\ty = point.y;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\tx * this._a + y * this._b + this._tx,\n\t\t\tx * this._c + y * this._d + this._ty,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\t_transformCoordinates: function(src, dst, count) {\n\t\tvar i = 0,\n\t\t\tj = 0,\n\t\t\tmax = 2 * count;\n\t\twhile (i < max) {\n\t\t\tvar x = src[i++],\n\t\t\t\ty = src[i++];\n\t\t\tdst[j++] = x * this._a + y * this._b + this._tx;\n\t\t\tdst[j++] = x * this._c + y * this._d + this._ty;\n\t\t}\n\t\treturn dst;\n\t},\n\n\t_transformCorners: function(rect) {\n\t\tvar x1 = rect.x,\n\t\t\ty1 = rect.y,\n\t\t\tx2 = x1 + rect.width,\n\t\t\ty2 = y1 + rect.height,\n\t\t\tcoords = [ x1, y1, x2, y1, x2, y2, x1, y2 ];\n\t\treturn this._transformCoordinates(coords, coords, 4);\n\t},\n\n\t_transformBounds: function(bounds, dest, _dontNotify) {\n\t\tvar coords = this._transformCorners(bounds),\n\t\t\tmin = coords.slice(0, 2),\n\t\t\tmax = coords.slice();\n\t\tfor (var i = 2; i < 8; i++) {\n\t\t\tvar val = coords[i],\n\t\t\t\tj = i & 1;\n\t\t\tif (val < min[j])\n\t\t\t\tmin[j] = val;\n\t\t\telse if (val > max[j])\n\t\t\t\tmax[j] = val;\n\t\t}\n\t\tif (!dest)\n\t\t\tdest = new Rectangle();\n\t\treturn dest.set(min[0], min[1], max[0] - min[0], max[1] - min[1],\n\t\t\t\t_dontNotify);\n\t},\n\n\tinverseTransform: function() {\n\t\treturn this._inverseTransform(Point.read(arguments));\n\t},\n\n\t_getDeterminant: function() {\n\t\tvar det = this._a * this._d - this._b * this._c;\n\t\treturn isFinite(det) && !Numerical.isZero(det)\n\t\t\t\t&& isFinite(this._tx) && isFinite(this._ty)\n\t\t\t\t? det : null;\n\t},\n\n\t_inverseTransform: function(point, dest, _dontNotify) {\n\t\tvar det = this._getDeterminant();\n\t\tif (!det)\n\t\t\treturn null;\n\t\tvar x = point.x - this._tx,\n\t\t\ty = point.y - this._ty;\n\t\tif (!dest)\n\t\t\tdest = new Point();\n\t\treturn dest.set(\n\t\t\t(x * this._d - y * this._b) / det,\n\t\t\t(y * this._a - x * this._c) / det,\n\t\t\t_dontNotify\n\t\t);\n\t},\n\n\tdecompose: function() {\n\t\tvar a = this._a, b = this._b, c = this._c, d = this._d;\n\t\tif (Numerical.isZero(a * d - b * c))\n\t\t\treturn null;\n\n\t\tvar scaleX = Math.sqrt(a * a + b * b);\n\t\ta /= scaleX;\n\t\tb /= scaleX;\n\n\t\tvar shear = a * c + b * d;\n\t\tc -= a * shear;\n\t\td -= b * shear;\n\n\t\tvar scaleY = Math.sqrt(c * c + d * d);\n\t\tc /= scaleY;\n\t\td /= scaleY;\n\t\tshear /= scaleY;\n\n\t\tif (a * d < b * c) {\n\t\t\ta = -a;\n\t\t\tb = -b;\n\t\t\tshear = -shear;\n\t\t\tscaleX = -scaleX;\n\t\t}\n\n\t\treturn {\n\t\t\tscaling: new Point(scaleX, scaleY),\n\t\t\trotation: -Math.atan2(b, a) * 180 / Math.PI,\n\t\t\tshearing: shear\n\t\t};\n\t},\n\n\tgetValues: function() {\n\t\treturn [ this._a, this._c, this._b, this._d, this._tx, this._ty ];\n\t},\n\n\tgetTranslation: function() {\n\t\treturn new Point(this._tx, this._ty);\n\t},\n\n\tgetScaling: function() {\n\t\treturn (this.decompose() || {}).scaling;\n\t},\n\n\tgetRotation: function() {\n\t\treturn (this.decompose() || {}).rotation;\n\t},\n\n\tinverted: function() {\n\t\tvar det = this._getDeterminant();\n\t\treturn det && new Matrix(\n\t\t\t\tthis._d / det,\n\t\t\t\t-this._c / det,\n\t\t\t\t-this._b / det,\n\t\t\t\tthis._a / det,\n\t\t\t\t(this._b * this._ty - this._d * this._tx) / det,\n\t\t\t\t(this._c * this._tx - this._a * this._ty) / det);\n\t},\n\n\tshiftless: function() {\n\t\treturn new Matrix(this._a, this._c, this._b, this._d, 0, 0);\n\t},\n\n\tapplyToContext: function(ctx) {\n\t\tctx.transform(this._a, this._c, this._b, this._d, this._tx, this._ty);\n\t}\n}, Base.each(['a', 'c', 'b', 'd', 'tx', 'ty'], function(name) {\n\tvar part = Base.capitalize(name),\n\t\tprop = '_' + name;\n\tthis['get' + part] = function() {\n\t\treturn this[prop];\n\t};\n\tthis['set' + part] = function(value) {\n\t\tthis[prop] = value;\n\t\tthis._changed();\n\t};\n}, {}));\n\nvar Line = Base.extend({\n\t_class: 'Line',\n\n\tinitialize: function Line(arg0, arg1, arg2, arg3, arg4) {\n\t\tvar asVector = false;\n\t\tif (arguments.length >= 4) {\n\t\t\tthis._px = arg0;\n\t\t\tthis._py = arg1;\n\t\t\tthis._vx = arg2;\n\t\t\tthis._vy = arg3;\n\t\t\tasVector = arg4;\n\t\t} else {\n\t\t\tthis._px = arg0.x;\n\t\t\tthis._py = arg0.y;\n\t\t\tthis._vx = arg1.x;\n\t\t\tthis._vy = arg1.y;\n\t\t\tasVector = arg2;\n\t\t}\n\t\tif (!asVector) {\n\t\t\tthis._vx -= this._px;\n\t\t\tthis._vy -= this._py;\n\t\t}\n\t},\n\n\tgetPoint: function() {\n\t\treturn new Point(this._px, this._py);\n\t},\n\n\tgetVector: function() {\n\t\treturn new Point(this._vx, this._vy);\n\t},\n\n\tgetLength: function() {\n\t\treturn this.getVector().getLength();\n\t},\n\n\tintersect: function(line, isInfinite) {\n\t\treturn Line.intersect(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tline._px, line._py, line._vx, line._vy,\n\t\t\t\ttrue, isInfinite);\n\t},\n\n\tgetSide: function(point) {\n\t\treturn Line.getSide(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true);\n\t},\n\n\tgetDistance: function(point) {\n\t\treturn Math.abs(Line.getSignedDistance(\n\t\t\t\tthis._px, this._py, this._vx, this._vy,\n\t\t\t\tpoint.x, point.y, true));\n\t},\n\n\tstatics: {\n\t\tintersect: function(apx, apy, avx, avy, bpx, bpy, bvx, bvy, asVector,\n\t\t\t\tisInfinite) {\n\t\t\tif (!asVector) {\n\t\t\t\tavx -= apx;\n\t\t\t\tavy -= apy;\n\t\t\t\tbvx -= bpx;\n\t\t\t\tbvy -= bpy;\n\t\t\t}\n\t\t\tvar cross = avx * bvy - avy * bvx;\n\t\t\tif (!Numerical.isZero(cross)) {\n\t\t\t\tvar dx = apx - bpx,\n\t\t\t\t\tdy = apy - bpy,\n\t\t\t\t\tta = (bvx * dy - bvy * dx) / cross,\n\t\t\t\t\ttb = (avx * dy - avy * dx) / cross;\n\t\t\t\tif (isInfinite || 0 <= ta && ta <= 1 && 0 <= tb && tb <= 1)\n\t\t\t\t\treturn new Point(\n\t\t\t\t\t\t\t\tapx + ta * avx,\n\t\t\t\t\t\t\t\tapy + ta * avy);\n\t\t\t}\n\t\t},\n\n\t\tgetSide: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\tvar v2x = x - px,\n\t\t\t\tv2y = y - py,\n\t\t\t\tccw = v2x * vy - v2y * vx;\n\t\t\tif (ccw === 0) {\n\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\tif (ccw > 0) {\n\t\t\t\t\tv2x -= vx;\n\t\t\t\t\tv2y -= vy;\n\t\t\t\t\tccw = v2x * vx + v2y * vy;\n\t\t\t\t\tif (ccw < 0)\n\t\t\t\t\t\tccw = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ccw < 0 ? -1 : ccw > 0 ? 1 : 0;\n\t\t},\n\n\t\tgetSignedDistance: function(px, py, vx, vy, x, y, asVector) {\n\t\t\tif (!asVector) {\n\t\t\t\tvx -= px;\n\t\t\t\tvy -= py;\n\t\t\t}\n\t\t\treturn Numerical.isZero(vx)\n\t\t\t\t\t? vy >= 0 ? px - x : x - px\n\t\t\t\t\t: Numerical.isZero(vy)\n\t\t\t\t\t\t? vx >= 0 ? y - py : py - y\n\t\t\t\t\t\t: (vx * (y - py) - vy * (x - px)) / Math.sqrt(vx * vx + vy * vy);\n\t\t}\n\t}\n});\n\nvar Project = PaperScopeItem.extend({\n\t_class: 'Project',\n\t_list: 'projects',\n\t_reference: 'project',\n\n\tinitialize: function Project(element) {\n\t\tPaperScopeItem.call(this, true);\n\t\tthis.layers = [];\n\t\tthis._activeLayer = null;\n\t\tthis.symbols = [];\n\t\tthis._currentStyle = new Style(null, null, this);\n\t\tthis._view = View.create(this,\n\t\t\t\telement || CanvasProvider.getCanvas(1, 1));\n\t\tthis._selectedItems = {};\n\t\tthis._selectedItemCount = 0;\n\t\tthis._updateVersion = 0;\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize(this.layers, options, true, dictionary);\n\t},\n\n\tclear: function() {\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--)\n\t\t\tthis.layers[i].remove();\n\t\tthis.symbols = [];\n\t},\n\n\tisEmpty: function() {\n\t\treturn this.layers.length === 0;\n\t},\n\n\tremove: function remove() {\n\t\tif (!remove.base.call(this))\n\t\t\treturn false;\n\t\tif (this._view)\n\t\t\tthis._view.remove();\n\t\treturn true;\n\t},\n\n\tgetView: function() {\n\t\treturn this._view;\n\t},\n\n\tgetCurrentStyle: function() {\n\t\treturn this._currentStyle;\n\t},\n\n\tsetCurrentStyle: function(style) {\n\t\tthis._currentStyle.initialize(style);\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tgetOptions: function() {\n\t\treturn this._scope.settings;\n\t},\n\n\tgetActiveLayer: function() {\n\t\treturn this._activeLayer || new Layer({ project: this });\n\t},\n\n\tgetSelectedItems: function() {\n\t\tvar items = [];\n\t\tfor (var id in this._selectedItems) {\n\t\t\tvar item = this._selectedItems[id];\n\t\t\tif (item.isInserted())\n\t\t\t\titems.push(item);\n\t\t}\n\t\treturn items;\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tif (item instanceof Layer) {\n\t\t\titem._remove(false, true);\n\t\t\tBase.splice(this.layers, [item], index, 0);\n\t\t\titem._setProject(this, true);\n\t\t\tif (this._changes)\n\t\t\t\titem._changed(5);\n\t\t\tif (!this._activeLayer)\n\t\t\t\tthis._activeLayer = item;\n\t\t} else if (item instanceof Item) {\n\t\t\t(this._activeLayer\n\t\t\t\t|| this.insertChild(index, new Layer(Item.NO_INSERT)))\n\t\t\t\t\t.insertChild(index, item, _preserve);\n\t\t} else {\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\t_updateSelection: function(item) {\n\t\tvar id = item._id,\n\t\t\tselectedItems = this._selectedItems;\n\t\tif (item._selected) {\n\t\t\tif (selectedItems[id] !== item) {\n\t\t\t\tthis._selectedItemCount++;\n\t\t\t\tselectedItems[id] = item;\n\t\t\t}\n\t\t} else if (selectedItems[id] === item) {\n\t\t\tthis._selectedItemCount--;\n\t\t\tdelete selectedItems[id];\n\t\t}\n\t},\n\n\tselectAll: function() {\n\t\tvar layers = this.layers;\n\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\tlayers[i].setFullySelected(true);\n\t},\n\n\tdeselectAll: function() {\n\t\tvar selectedItems = this._selectedItems;\n\t\tfor (var i in selectedItems)\n\t\t\tselectedItems[i].setFullySelected(false);\n\t},\n\n\thitTest: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\toptions = HitResult.getOptions(Base.read(arguments));\n\t\tfor (var i = this.layers.length - 1; i >= 0; i--) {\n\t\t\tvar res = this.layers[i]._hitTest(point, options);\n\t\t\tif (res) return res;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this.layers, match);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this.layers, match, null, null, true)[0] || null;\n\t},\n\n\timportJSON: function(json) {\n\t\tthis.activate();\n\t\tvar layer = this._activeLayer;\n\t\treturn Base.importJSON(json, layer && layer.isEmpty() && layer);\n\t},\n\n\tdraw: function(ctx, matrix, pixelRatio) {\n\t\tthis._updateVersion++;\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tvar param = new Base({\n\t\t\toffset: new Point(0, 0),\n\t\t\tpixelRatio: pixelRatio,\n\t\t\tviewMatrix: matrix.isIdentity() ? null : matrix,\n\t\t\tmatrices: [new Matrix()],\n\t\t\tupdateMatrix: true\n\t\t});\n\t\tfor (var i = 0, layers = this.layers, l = layers.length; i < l; i++)\n\t\t\tlayers[i].draw(ctx, param);\n\t\tctx.restore();\n\n\t\tif (this._selectedItemCount > 0) {\n\t\t\tctx.save();\n\t\t\tctx.strokeWidth = 1;\n\t\t\tvar items = this._selectedItems,\n\t\t\t\tsize = this._scope.settings.handleSize,\n\t\t\t\tversion = this._updateVersion;\n\t\t\tfor (var id in items)\n\t\t\t\titems[id]._drawSelection(ctx, matrix, size, items, version);\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nvar Symbol = Base.extend({\n\t_class: 'Symbol',\n\n\tinitialize: function Symbol(item, dontCenter) {\n\t\tthis._id = UID.get();\n\t\tthis.project = paper.project;\n\t\tthis.project.symbols.push(this);\n\t\tif (item)\n\t\t\tthis.setDefinition(item, dontCenter);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._class, this._definition],\n\t\t\t\t\toptions, false, dictionary);\n\t\t});\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 8) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (flags & 1) {\n\t\t\tthis.project._needsUpdate = true;\n\t\t}\n\t},\n\n\tgetDefinition: function() {\n\t\treturn this._definition;\n\t},\n\n\tsetDefinition: function(item, _dontCenter) {\n\t\tif (item._parentSymbol)\n\t\t\titem = item.clone();\n\t\tif (this._definition)\n\t\t\tthis._definition._parentSymbol = null;\n\t\tthis._definition = item;\n\t\titem.remove();\n\t\titem.setSelected(false);\n\t\tif (!_dontCenter)\n\t\t\titem.setPosition(new Point());\n\t\titem._parentSymbol = this;\n\t\tthis._changed(9);\n\t},\n\n\tplace: function(position) {\n\t\treturn new PlacedSymbol(this, position);\n\t},\n\n\tclone: function() {\n\t\treturn new Symbol(this._definition.clone(false));\n\t},\n\n\tequals: function(symbol) {\n\t\treturn symbol === this\n\t\t\t\t|| symbol && this.definition.equals(symbol.definition)\n\t\t\t\t|| false;\n\t}\n});\n\nvar Item = Base.extend(Emitter, {\n\tstatics: {\n\t\textend: function extend(src) {\n\t\t\tif (src._serializeFields)\n\t\t\t\tsrc._serializeFields = new Base(\n\t\t\t\t\t\tthis.prototype._serializeFields, src._serializeFields);\n\t\t\treturn extend.base.apply(this, arguments);\n\t\t},\n\n\t\tNO_INSERT: { insert: false }\n\t},\n\n\t_class: 'Item',\n\t_applyMatrix: true,\n\t_canApplyMatrix: true,\n\t_boundsSelected: false,\n\t_selectChildren: false,\n\t_serializeFields: {\n\t\tname: null,\n\t\tapplyMatrix: null,\n\t\tmatrix: new Matrix(),\n\t\tpivot: null,\n\t\tlocked: false,\n\t\tvisible: true,\n\t\tblendMode: 'normal',\n\t\topacity: 1,\n\t\tguide: false,\n\t\tselected: false,\n\t\tclipMask: false,\n\t\tdata: {}\n\t},\n\n\tinitialize: function Item() {\n\t},\n\n\t_initialize: function(props, point) {\n\t\tvar hasProps = props && Base.isPlainObject(props),\n\t\t\tinternal = hasProps && props.internal === true,\n\t\t\tmatrix = this._matrix = new Matrix(),\n\t\t\tproject = hasProps && props.project || paper.project;\n\t\tif (!internal)\n\t\t\tthis._id = UID.get();\n\t\tthis._applyMatrix = this._canApplyMatrix && paper.settings.applyMatrix;\n\t\tif (point)\n\t\t\tmatrix.translate(point);\n\t\tmatrix._owner = this;\n\t\tthis._style = new Style(project._currentStyle, this, project);\n\t\tif (!this._project) {\n\t\t\tif (internal || hasProps && props.insert === false) {\n\t\t\t\tthis._setProject(project);\n\t\t\t} else if (hasProps && props.parent) {\n\t\t\t\tthis.setParent(props.parent);\n\t\t\t} else {\n\t\t\t\t(project._activeLayer || new Layer()).addChild(this);\n\t\t\t}\n\t\t}\n\t\tif (hasProps && props !== Item.NO_INSERT)\n\t\t\tthis._set(props, { insert: true, project: true, parent: true },\n\t\t\t\t\ttrue);\n\t\treturn hasProps;\n\t},\n\n\t_events: new function() {\n\n\t\tvar mouseFlags = {\n\t\t\tmousedown: {\n\t\t\t\tmousedown: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmouseup: {\n\t\t\t\tmouseup: 1,\n\t\t\t\tmousedrag: 1,\n\t\t\t\tclick: 1,\n\t\t\t\tdoubleclick: 1\n\t\t\t},\n\t\t\tmousemove: {\n\t\t\t\tmousedrag: 1,\n\t\t\t\tmousemove: 1,\n\t\t\t\tmouseenter: 1,\n\t\t\t\tmouseleave: 1\n\t\t\t}\n\t\t};\n\n\t\tvar mouseEvent = {\n\t\t\tinstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags) {\n\t\t\t\t\t\tcounters[key] = (counters[key] || 0)\n\t\t\t\t\t\t\t\t+ (mouseFlags[key][type] || 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tuninstall: function(type) {\n\t\t\t\tvar counters = this.getView()._eventCounters;\n\t\t\t\tif (counters) {\n\t\t\t\t\tfor (var key in mouseFlags)\n\t\t\t\t\t\tcounters[key] -= mouseFlags[key][type] || 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\treturn Base.each(['onMouseDown', 'onMouseUp', 'onMouseDrag', 'onClick',\n\t\t\t'onDoubleClick', 'onMouseMove', 'onMouseEnter', 'onMouseLeave'],\n\t\t\tfunction(name) {\n\t\t\t\tthis[name] = mouseEvent;\n\t\t\t}, {\n\t\t\t\tonFrame: {\n\t\t\t\t\tinstall: function() {\n\t\t\t\t\t\tthis._animateItem(true);\n\t\t\t\t\t},\n\t\t\t\t\tuninstall: function() {\n\t\t\t\t\t\tthis._animateItem(false);\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tonLoad: {}\n\t\t\t}\n\t\t);\n\t},\n\n\t_animateItem: function(animate) {\n\t\tthis.getView()._animateItem(this, animate);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\tvar props = {},\n\t\t\tthat = this;\n\n\t\tfunction serialize(fields) {\n\t\t\tfor (var key in fields) {\n\t\t\t\tvar value = that[key];\n\t\t\t\tif (!Base.equals(value, key === 'leading'\n\t\t\t\t\t\t? fields.fontSize * 1.2 : fields[key])) {\n\t\t\t\t\tprops[key] = Base.serialize(value, options,\n\t\t\t\t\t\t\tkey !== 'data', dictionary);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tserialize(this._serializeFields);\n\t\tif (!(this instanceof Group))\n\t\t\tserialize(this._style._defaults);\n\t\treturn [ this._class, props ];\n\t},\n\n\t_changed: function(flags) {\n\t\tvar symbol = this._parentSymbol,\n\t\t\tcacheParent = this._parent || symbol,\n\t\t\tproject = this._project;\n\t\tif (flags & 8) {\n\t\t\tthis._bounds = this._position = this._decomposed =\n\t\t\t\t\tthis._globalMatrix = this._currentPath = undefined;\n\t\t}\n\t\tif (cacheParent\n\t\t\t\t&& (flags & 40)) {\n\t\t\tItem._clearBoundsCache(cacheParent);\n\t\t}\n\t\tif (flags & 2) {\n\t\t\tItem._clearBoundsCache(this);\n\t\t}\n\t\tif (project) {\n\t\t\tif (flags & 1) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\tif (project._changes) {\n\t\t\t\tvar entry = project._changesById[this._id];\n\t\t\t\tif (entry) {\n\t\t\t\t\tentry.flags |= flags;\n\t\t\t\t} else {\n\t\t\t\t\tentry = { item: this, flags: flags };\n\t\t\t\t\tproject._changesById[this._id] = entry;\n\t\t\t\t\tproject._changes.push(entry);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (symbol)\n\t\t\tsymbol._changed(flags);\n\t},\n\n\tset: function(props) {\n\t\tif (props)\n\t\t\tthis._set(props);\n\t\treturn this;\n\t},\n\n\tgetId: function() {\n\t\treturn this._id;\n\t},\n\n\tgetName: function() {\n\t\treturn this._name;\n\t},\n\n\tsetName: function(name, unique) {\n\n\t\tif (this._name)\n\t\t\tthis._removeNamed();\n\t\tif (name === (+name) + '')\n\t\t\tthrow new Error(\n\t\t\t\t\t'Names consisting only of numbers are not supported.');\n\t\tvar parent = this._parent;\n\t\tif (name && parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\torig = name,\n\t\t\t\ti = 1;\n\t\t\twhile (unique && children[name])\n\t\t\t\tname = orig + ' ' + (i++);\n\t\t\t(namedChildren[name] = namedChildren[name] || []).push(this);\n\t\t\tchildren[name] = this;\n\t\t}\n\t\tthis._name = name || undefined;\n\t\tthis._changed(128);\n\t},\n\n\tgetStyle: function() {\n\t\treturn this._style;\n\t},\n\n\tsetStyle: function(style) {\n\t\tthis.getStyle().set(style);\n\t}\n}, Base.each(['locked', 'visible', 'blendMode', 'opacity', 'guide'],\n\tfunction(name) {\n\t\tvar part = Base.capitalize(name),\n\t\t\tname = '_' + name;\n\t\tthis['get' + part] = function() {\n\t\t\treturn this[name];\n\t\t};\n\t\tthis['set' + part] = function(value) {\n\t\t\tif (value != this[name]) {\n\t\t\t\tthis[name] = value;\n\t\t\t\tthis._changed(name === '_locked'\n\t\t\t\t\t\t? 128 : 129);\n\t\t\t}\n\t\t};\n\t},\n{}), {\n\tbeans: true,\n\n\t_locked: false,\n\n\t_visible: true,\n\n\t_blendMode: 'normal',\n\n\t_opacity: 1,\n\n\t_guide: false,\n\n\tisSelected: function() {\n\t\tif (this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (children[i].isSelected())\n\t\t\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetSelected: function(selected, noChildren) {\n\t\tif (!noChildren && this._selectChildren) {\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setSelected(selected);\n\t\t}\n\t\tif ((selected = !!selected) ^ this._selected) {\n\t\t\tthis._selected = selected;\n\t\t\tthis._project._updateSelection(this);\n\t\t\tthis._changed(129);\n\t\t}\n\t},\n\n\t_selected: false,\n\n\tisFullySelected: function() {\n\t\tvar children = this._children;\n\t\tif (children && this._selected) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tif (!children[i].isFullySelected())\n\t\t\t\t\treturn false;\n\t\t\treturn true;\n\t\t}\n\t\treturn this._selected;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].setFullySelected(selected);\n\t\t}\n\t\tthis.setSelected(selected, true);\n\t},\n\n\tisClipMask: function() {\n\t\treturn this._clipMask;\n\t},\n\n\tsetClipMask: function(clipMask) {\n\t\tif (this._clipMask != (clipMask = !!clipMask)) {\n\t\t\tthis._clipMask = clipMask;\n\t\t\tif (clipMask) {\n\t\t\t\tthis.setFillColor(null);\n\t\t\t\tthis.setStrokeColor(null);\n\t\t\t}\n\t\t\tthis._changed(129);\n\t\t\tif (this._parent)\n\t\t\t\tthis._parent._changed(1024);\n\t\t}\n\t},\n\n\t_clipMask: false,\n\n\tgetData: function() {\n\t\tif (!this._data)\n\t\t\tthis._data = {};\n\t\treturn this._data;\n\t},\n\n\tsetData: function(data) {\n\t\tthis._data = data;\n\t},\n\n\tgetPosition: function(_dontLink) {\n\t\tvar position = this._position,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\tif (!position) {\n\t\t\tvar pivot = this._pivot;\n\t\t\tposition = this._position = pivot\n\t\t\t\t\t? this._matrix._transformPoint(pivot)\n\t\t\t\t\t: this.getBounds().getCenter(true);\n\t\t}\n\t\treturn new ctor(position.x, position.y, this, 'setPosition');\n\t},\n\n\tsetPosition: function() {\n\t\tthis.translate(Point.read(arguments).subtract(this.getPosition(true)));\n\t},\n\n\tgetPivot: function(_dontLink) {\n\t\tvar pivot = this._pivot;\n\t\tif (pivot) {\n\t\t\tvar ctor = _dontLink ? Point : LinkedPoint;\n\t\t\tpivot = new ctor(pivot.x, pivot.y, this, 'setPivot');\n\t\t}\n\t\treturn pivot;\n\t},\n\n\tsetPivot: function() {\n\t\tthis._pivot = Point.read(arguments, 0, { clone: true, readNull: true });\n\t\tthis._position = undefined;\n\t},\n\n\t_pivot: null,\n}, Base.each(['bounds', 'strokeBounds', 'handleBounds', 'roughBounds',\n\t\t'internalBounds', 'internalRoughBounds'],\n\tfunction(key) {\n\t\tvar getter = 'get' + Base.capitalize(key),\n\t\t\tmatch = key.match(/^internal(.*)$/),\n\t\t\tinternalGetter = match ? 'get' + match[1] : null;\n\t\tthis[getter] = function(_matrix) {\n\t\t\tvar boundsGetter = this._boundsGetter,\n\t\t\t\tname = !internalGetter && (typeof boundsGetter === 'string'\n\t\t\t\t\t\t? boundsGetter : boundsGetter && boundsGetter[getter])\n\t\t\t\t\t\t|| getter,\n\t\t\t\tbounds = this._getCachedBounds(name, _matrix, this,\n\t\t\t\t\t\tinternalGetter);\n\t\t\treturn key === 'bounds'\n\t\t\t\t\t? new LinkedRectangle(bounds.x, bounds.y, bounds.width,\n\t\t\t\t\t\t\tbounds.height, this, 'setBounds')\n\t\t\t\t\t: bounds;\n\t\t};\n\t},\n{\n\tbeans: true,\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar children = this._children;\n\t\tif (!children || children.length == 0)\n\t\t\treturn new Rectangle();\n\t\tItem._updateBoundsCache(this, cacheItem);\n\t\tvar x1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tif (child._visible && !child.isEmpty()) {\n\t\t\t\tvar rect = child._getCachedBounds(getter,\n\t\t\t\t\t\tmatrix && matrix.chain(child._matrix), cacheItem);\n\t\t\t\tx1 = Math.min(rect.x, x1);\n\t\t\t\ty1 = Math.min(rect.y, y1);\n\t\t\t\tx2 = Math.max(rect.x + rect.width, x2);\n\t\t\t\ty2 = Math.max(rect.y + rect.height, y2);\n\t\t\t}\n\t\t}\n\t\treturn isFinite(x1)\n\t\t\t\t? new Rectangle(x1, y1, x2 - x1, y2 - y1)\n\t\t\t\t: new Rectangle();\n\t},\n\n\tsetBounds: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tbounds = this.getBounds(),\n\t\t\tmatrix = new Matrix(),\n\t\t\tcenter = rect.getCenter();\n\t\tmatrix.translate(center);\n\t\tif (rect.width != bounds.width || rect.height != bounds.height) {\n\t\t\tmatrix.scale(\n\t\t\t\t\tbounds.width != 0 ? rect.width / bounds.width : 1,\n\t\t\t\t\tbounds.height != 0 ? rect.height / bounds.height : 1);\n\t\t}\n\t\tcenter = bounds.getCenter();\n\t\tmatrix.translate(-center.x, -center.y);\n\t\tthis.transform(matrix);\n\t},\n\n\t_getCachedBounds: function(getter, matrix, cacheItem, internalGetter) {\n\t\tmatrix = matrix && matrix.orNullIfIdentity();\n\t\tvar _matrix = internalGetter ? null : this._matrix.orNullIfIdentity(),\n\t\t\tcache = (!matrix || matrix.equals(_matrix)) && getter;\n\t\tItem._updateBoundsCache(this._parent || this._parentSymbol, cacheItem);\n\t\tif (cache && this._bounds && this._bounds[cache])\n\t\t\treturn this._bounds[cache].clone();\n\t\tvar bounds = this._getBounds(internalGetter || getter,\n\t\t\t\tmatrix || _matrix, cacheItem);\n\t\tif (cache) {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar cached = this._bounds[cache] = bounds.clone();\n\t\t\tcached._internal = !!internalGetter;\n\t\t}\n\t\treturn bounds;\n\t},\n\n\tstatics: {\n\t\t_updateBoundsCache: function(parent, item) {\n\t\t\tif (parent) {\n\t\t\t\tvar id = item._id,\n\t\t\t\t\tref = parent._boundsCache = parent._boundsCache || {\n\t\t\t\t\t\tids: {},\n\t\t\t\t\t\tlist: []\n\t\t\t\t\t};\n\t\t\t\tif (!ref.ids[id]) {\n\t\t\t\t\tref.list.push(item);\n\t\t\t\t\tref.ids[id] = item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_clearBoundsCache: function(item) {\n\t\t\tvar cache = item._boundsCache;\n\t\t\tif (cache) {\n\t\t\t\titem._bounds = item._position = item._boundsCache = undefined;\n\t\t\t\tfor (var i = 0, list = cache.list, l = list.length; i < l; i++){\n\t\t\t\t\tvar other = list[i];\n\t\t\t\t\tif (other !== item) {\n\t\t\t\t\t\tother._bounds = other._position = undefined;\n\t\t\t\t\t\tif (other._boundsCache)\n\t\t\t\t\t\t\tItem._clearBoundsCache(other);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}), {\n\tbeans: true,\n\n\t_decompose: function() {\n\t\treturn this._decomposed = this._matrix.decompose();\n\t},\n\n\tgetRotation: function() {\n\t\tvar decomposed = this._decomposed || this._decompose();\n\t\treturn decomposed && decomposed.rotation;\n\t},\n\n\tsetRotation: function(rotation) {\n\t\tvar current = this.getRotation();\n\t\tif (current != null && rotation != null) {\n\t\t\tvar decomposed = this._decomposed;\n\t\t\tthis.rotate(rotation - current);\n\t\t\tdecomposed.rotation = rotation;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetScaling: function(_dontLink) {\n\t\tvar decomposed = this._decomposed || this._decompose(),\n\t\t\tscaling = decomposed && decomposed.scaling,\n\t\t\tctor = _dontLink ? Point : LinkedPoint;\n\t\treturn scaling && new ctor(scaling.x, scaling.y, this, 'setScaling');\n\t},\n\n\tsetScaling: function() {\n\t\tvar current = this.getScaling();\n\t\tif (current) {\n\t\t\tvar scaling = Point.read(arguments, 0, { clone: true }),\n\t\t\t\tdecomposed = this._decomposed;\n\t\t\tthis.scale(scaling.x / current.x, scaling.y / current.y);\n\t\t\tdecomposed.scaling = scaling;\n\t\t\tthis._decomposed = decomposed;\n\t\t}\n\t},\n\n\tgetMatrix: function() {\n\t\treturn this._matrix;\n\t},\n\n\tsetMatrix: function() {\n\t\tvar matrix = this._matrix;\n\t\tmatrix.initialize.apply(matrix, arguments);\n\t\tif (this._applyMatrix) {\n\t\t\tthis.transform(null, true);\n\t\t} else {\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetGlobalMatrix: function(_dontClone) {\n\t\tvar matrix = this._globalMatrix,\n\t\t\tupdateVersion = this._project._updateVersion;\n\t\tif (matrix && matrix._updateVersion !== updateVersion)\n\t\t\tmatrix = null;\n\t\tif (!matrix) {\n\t\t\tmatrix = this._globalMatrix = this._matrix.clone();\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tmatrix.preConcatenate(parent.getGlobalMatrix(true));\n\t\t\tmatrix._updateVersion = updateVersion;\n\t\t}\n\t\treturn _dontClone ? matrix : matrix.clone();\n\t},\n\n\tgetApplyMatrix: function() {\n\t\treturn this._applyMatrix;\n\t},\n\n\tsetApplyMatrix: function(apply) {\n\t\tif (this._applyMatrix = this._canApplyMatrix && !!apply)\n\t\t\tthis.transform(null, true);\n\t},\n\n\tgetTransformContent: '#getApplyMatrix',\n\tsetTransformContent: '#setApplyMatrix',\n}, {\n\tgetProject: function() {\n\t\treturn this._project;\n\t},\n\n\t_setProject: function(project, installEvents) {\n\t\tif (this._project !== project) {\n\t\t\tif (this._project)\n\t\t\t\tthis._installEvents(false);\n\t\t\tthis._project = project;\n\t\t\tvar children = this._children;\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\t\tchildren[i]._setProject(project);\n\t\t\tinstallEvents = true;\n\t\t}\n\t\tif (installEvents)\n\t\t\tthis._installEvents(true);\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\t_installEvents: function _installEvents(install) {\n\t\t_installEvents.base.call(this, install);\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children && children.length; i < l; i++)\n\t\t\tchildren[i]._installEvents(install);\n\t},\n\n\tgetLayer: function() {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent instanceof Layer)\n\t\t\t\treturn parent;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetParent: function() {\n\t\treturn this._parent;\n\t},\n\n\tsetParent: function(item) {\n\t\treturn item.addChild(this);\n\t},\n\n\tgetChildren: function() {\n\t\treturn this._children;\n\t},\n\n\tsetChildren: function(items) {\n\t\tthis.removeChildren();\n\t\tthis.addChildren(items);\n\t},\n\n\tgetFirstChild: function() {\n\t\treturn this._children && this._children[0] || null;\n\t},\n\n\tgetLastChild: function() {\n\t\treturn this._children && this._children[this._children.length - 1]\n\t\t\t\t|| null;\n\t},\n\n\tgetNextSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function() {\n\t\treturn this._parent && this._parent._children[this._index - 1] || null;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index;\n\t},\n\n\tequals: function(item) {\n\t\treturn item === this || item && this._class === item._class\n\t\t\t\t&& this._style.equals(item._style)\n\t\t\t\t&& this._matrix.equals(item._matrix)\n\t\t\t\t&& this._locked === item._locked\n\t\t\t\t&& this._visible === item._visible\n\t\t\t\t&& this._blendMode === item._blendMode\n\t\t\t\t&& this._opacity === item._opacity\n\t\t\t\t&& this._clipMask === item._clipMask\n\t\t\t\t&& this._guide === item._guide\n\t\t\t\t&& this._equals(item)\n\t\t\t\t|| false;\n\t},\n\n\t_equals: function(item) {\n\t\treturn Base.equals(this._children, item._children);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new this.constructor(Item.NO_INSERT), insert);\n\t},\n\n\t_clone: function(copy, insert, includeMatrix) {\n\t\tvar keys = ['_locked', '_visible', '_blendMode', '_opacity',\n\t\t\t\t'_clipMask', '_guide'],\n\t\t\tchildren = this._children;\n\t\tcopy.setStyle(this._style);\n\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\tcopy.addChild(children[i].clone(false), true);\n\t\t}\n\t\tfor (var i = 0, l = keys.length; i < l; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tif (this.hasOwnProperty(key))\n\t\t\t\tcopy[key] = this[key];\n\t\t}\n\t\tif (includeMatrix !== false)\n\t\t\tcopy._matrix.initialize(this._matrix);\n\t\tcopy.setApplyMatrix(this._applyMatrix);\n\t\tcopy.setPivot(this._pivot);\n\t\tcopy.setSelected(this._selected);\n\t\tcopy._data = this._data ? Base.clone(this._data) : null;\n\t\tif (insert || insert === undefined)\n\t\t\tcopy.insertAbove(this);\n\t\tif (this._name)\n\t\t\tcopy.setName(this._name, true);\n\t\treturn copy;\n\t},\n\n\tcopyTo: function(itemOrProject) {\n\t\treturn itemOrProject.addChild(this.clone(false));\n\t},\n\n\trasterize: function(resolution) {\n\t\tvar bounds = this.getStrokeBounds(),\n\t\t\tscale = (resolution || this.getView().getResolution()) / 72,\n\t\t\ttopLeft = bounds.getTopLeft().floor(),\n\t\t\tbottomRight = bounds.getBottomRight().ceil(),\n\t\t\tsize = new Size(bottomRight.subtract(topLeft)),\n\t\t\tcanvas = CanvasProvider.getCanvas(size.multiply(scale)),\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\tmatrix = new Matrix().scale(scale).translate(topLeft.negate());\n\t\tctx.save();\n\t\tmatrix.applyToContext(ctx);\n\t\tthis.draw(ctx, new Base({ matrices: [matrix] }));\n\t\tctx.restore();\n\t\tvar raster = new Raster(Item.NO_INSERT);\n\t\traster.setCanvas(canvas);\n\t\traster.transform(new Matrix().translate(topLeft.add(size.divide(2)))\n\t\t\t\t.scale(1 / scale));\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\tcontains: function() {\n\t\treturn !!this._contains(\n\t\t\t\tthis._matrix._inverseTransform(Point.read(arguments)));\n\t},\n\n\t_contains: function(point) {\n\t\tif (this._children) {\n\t\t\tfor (var i = this._children.length - 1; i >= 0; i--) {\n\t\t\t\tif (this._children[i].contains(point))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn point.isInside(this.getInternalBounds());\n\t},\n\n\tisInside: function() {\n\t\treturn Rectangle.read(arguments).contains(this.getBounds());\n\t},\n\n\t_asPathItem: function() {\n\t\treturn new Path.Rectangle({\n\t\t\trectangle: this.getInternalBounds(),\n\t\t\tmatrix: this._matrix,\n\t\t\tinsert: false,\n\t\t});\n\t},\n\n\tintersects: function(item, _matrix) {\n\t\tif (!(item instanceof Item))\n\t\t\treturn false;\n\t\treturn this._asPathItem().getIntersections(item._asPathItem(),\n\t\t\t\t_matrix || item._matrix).length > 0;\n\t},\n\n\thitTest: function() {\n\t\treturn this._hitTest(\n\t\t\t\tPoint.read(arguments),\n\t\t\t\tHitResult.getOptions(Base.read(arguments)));\n\t},\n\n\t_hitTest: function(point, options) {\n\t\tif (this._locked || !this._visible || this._guide && !options.guides\n\t\t\t\t|| this.isEmpty())\n\t\t\treturn null;\n\n\t\tvar matrix = this._matrix,\n\t\t\tparentTotalMatrix = options._totalMatrix,\n\t\t\tview = this.getView(),\n\t\t\ttotalMatrix = options._totalMatrix = parentTotalMatrix\n\t\t\t\t\t? parentTotalMatrix.chain(matrix)\n\t\t\t\t\t: this.getGlobalMatrix().preConcatenate(view._matrix),\n\t\t\ttolerancePadding = options._tolerancePadding = new Size(\n\t\t\t\t\t\tPath._getPenPadding(1, totalMatrix.inverted())\n\t\t\t\t\t).multiply(\n\t\t\t\t\t\tMath.max(options.tolerance, 0.000001)\n\t\t\t\t\t);\n\t\tpoint = matrix._inverseTransform(point);\n\n\t\tif (!this._children && !this.getInternalRoughBounds()\n\t\t\t\t.expand(tolerancePadding.multiply(2))._containsPoint(point))\n\t\t\treturn null;\n\t\tvar checkSelf = !(options.guides && !this._guide\n\t\t\t\t|| options.selected && !this._selected\n\t\t\t\t|| options.type && options.type !== Base.hyphenate(this._class)\n\t\t\t\t|| options.class && !(this instanceof options.class)),\n\t\t\tthat = this,\n\t\t\tres;\n\n\t\tfunction checkBounds(type, part) {\n\t\t\tvar pt = bounds['get' + part]();\n\t\t\tif (point.subtract(pt).divide(tolerancePadding).length <= 1)\n\t\t\t\treturn new HitResult(type, that,\n\t\t\t\t\t\t{ name: Base.hyphenate(part), point: pt });\n\t\t}\n\n\t\tif (checkSelf && (options.center || options.bounds) && this._parent) {\n\t\t\tvar bounds = this.getInternalBounds();\n\t\t\tif (options.center)\n\t\t\t\tres = checkBounds('center', 'Center');\n\t\t\tif (!res && options.bounds) {\n\t\t\t\tvar points = [\n\t\t\t\t\t'TopLeft', 'TopRight', 'BottomLeft', 'BottomRight',\n\t\t\t\t\t'LeftCenter', 'TopCenter', 'RightCenter', 'BottomCenter'\n\t\t\t\t];\n\t\t\t\tfor (var i = 0; i < 8 && !res; i++)\n\t\t\t\t\tres = checkBounds('bounds', points[i]);\n\t\t\t}\n\t\t}\n\n\t\tvar children = !res && this._children;\n\t\tif (children) {\n\t\t\tvar opts = this._getChildHitTestOptions(options);\n\t\t\tfor (var i = children.length - 1; i >= 0 && !res; i--)\n\t\t\t\tres = children[i]._hitTest(point, opts);\n\t\t}\n\t\tif (!res && checkSelf)\n\t\t\tres = this._hitTestSelf(point, options);\n\t\tif (res && res.point)\n\t\t\tres.point = matrix.transform(res.point);\n\t\toptions._totalMatrix = parentTotalMatrix;\n\t\treturn res;\n\t},\n\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tif (options.fill && this.hasFill() && this._contains(point))\n\t\t\treturn new HitResult('fill', this);\n\t},\n\n\tmatches: function(name, compare) {\n\t\tfunction matchObject(obj1, obj2) {\n\t\t\tfor (var i in obj1) {\n\t\t\t\tif (obj1.hasOwnProperty(i)) {\n\t\t\t\t\tvar val1 = obj1[i],\n\t\t\t\t\t\tval2 = obj2[i];\n\t\t\t\t\tif (Base.isPlainObject(val1) && Base.isPlainObject(val2)) {\n\t\t\t\t\t\tif (!matchObject(val1, val2))\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (!Base.equals(val1, val2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\tvar type = typeof name;\n\t\tif (type === 'object') {\n\t\t\tfor (var key in name) {\n\t\t\t\tif (name.hasOwnProperty(key) && !this.matches(key, name[key]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (type === 'function') {\n\t\t\treturn name(this);\n\t\t} else {\n\t\t\tvar value = /^(empty|editable)$/.test(name)\n\t\t\t\t\t? this['is' + Base.capitalize(name)]()\n\t\t\t\t\t: name === 'type'\n\t\t\t\t\t\t? Base.hyphenate(this._class)\n\t\t\t\t\t\t: this[name];\n\t\t\tif (/^(constructor|class)$/.test(name)) {\n\t\t\t\tif (!(this instanceof compare))\n\t\t\t\t\treturn false;\n\t\t\t} else if (compare instanceof RegExp) {\n\t\t\t\tif (!compare.test(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (typeof compare === 'function') {\n\t\t\t\tif (!compare(value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (Base.isPlainObject(compare)) {\n\t\t\t\tif (!matchObject(compare, value))\n\t\t\t\t\treturn false;\n\t\t\t} else if (!Base.equals(value, compare)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\n\tgetItems: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix);\n\t},\n\n\tgetItem: function(match) {\n\t\treturn Item._getItems(this._children, match, this._matrix, null, true)\n\t\t\t\t[0] || null;\n\t},\n\n\tstatics: {\n\t\t_getItems: function _getItems(children, match, matrix, param,\n\t\t\t\tfirstOnly) {\n\t\t\tif (!param && typeof match === 'object') {\n\t\t\t\tvar overlapping = match.overlapping,\n\t\t\t\t\tinside = match.inside,\n\t\t\t\t\tbounds = overlapping || inside,\n\t\t\t\t\trect =\tbounds && Rectangle.read([bounds]);\n\t\t\t\tparam = {\n\t\t\t\t\titems: [],\n\t\t\t\t\tinside: !!inside,\n\t\t\t\t\toverlapping: !!overlapping,\n\t\t\t\t\trect: rect,\n\t\t\t\t\tpath: overlapping && new Path.Rectangle({\n\t\t\t\t\t\trectangle: rect,\n\t\t\t\t\t\tinsert: false\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t\tif (bounds)\n\t\t\t\t\tmatch = Base.set({}, match,\n\t\t\t\t\t\t\t{ inside: true, overlapping: true });\n\t\t\t}\n\t\t\tvar items = param && param.items,\n\t\t\t\trect = param && param.rect;\n\t\t\tmatrix = rect && (matrix || new Matrix());\n\t\t\tfor (var i = 0, l = children && children.length; i < l; i++) {\n\t\t\t\tvar child = children[i],\n\t\t\t\t\tchildMatrix = matrix && matrix.chain(child._matrix),\n\t\t\t\t\tadd = true;\n\t\t\t\tif (rect) {\n\t\t\t\t\tvar bounds = child.getBounds(childMatrix);\n\t\t\t\t\tif (!rect.intersects(bounds))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tif (!(param.inside && rect.contains(bounds))\n\t\t\t\t\t\t\t&& !(param.overlapping && (bounds.contains(rect)\n\t\t\t\t\t\t\t\t|| param.path.intersects(child, childMatrix))))\n\t\t\t\t\t\tadd = false;\n\t\t\t\t}\n\t\t\t\tif (add && child.matches(match)) {\n\t\t\t\t\titems.push(child);\n\t\t\t\t\tif (firstOnly)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\t_getItems(child._children, match,\n\t\t\t\t\t\tchildMatrix, param,\n\t\t\t\t\t\tfirstOnly);\n\t\t\t\tif (firstOnly && items.length > 0)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n}, {\n\n\timportJSON: function(json) {\n\t\tvar res = Base.importJSON(json, this);\n\t\treturn res !== this\n\t\t\t\t? this.addChild(res)\n\t\t\t\t: res;\n\t},\n\n\taddChild: function(item, _preserve) {\n\t\treturn this.insertChild(undefined, item, _preserve);\n\t},\n\n\tinsertChild: function(index, item, _preserve) {\n\t\tvar res = item ? this.insertChildren(index, [item], _preserve) : null;\n\t\treturn res && res[0];\n\t},\n\n\taddChildren: function(items, _preserve) {\n\t\treturn this.insertChildren(this._children.length, items, _preserve);\n\t},\n\n\tinsertChildren: function(index, items, _preserve, _proto) {\n\t\tvar children = this._children;\n\t\tif (children && items && items.length > 0) {\n\t\t\titems = Array.prototype.slice.apply(items);\n\t\t\tfor (var i = items.length - 1; i >= 0; i--) {\n\t\t\t\tvar item = items[i];\n\t\t\t\tif (_proto && !(item instanceof _proto)) {\n\t\t\t\t\titems.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tvar shift = item._parent === this && item._index < index;\n\t\t\t\t\tif (item._remove(false, true) && shift)\n\t\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t}\n\t\t\tBase.splice(children, items, index, 0);\n\t\t\tvar project = this._project,\n\t\t\t\tnotifySelf = project && project._changes;\n\t\t\tfor (var i = 0, l = items.length; i < l; i++) {\n\t\t\t\tvar item = items[i];\n\t\t\t\titem._parent = this;\n\t\t\t\titem._setProject(this._project, true);\n\t\t\t\tif (item._name)\n\t\t\t\t\titem.setName(item._name);\n\t\t\t\tif (notifySelf)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tthis._changed(11);\n\t\t} else {\n\t\t\titems = null;\n\t\t}\n\t\treturn items;\n\t},\n\n\t_insertSibling: function(index, item, _preserve) {\n\t\treturn this._parent\n\t\t\t\t? this._parent.insertChild(index, item, _preserve)\n\t\t\t\t: null;\n\t},\n\n\tinsertAbove: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index + 1, this, _preserve);\n\t},\n\n\tinsertBelow: function(item, _preserve) {\n\t\treturn item._insertSibling(item._index, this, _preserve);\n\t},\n\n\tsendToBack: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.insertChild(0, this);\n\t},\n\n\tbringToFront: function() {\n\t\treturn (this._parent || this instanceof Layer && this._project)\n\t\t\t\t.addChild(this);\n\t},\n\n\tappendTop: '#addChild',\n\n\tappendBottom: function(item) {\n\t\treturn this.insertChild(0, item);\n\t},\n\n\tmoveAbove: '#insertAbove',\n\n\tmoveBelow: '#insertBelow',\n\n\treduce: function() {\n\t\tif (this._children && this._children.length === 1) {\n\t\t\tvar child = this._children[0].reduce();\n\t\t\tchild.insertAbove(this);\n\t\t\tchild.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn child;\n\t\t}\n\t\treturn this;\n\t},\n\n\t_removeNamed: function() {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tvar children = parent._children,\n\t\t\t\tnamedChildren = parent._namedChildren,\n\t\t\t\tname = this._name,\n\t\t\t\tnamedArray = namedChildren[name],\n\t\t\t\tindex = namedArray ? namedArray.indexOf(this) : -1;\n\t\t\tif (index !== -1) {\n\t\t\t\tif (children[name] == this)\n\t\t\t\t\tdelete children[name];\n\t\t\t\tnamedArray.splice(index, 1);\n\t\t\t\tif (namedArray.length) {\n\t\t\t\t\tchildren[name] = namedArray[namedArray.length - 1];\n\t\t\t\t} else {\n\t\t\t\t\tdelete namedChildren[name];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t_remove: function(notifySelf, notifyParent) {\n\t\tvar parent = this._parent;\n\t\tif (parent) {\n\t\t\tif (this._name)\n\t\t\t\tthis._removeNamed();\n\t\t\tif (this._index != null)\n\t\t\t\tBase.splice(parent._children, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf) {\n\t\t\t\tvar project = this._project;\n\t\t\t\tif (project && project._changes)\n\t\t\t\t\tthis._changed(5);\n\t\t\t}\n\t\t\tif (notifyParent)\n\t\t\t\tparent._changed(11);\n\t\t\tthis._parent = null;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tremove: function() {\n\t\treturn this._remove(true, true);\n\t},\n\n\treplaceWith: function(item) {\n\t\tvar ok = item && item.insertBelow(this);\n\t\tif (ok)\n\t\t\tthis.remove();\n\t\treturn ok;\n\t},\n\n\tremoveChildren: function(from, to) {\n\t\tif (!this._children)\n\t\t\treturn null;\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._children.length);\n\t\tvar removed = Base.splice(this._children, null, from, to - from);\n\t\tfor (var i = removed.length - 1; i >= 0; i--) {\n\t\t\tremoved[i]._remove(true, false);\n\t\t}\n\t\tif (removed.length > 0)\n\t\t\tthis._changed(11);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeChildren',\n\n\treverseChildren: function() {\n\t\tif (this._children) {\n\t\t\tthis._children.reverse();\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\t\tthis._children[i]._index = i;\n\t\t\tthis._changed(11);\n\t\t}\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._children || this._children.length === 0;\n\t},\n\n\tisEditable: function() {\n\t\tvar item = this;\n\t\twhile (item) {\n\t\t\tif (!item._visible || item._locked)\n\t\t\t\treturn false;\n\t\t\titem = item._parent;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasFill: function() {\n\t\treturn this.getStyle().hasFill();\n\t},\n\n\thasStroke: function() {\n\t\treturn this.getStyle().hasStroke();\n\t},\n\n\thasShadow: function() {\n\t\treturn this.getStyle().hasShadow();\n\t},\n\n\t_getOrder: function(item) {\n\t\tfunction getList(item) {\n\t\t\tvar list = [];\n\t\t\tdo {\n\t\t\t\tlist.unshift(item);\n\t\t\t} while (item = item._parent);\n\t\t\treturn list;\n\t\t}\n\t\tvar list1 = getList(this),\n\t\t\tlist2 = getList(item);\n\t\tfor (var i = 0, l = Math.min(list1.length, list2.length); i < l; i++) {\n\t\t\tif (list1[i] != list2[i]) {\n\t\t\t\treturn list1[i]._index < list2[i]._index ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t},\n\n\thasChildren: function() {\n\t\treturn this._children && this._children.length > 0;\n\t},\n\n\tisInserted: function() {\n\t\treturn this._parent ? this._parent.isInserted() : false;\n\t},\n\n\tisAbove: function(item) {\n\t\treturn this._getOrder(item) === -1;\n\t},\n\n\tisBelow: function(item) {\n\t\treturn this._getOrder(item) === 1;\n\t},\n\n\tisParent: function(item) {\n\t\treturn this._parent === item;\n\t},\n\n\tisChild: function(item) {\n\t\treturn item && item._parent === this;\n\t},\n\n\tisDescendant: function(item) {\n\t\tvar parent = this;\n\t\twhile (parent = parent._parent) {\n\t\t\tif (parent == item)\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tisAncestor: function(item) {\n\t\treturn item ? item.isDescendant(this) : false;\n\t},\n\n\tisGroupedWith: function(item) {\n\t\tvar parent = this._parent;\n\t\twhile (parent) {\n\t\t\tif (parent._parent\n\t\t\t\t&& /^(Group|Layer|CompoundPath)$/.test(parent._class)\n\t\t\t\t&& item.isDescendant(parent))\n\t\t\t\t\treturn true;\n\t\t\tparent = parent._parent;\n\t\t}\n\t\treturn false;\n\t},\n\n\ttranslate: function() {\n\t\tvar mx = new Matrix();\n\t\treturn this.transform(mx.translate.apply(mx, arguments));\n\t},\n\n\trotate: function(angle ) {\n\t\treturn this.transform(new Matrix().rotate(angle,\n\t\t\t\tPoint.read(arguments, 1, { readNull: true })\n\t\t\t\t\t|| this.getPosition(true)));\n\t}\n}, Base.each(['scale', 'shear', 'skew'], function(name) {\n\tthis[name] = function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcenter = Point.read(arguments, 0, { readNull: true });\n\t\treturn this.transform(new Matrix()[name](point,\n\t\t\t\tcenter || this.getPosition(true)));\n\t};\n}, {\n\n}), {\n\ttransform: function(matrix, _applyMatrix, _applyRecursively,\n\t\t\t_setApplyMatrix) {\n\t\tif (matrix && matrix.isIdentity())\n\t\t\tmatrix = null;\n\t\tvar _matrix = this._matrix,\n\t\t\tapplyMatrix = (_applyMatrix || this._applyMatrix)\n\t\t\t\t\t&& ((!_matrix.isIdentity() || matrix)\n\t\t\t\t\t\t|| _applyMatrix && _applyRecursively && this._children);\n\t\tif (!matrix && !applyMatrix)\n\t\t\treturn this;\n\t\tif (matrix)\n\t\t\t_matrix.preConcatenate(matrix);\n\t\tif (applyMatrix = applyMatrix && this._transformContent(_matrix,\n\t\t\t\t\t_applyRecursively, _setApplyMatrix)) {\n\t\t\tvar pivot = this._pivot,\n\t\t\t\tstyle = this._style,\n\t\t\t\tfillColor = style.getFillColor(true),\n\t\t\t\tstrokeColor = style.getStrokeColor(true);\n\t\t\tif (pivot)\n\t\t\t\t_matrix._transformPoint(pivot, pivot, true);\n\t\t\tif (fillColor)\n\t\t\t\tfillColor.transform(_matrix);\n\t\t\tif (strokeColor)\n\t\t\t\tstrokeColor.transform(_matrix);\n\t\t\t_matrix.reset(true);\n\t\t\tif (_setApplyMatrix && this._canApplyMatrix)\n\t\t\t\tthis._applyMatrix = true;\n\t\t}\n\t\tvar bounds = this._bounds,\n\t\t\tposition = this._position;\n\t\tthis._changed(9);\n\t\tvar decomp = bounds && matrix && matrix.decompose();\n\t\tif (decomp && !decomp.shearing && decomp.rotation % 90 === 0) {\n\t\t\tfor (var key in bounds) {\n\t\t\t\tvar rect = bounds[key];\n\t\t\t\tif (applyMatrix || !rect._internal)\n\t\t\t\t\tmatrix._transformBounds(rect, rect);\n\t\t\t}\n\t\t\tvar getter = this._boundsGetter,\n\t\t\t\trect = bounds[getter && getter.getBounds || getter || 'getBounds'];\n\t\t\tif (rect)\n\t\t\t\tthis._position = rect.getCenter(true);\n\t\t\tthis._bounds = bounds;\n\t\t} else if (matrix && position) {\n\t\t\tthis._position = matrix._transformPoint(position, position);\n\t\t}\n\t\treturn this;\n\t},\n\n\t_transformContent: function(matrix, applyRecursively, setApplyMatrix) {\n\t\tvar children = this._children;\n\t\tif (children) {\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].transform(matrix, true, applyRecursively,\n\t\t\t\t\t\tsetApplyMatrix);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\tglobalToLocal: function() {\n\t\treturn this.getGlobalMatrix(true)._inverseTransform(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tlocalToGlobal: function() {\n\t\treturn this.getGlobalMatrix(true)._transformPoint(\n\t\t\t\tPoint.read(arguments));\n\t},\n\n\tparentToLocal: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t},\n\n\tlocalToParent: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tfitBounds: function(rectangle, fill) {\n\t\trectangle = Rectangle.read(arguments);\n\t\tvar bounds = this.getBounds(),\n\t\t\titemRatio = bounds.height / bounds.width,\n\t\t\trectRatio = rectangle.height / rectangle.width,\n\t\t\tscale = (fill ? itemRatio > rectRatio : itemRatio < rectRatio)\n\t\t\t\t\t? rectangle.width / bounds.width\n\t\t\t\t\t: rectangle.height / bounds.height,\n\t\t\tnewBounds = new Rectangle(new Point(),\n\t\t\t\t\tnew Size(bounds.width * scale, bounds.height * scale));\n\t\tnewBounds.setCenter(rectangle.getCenter());\n\t\tthis.setBounds(newBounds);\n\t},\n\n\t_setStyles: function(ctx) {\n\t\tvar style = this._style,\n\t\t\tfillColor = style.getFillColor(),\n\t\t\tstrokeColor = style.getStrokeColor(),\n\t\t\tshadowColor = style.getShadowColor();\n\t\tif (fillColor)\n\t\t\tctx.fillStyle = fillColor.toCanvasStyle(ctx);\n\t\tif (strokeColor) {\n\t\t\tvar strokeWidth = style.getStrokeWidth();\n\t\t\tif (strokeWidth > 0) {\n\t\t\t\tctx.strokeStyle = strokeColor.toCanvasStyle(ctx);\n\t\t\t\tctx.lineWidth = strokeWidth;\n\t\t\t\tvar strokeJoin = style.getStrokeJoin(),\n\t\t\t\t\tstrokeCap = style.getStrokeCap(),\n\t\t\t\t\tmiterLimit = style.getMiterLimit();\n\t\t\t\tif (strokeJoin)\n\t\t\t\t\tctx.lineJoin = strokeJoin;\n\t\t\t\tif (strokeCap)\n\t\t\t\t\tctx.lineCap = strokeCap;\n\t\t\t\tif (miterLimit)\n\t\t\t\t\tctx.miterLimit = miterLimit;\n\t\t\t\tif (paper.support.nativeDash) {\n\t\t\t\t\tvar dashArray = style.getDashArray(),\n\t\t\t\t\t\tdashOffset = style.getDashOffset();\n\t\t\t\t\tif (dashArray && dashArray.length) {\n\t\t\t\t\t\tif ('setLineDash' in ctx) {\n\t\t\t\t\t\t\tctx.setLineDash(dashArray);\n\t\t\t\t\t\t\tctx.lineDashOffset = dashOffset;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.mozDash = dashArray;\n\t\t\t\t\t\t\tctx.mozDashOffset = dashOffset;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (shadowColor) {\n\t\t\tvar shadowBlur = style.getShadowBlur();\n\t\t\tif (shadowBlur > 0) {\n\t\t\t\tctx.shadowColor = shadowColor.toCanvasStyle(ctx);\n\t\t\t\tctx.shadowBlur = shadowBlur;\n\t\t\t\tvar offset = this.getShadowOffset();\n\t\t\t\tctx.shadowOffsetX = offset.x;\n\t\t\t\tctx.shadowOffsetY = offset.y;\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function(ctx, param, parentStrokeMatrix) {\n\t\tvar updateVersion = this._updateVersion = this._project._updateVersion;\n\t\tif (!this._visible || this._opacity === 0)\n\t\t\treturn;\n\t\tvar matrices = param.matrices,\n\t\t\tviewMatrix = param.viewMatrix,\n\t\t\tmatrix = this._matrix,\n\t\t\tglobalMatrix = matrices[matrices.length - 1].chain(matrix);\n\t\tif (!globalMatrix.isInvertible())\n\t\t\treturn;\n\n\t\tfunction getViewMatrix(matrix) {\n\t\t\treturn viewMatrix ? viewMatrix.chain(matrix) : matrix;\n\t\t}\n\n\t\tmatrices.push(globalMatrix);\n\t\tif (param.updateMatrix) {\n\t\t\tglobalMatrix._updateVersion = updateVersion;\n\t\t\tthis._globalMatrix = globalMatrix;\n\t\t}\n\n\t\tvar blendMode = this._blendMode,\n\t\t\topacity = this._opacity,\n\t\t\tnormalBlend = blendMode === 'normal',\n\t\t\tnativeBlend = BlendMode.nativeModes[blendMode],\n\t\t\tdirect = normalBlend && opacity === 1\n\t\t\t\t\t|| param.dontStart\n\t\t\t\t\t|| param.clip\n\t\t\t\t\t|| (nativeBlend || normalBlend && opacity < 1)\n\t\t\t\t\t\t&& this._canComposite(),\n\t\t\tpixelRatio = param.pixelRatio || 1,\n\t\t\tmainCtx, itemOffset, prevOffset;\n\t\tif (!direct) {\n\t\t\tvar bounds = this.getStrokeBounds(getViewMatrix(globalMatrix));\n\t\t\tif (!bounds.width || !bounds.height)\n\t\t\t\treturn;\n\t\t\tprevOffset = param.offset;\n\t\t\titemOffset = param.offset = bounds.getTopLeft().floor();\n\t\t\tmainCtx = ctx;\n\t\t\tctx = CanvasProvider.getContext(bounds.getSize().ceil().add(1)\n\t\t\t\t\t.multiply(pixelRatio));\n\t\t\tif (pixelRatio !== 1)\n\t\t\t\tctx.scale(pixelRatio, pixelRatio);\n\t\t}\n\t\tctx.save();\n\t\tvar strokeMatrix = parentStrokeMatrix\n\t\t\t\t? parentStrokeMatrix.chain(matrix)\n\t\t\t\t: !this.getStrokeScaling(true) && getViewMatrix(globalMatrix),\n\t\t\tclip = !direct && param.clipItem,\n\t\t\ttransform = !strokeMatrix || clip;\n\t\tif (direct) {\n\t\t\tctx.globalAlpha = opacity;\n\t\t\tif (nativeBlend)\n\t\t\t\tctx.globalCompositeOperation = blendMode;\n\t\t} else if (transform) {\n\t\t\tctx.translate(-itemOffset.x, -itemOffset.y);\n\t\t}\n\t\tif (transform)\n\t\t\t(direct ? matrix : getViewMatrix(globalMatrix)).applyToContext(ctx);\n\t\tif (clip)\n\t\t\tparam.clipItem.draw(ctx, param.extend({ clip: true }));\n\t\tif (strokeMatrix) {\n\t\t\tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\t\t\tvar offset = param.offset;\n\t\t\tif (offset)\n\t\t\t\tctx.translate(-offset.x, -offset.y);\n\t\t}\n\t\tthis._draw(ctx, param, strokeMatrix);\n\t\tctx.restore();\n\t\tmatrices.pop();\n\t\tif (param.clip && !param.dontFinish)\n\t\t\tctx.clip();\n\t\tif (!direct) {\n\t\t\tBlendMode.process(blendMode, ctx, mainCtx, opacity,\n\t\t\t\t\titemOffset.subtract(prevOffset).multiply(pixelRatio));\n\t\t\tCanvasProvider.release(ctx);\n\t\t\tparam.offset = prevOffset;\n\t\t}\n\t},\n\n\t_isUpdated: function(updateVersion) {\n\t\tvar parent = this._parent;\n\t\tif (parent instanceof CompoundPath)\n\t\t\treturn parent._isUpdated(updateVersion);\n\t\tvar updated = this._updateVersion === updateVersion;\n\t\tif (!updated && parent && parent._visible\n\t\t\t\t&& parent._isUpdated(updateVersion)) {\n\t\t\tthis._updateVersion = updateVersion;\n\t\t\tupdated = true;\n\t\t}\n\t\treturn updated;\n\t},\n\n\t_drawSelection: function(ctx, matrix, size, selectedItems, updateVersion) {\n\t\tif ((this._drawSelected || this._boundsSelected)\n\t\t\t\t&& this._isUpdated(updateVersion)) {\n\t\t\tvar color = this.getSelectedColor(true)\n\t\t\t\t\t|| this.getLayer().getSelectedColor(true),\n\t\t\t\tmx = matrix.chain(this.getGlobalMatrix(true));\n\t\t\tctx.strokeStyle = ctx.fillStyle = color\n\t\t\t\t\t? color.toCanvasStyle(ctx) : '#009dec';\n\t\t\tif (this._drawSelected)\n\t\t\t\tthis._drawSelected(ctx, mx, selectedItems);\n\t\t\tif (this._boundsSelected) {\n\t\t\t\tvar half = size / 2;\n\t\t\t\t\tcoords = mx._transformCorners(this.getInternalBounds());\n\t\t\t\tctx.beginPath();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx[i === 0 ? 'moveTo' : 'lineTo'](coords[i], coords[++i]);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\t\t\t\tfor (var i = 0; i < 8; i++)\n\t\t\t\t\tctx.fillRect(coords[i] - half, coords[++i] - half,\n\t\t\t\t\t\t\tsize, size);\n\t\t\t}\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn false;\n\t}\n}, Base.each(['down', 'drag', 'up', 'move'], function(name) {\n\tthis['removeOn' + Base.capitalize(name)] = function() {\n\t\tvar hash = {};\n\t\thash[name] = true;\n\t\treturn this.removeOn(hash);\n\t};\n}, {\n\n\tremoveOn: function(obj) {\n\t\tfor (var name in obj) {\n\t\t\tif (obj[name]) {\n\t\t\t\tvar key = 'mouse' + name,\n\t\t\t\t\tproject = this._project,\n\t\t\t\t\tsets = project._removeSets = project._removeSets || {};\n\t\t\t\tsets[key] = sets[key] || {};\n\t\t\t\tsets[key][this._id] = this;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}));\n\nvar Group = Item.extend({\n\t_class: 'Group',\n\t_selectChildren: true,\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function Group(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg))\n\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 1026) {\n\t\t\tthis._clipItem = undefined;\n\t\t}\n\t},\n\n\t_getClipItem: function() {\n\t\tvar clipItem = this._clipItem;\n\t\tif (clipItem === undefined) {\n\t\t\tclipItem = null;\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar child = this._children[i];\n\t\t\t\tif (child._clipMask) {\n\t\t\t\t\tclipItem = child;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._clipItem = clipItem;\n\t\t}\n\t\treturn clipItem;\n\t},\n\n\tisClipped: function() {\n\t\treturn !!this._getClipItem();\n\t},\n\n\tsetClipped: function(clipped) {\n\t\tvar child = this.getFirstChild();\n\t\tif (child)\n\t\t\tchild.setClipMask(clipped);\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tvar clip = param.clip,\n\t\t\tclipItem = !clip && this._getClipItem(),\n\t\t\tdraw = true;\n\t\tparam = param.extend({ clipItem: clipItem, clip: false });\n\t\tif (clip) {\n\t\t\tif (this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t\tdraw = false;\n\t\t\t} else {\n\t\t\t\tctx.beginPath();\n\t\t\t\tparam.dontStart = param.dontFinish = true;\n\t\t\t}\n\t\t} else if (clipItem) {\n\t\t\tclipItem.draw(ctx, param.extend({ clip: true }));\n\t\t}\n\t\tif (draw) {\n\t\t\tfor (var i = 0, l = this._children.length; i < l; i++) {\n\t\t\t\tvar item = this._children[i];\n\t\t\t\tif (item !== clipItem)\n\t\t\t\t\titem.draw(ctx, param);\n\t\t\t}\n\t\t}\n\t\tif (clip) {\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\t}\n});\n\nvar Layer = Group.extend({\n\t_class: 'Layer',\n\n\tinitialize: function Layer(arg) {\n\t\tvar props = Base.isPlainObject(arg)\n\t\t\t\t? new Base(arg)\n\t\t\t\t: { children: Array.isArray(arg) ? arg : arguments },\n\t\t\tinsert = props.insert;\n\t\tprops.insert = false;\n\t\tGroup.call(this, props);\n\t\tif (insert || insert === undefined) {\n\t\t\tthis._project.addChild(this);\n\t\t\tthis.activate();\n\t\t}\n\t},\n\n\t_remove: function _remove(notifySelf, notifyParent) {\n\t\tif (this._parent)\n\t\t\treturn _remove.base.call(this, notifySelf, notifyParent);\n\t\tif (this._index != null) {\n\t\t\tvar project = this._project;\n\t\t\tif (project._activeLayer === this)\n\t\t\t\tproject._activeLayer = this.getNextSibling()\n\t\t\t\t\t\t|| this.getPreviousSibling();\n\t\t\tBase.splice(project.layers, null, this._index, 1);\n\t\t\tthis._installEvents(false);\n\t\t\tif (notifySelf && project._changes)\n\t\t\t\tthis._changed(5);\n\t\t\tif (notifyParent) {\n\t\t\t\tproject._needsUpdate = true;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetNextSibling: function getNextSibling() {\n\t\treturn this._parent ? getNextSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index + 1] || null;\n\t},\n\n\tgetPreviousSibling: function getPreviousSibling() {\n\t\treturn this._parent ? getPreviousSibling.base.call(this)\n\t\t\t\t: this._project.layers[this._index - 1] || null;\n\t},\n\n\tisInserted: function isInserted() {\n\t\treturn this._parent ? isInserted.base.call(this) : this._index != null;\n\t},\n\n\tactivate: function() {\n\t\tthis._project._activeLayer = this;\n\t},\n\n\t_insertSibling: function _insertSibling(index, item, _preserve) {\n\t\treturn !this._parent\n\t\t\t\t? this._project.insertChild(index, item, _preserve)\n\t\t\t\t: _insertSibling.base.call(this, index, item, _preserve);\n\t}\n});\n\nvar Shape = Item.extend({\n\t_class: 'Shape',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\ttype: null,\n\t\tsize: null,\n\t\tradius: null\n\t},\n\n\tinitialize: function Shape(props) {\n\t\tthis._initialize(props);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._type === item._type\n\t\t\t&& this._size.equals(item._size)\n\t\t\t&& Base.equals(this._radius, item._radius);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Shape(Item.NO_INSERT);\n\t\tcopy.setType(this._type);\n\t\tcopy.setSize(this._size);\n\t\tcopy.setRadius(this._radius);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetType: function() {\n\t\treturn this._type;\n\t},\n\n\tsetType: function(type) {\n\t\tthis._type = type;\n\t},\n\n\tgetShape: '#getType',\n\tsetShape: '#setType',\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!this._size) {\n\t\t\tthis._size = size.clone();\n\t\t} else if (!this._size.equals(size)) {\n\t\t\tvar type = this._type,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tif (type === 'rectangle') {\n\t\t\t\tvar radius = Size.min(this._radius, size.divide(2));\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t} else if (type === 'circle') {\n\t\t\t\twidth = height = (width + height) / 2;\n\t\t\t\tthis._radius = width / 2;\n\t\t\t} else if (type === 'ellipse') {\n\t\t\t\tthis._radius.set(width / 2, height / 2);\n\t\t\t}\n\t\t\tthis._size.set(width, height);\n\t\t\tthis._changed(9);\n\t\t}\n\t},\n\n\tgetRadius: function() {\n\t\tvar rad = this._radius;\n\t\treturn this._type === 'circle'\n\t\t\t\t? rad\n\t\t\t\t: new LinkedSize(rad.width, rad.height, this, 'setRadius');\n\t},\n\n\tsetRadius: function(radius) {\n\t\tvar type = this._type;\n\t\tif (type === 'circle') {\n\t\t\tif (radius === this._radius)\n\t\t\t\treturn;\n\t\t\tvar size = radius * 2;\n\t\t\tthis._radius = radius;\n\t\t\tthis._size.set(size, size);\n\t\t} else {\n\t\t\tradius = Size.read(arguments);\n\t\t\tif (!this._radius) {\n\t\t\t\tthis._radius = radius.clone();\n\t\t\t} else {\n\t\t\t\tif (this._radius.equals(radius))\n\t\t\t\t\treturn;\n\t\t\t\tthis._radius.set(radius.width, radius.height);\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar size = Size.max(this._size, radius.multiply(2));\n\t\t\t\t\tthis._size.set(size.width, size.height);\n\t\t\t\t} else if (type === 'ellipse') {\n\t\t\t\t\tthis._size.set(radius.width * 2, radius.height * 2);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._changed(9);\n\t},\n\n\tisEmpty: function() {\n\t\treturn false;\n\t},\n\n\ttoPath: function(insert) {\n\t\tvar path = this._clone(new Path[Base.capitalize(this._type)]({\n\t\t\tcenter: new Point(),\n\t\t\tsize: this._size,\n\t\t\tradius: this._radius,\n\t\t\tinsert: false\n\t\t}), insert);\n\t\tif (paper.settings.applyMatrix)\n\t\t\tpath.setApplyMatrix(true);\n\t\treturn path;\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar style = this._style,\n\t\t\thasFill = style.hasFill(),\n\t\t\thasStroke = style.hasStroke(),\n\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\tuntransformed = !strokeMatrix;\n\t\tif (hasFill || hasStroke || dontPaint) {\n\t\t\tvar type = this._type,\n\t\t\t\tradius = this._radius,\n\t\t\t\tisCircle = type === 'circle';\n\t\t\tif (!param.dontStart)\n\t\t\t\tctx.beginPath();\n\t\t\tif (untransformed && isCircle) {\n\t\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2, true);\n\t\t\t} else {\n\t\t\t\tvar rx = isCircle ? radius : radius.width,\n\t\t\t\t\try = isCircle ? radius : radius.height,\n\t\t\t\t\tsize = this._size,\n\t\t\t\t\twidth = size.width,\n\t\t\t\t\theight = size.height;\n\t\t\t\tif (untransformed && type === 'rectangle' && rx === 0 && ry === 0) {\n\t\t\t\t\tctx.rect(-width / 2, -height / 2, width, height);\n\t\t\t\t} else {\n\t\t\t\t\tvar x = width / 2,\n\t\t\t\t\t\ty = height / 2,\n\t\t\t\t\t\tkappa = 1 - 0.5522847498307936,\n\t\t\t\t\t\tcx = rx * kappa,\n\t\t\t\t\t\tcy = ry * kappa,\n\t\t\t\t\t\tc = [\n\t\t\t\t\t\t\t-x, -y + ry,\n\t\t\t\t\t\t\t-x, -y + cy,\n\t\t\t\t\t\t\t-x + cx, -y,\n\t\t\t\t\t\t\t-x + rx, -y,\n\t\t\t\t\t\t\tx - rx, -y,\n\t\t\t\t\t\t\tx - cx, -y,\n\t\t\t\t\t\t\tx, -y + cy,\n\t\t\t\t\t\t\tx, -y + ry,\n\t\t\t\t\t\t\tx, y - ry,\n\t\t\t\t\t\t\tx, y - cy,\n\t\t\t\t\t\t\tx - cx, y,\n\t\t\t\t\t\t\tx - rx, y,\n\t\t\t\t\t\t\t-x + rx, y,\n\t\t\t\t\t\t\t-x + cx, y,\n\t\t\t\t\t\t\t-x, y - cy,\n\t\t\t\t\t\t\t-x, y - ry\n\t\t\t\t\t\t];\n\t\t\t\t\tif (strokeMatrix)\n\t\t\t\t\t\tstrokeMatrix.transform(c, c, 32);\n\t\t\t\t\tctx.moveTo(c[0], c[1]);\n\t\t\t\t\tctx.bezierCurveTo(c[2], c[3], c[4], c[5], c[6], c[7]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[8], c[9]);\n\t\t\t\t\tctx.bezierCurveTo(c[10], c[11], c[12], c[13], c[14], c[15]);\n\t\t\t\t\tif (y !== ry)\n\t\t\t\t\t\tctx.lineTo(c[16], c[17]);\n\t\t\t\t\tctx.bezierCurveTo(c[18], c[19], c[20], c[21], c[22], c[23]);\n\t\t\t\t\tif (x !== rx)\n\t\t\t\t\t\tctx.lineTo(c[24], c[25]);\n\t\t\t\t\tctx.bezierCurveTo(c[26], c[27], c[28], c[29], c[30], c[31]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t}\n\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tif (hasFill) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (hasStroke)\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\tif (getter !== 'getBounds' && this.hasStroke())\n\t\t\trect = rect.expand(this.getStrokeWidth());\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t}\n},\nnew function() {\n\n\tfunction getCornerCenter(that, point, expand) {\n\t\tvar radius = that._radius;\n\t\tif (!radius.isZero()) {\n\t\t\tvar halfSize = that._size.divide(2);\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tvar dir = new Point(i & 1 ? 1 : -1, i > 1 ? 1 : -1),\n\t\t\t\t\tcorner = dir.multiply(halfSize),\n\t\t\t\t\tcenter = corner.subtract(dir.multiply(radius)),\n\t\t\t\t\trect = new Rectangle(corner, center);\n\t\t\t\tif ((expand ? rect.expand(expand) : rect).contains(point))\n\t\t\t\t\treturn center;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction getEllipseRadius(point, radius) {\n\t\tvar angle = point.getAngleInRadians(),\n\t\t\twidth = radius.width * 2,\n\t\t\theight = radius.height * 2,\n\t\t\tx = width * Math.sin(angle),\n\t\t\ty = height * Math.cos(angle);\n\t\treturn width * height / (2 * Math.sqrt(x * x + y * y));\n\t}\n\n\treturn {\n\t\t_contains: function _contains(point) {\n\t\t\tif (this._type === 'rectangle') {\n\t\t\t\tvar center = getCornerCenter(this, point);\n\t\t\t\treturn center\n\t\t\t\t\t\t? point.subtract(center).divide(this._radius)\n\t\t\t\t\t\t\t.getLength() <= 1\n\t\t\t\t\t\t: _contains.base.call(this, point);\n\t\t\t} else {\n\t\t\t\treturn point.divide(this.size).getLength() <= 0.5;\n\t\t\t}\n\t\t},\n\n\t\t_hitTestSelf: function _hitTestSelf(point, options) {\n\t\t\tvar hit = false;\n\t\t\tif (this.hasStroke()) {\n\t\t\t\tvar type = this._type,\n\t\t\t\t\tradius = this._radius,\n\t\t\t\t\tstrokeWidth = this.getStrokeWidth() + 2 * options.tolerance;\n\t\t\t\tif (type === 'rectangle') {\n\t\t\t\t\tvar center = getCornerCenter(this, point, strokeWidth);\n\t\t\t\t\tif (center) {\n\t\t\t\t\t\tvar pt = point.subtract(center);\n\t\t\t\t\t\thit = 2 * Math.abs(pt.getLength()\n\t\t\t\t\t\t\t\t- getEllipseRadius(pt, radius)) <= strokeWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar rect = new Rectangle(this._size).setCenter(0, 0),\n\t\t\t\t\t\t\touter = rect.expand(strokeWidth),\n\t\t\t\t\t\t\tinner = rect.expand(-strokeWidth);\n\t\t\t\t\t\thit = outer._containsPoint(point)\n\t\t\t\t\t\t\t\t&& !inner._containsPoint(point);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (type === 'ellipse')\n\t\t\t\t\t\tradius = getEllipseRadius(point, radius);\n\t\t\t\t\thit = 2 * Math.abs(point.getLength() - radius)\n\t\t\t\t\t\t\t<= strokeWidth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn hit\n\t\t\t\t\t? new HitResult('stroke', this)\n\t\t\t\t\t: _hitTestSelf.base.apply(this, arguments);\n\t\t}\n\t};\n}, {\n\nstatics: new function() {\n\tfunction createShape(type, point, size, radius, args) {\n\t\tvar item = new Shape(Base.getNamed(args));\n\t\titem._type = type;\n\t\titem._size = size;\n\t\titem._radius = radius;\n\t\treturn item.translate(point);\n\t}\n\n\treturn {\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createShape('circle', center, new Size(radius * 2), radius,\n\t\t\t\t\targuments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.min(Size.readNamed(arguments, 'radius'),\n\t\t\t\t\t\trect.getSize(true).divide(2));\n\t\t\treturn createShape('rectangle', rect.getCenter(true),\n\t\t\t\t\trect.getSize(true), radius, arguments);\n\t\t},\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments),\n\t\t\t\tradius = ellipse.radius;\n\t\t\treturn createShape('ellipse', ellipse.center, radius.multiply(2),\n\t\t\t\t\tradius, arguments);\n\t\t},\n\n\t\t_readEllipse: function(args) {\n\t\t\tvar center,\n\t\t\t\tradius;\n\t\t\tif (Base.hasNamed(args, 'radius')) {\n\t\t\t\tcenter = Point.readNamed(args, 'center');\n\t\t\t\tradius = Size.readNamed(args, 'radius');\n\t\t\t} else {\n\t\t\t\tvar rect = Rectangle.readNamed(args, 'rectangle');\n\t\t\t\tcenter = rect.getCenter(true);\n\t\t\t\tradius = rect.getSize(true).divide(2);\n\t\t\t}\n\t\t\treturn { center: center, radius: radius };\n\t\t}\n\t};\n}});\n\nvar Raster = Item.extend({\n\t_class: 'Raster',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: 'getBounds',\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tcrossOrigin: null,\n\t\tsource: null\n\t},\n\n\tinitialize: function Raster(object, position) {\n\t\tif (!this._initialize(object,\n\t\t\t\tposition !== undefined && Point.read(arguments, 1))) {\n\t\t\tif (typeof object === 'string') {\n\t\t\t\tthis.setSource(object);\n\t\t\t} else {\n\t\t\t\tthis.setImage(object);\n\t\t\t}\n\t\t}\n\t\tif (!this._size) {\n\t\t\tthis._size = new Size();\n\t\t\tthis._loaded = false;\n\t\t}\n\t},\n\n\t_equals: function(item) {\n\t\treturn this.getSource() === item.getSource();\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Raster(Item.NO_INSERT),\n\t\t\timage = this._image,\n\t\t\tcanvas = this._canvas;\n\t\tif (image) {\n\t\t\tcopy.setImage(image);\n\t\t} else if (canvas) {\n\t\t\tvar copyCanvas = CanvasProvider.getCanvas(this._size);\n\t\t\tcopyCanvas.getContext('2d').drawImage(canvas, 0, 0);\n\t\t\tcopy.setImage(copyCanvas);\n\t\t}\n\t\tcopy._crossOrigin = this._crossOrigin;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tgetSize: function() {\n\t\tvar size = this._size;\n\t\treturn new LinkedSize(size ? size.width : 0, size ? size.height : 0,\n\t\t\t\tthis, 'setSize');\n\t},\n\n\tsetSize: function() {\n\t\tvar size = Size.read(arguments);\n\t\tif (!size.equals(this._size)) {\n\t\t\tif (size.width > 0 && size.height > 0) {\n\t\t\t\tvar element = this.getElement();\n\t\t\t\tthis.setImage(CanvasProvider.getCanvas(size));\n\t\t\t\tif (element)\n\t\t\t\t\tthis.getContext(true).drawImage(element, 0, 0,\n\t\t\t\t\t\t\tsize.width, size.height);\n\t\t\t} else {\n\t\t\t\tif (this._canvas)\n\t\t\t\t\tCanvasProvider.release(this._canvas);\n\t\t\t\tthis._size = size.clone();\n\t\t\t}\n\t\t}\n\t},\n\n\tgetWidth: function() {\n\t\treturn this._size ? this._size.width : 0;\n\t},\n\n\tsetWidth: function(width) {\n\t\tthis.setSize(width, this.getHeight());\n\t},\n\n\tgetHeight: function() {\n\t\treturn this._size ? this._size.height : 0;\n\t},\n\n\tsetHeight: function(height) {\n\t\tthis.setSize(this.getWidth(), height);\n\t},\n\n\tisEmpty: function() {\n\t\tvar size = this._size;\n\t\treturn !size || size.width === 0 && size.height === 0;\n\t},\n\n\tgetResolution: function() {\n\t\tvar matrix = this._matrix,\n\t\t\torig = new Point(0, 0).transform(matrix),\n\t\t\tu = new Point(1, 0).transform(matrix).subtract(orig),\n\t\t\tv = new Point(0, 1).transform(matrix).subtract(orig);\n\t\treturn new Size(\n\t\t\t72 / u.getLength(),\n\t\t\t72 / v.getLength()\n\t\t);\n\t},\n\n\tgetPpi: '#getResolution',\n\n\tgetImage: function() {\n\t\treturn this._image;\n\t},\n\n\tsetImage: function(image) {\n\t\tif (this._canvas)\n\t\t\tCanvasProvider.release(this._canvas);\n\t\tif (image && image.getContext) {\n\t\t\tthis._image = null;\n\t\t\tthis._canvas = image;\n\t\t\tthis._loaded = true;\n\t\t} else {\n\t\t\tthis._image = image;\n\t\t\tthis._canvas = null;\n\t\t\tthis._loaded = image && image.complete;\n\t\t}\n\t\tthis._size = new Size(\n\t\t\t\timage ? image.naturalWidth || image.width : 0,\n\t\t\t\timage ? image.naturalHeight || image.height : 0);\n\t\tthis._context = null;\n\t\tthis._changed(521);\n\t},\n\n\tgetCanvas: function() {\n\t\tif (!this._canvas) {\n\t\t\tvar ctx = CanvasProvider.getContext(this._size);\n\t\t\ttry {\n\t\t\t\tif (this._image)\n\t\t\t\t\tctx.drawImage(this._image, 0, 0);\n\t\t\t\tthis._canvas = ctx.canvas;\n\t\t\t} catch (e) {\n\t\t\t\tCanvasProvider.release(ctx);\n\t\t\t}\n\t\t}\n\t\treturn this._canvas;\n\t},\n\n\tsetCanvas: '#setImage',\n\n\tgetContext: function(modify) {\n\t\tif (!this._context)\n\t\t\tthis._context = this.getCanvas().getContext('2d');\n\t\tif (modify) {\n\t\t\tthis._image = null;\n\t\t\tthis._changed(513);\n\t\t}\n\t\treturn this._context;\n\t},\n\n\tsetContext: function(context) {\n\t\tthis._context = context;\n\t},\n\n\tgetSource: function() {\n\t\treturn this._image && this._image.src || this.toDataURL();\n\t},\n\n\tsetSource: function(src) {\n\t\tvar that = this,\n\t\t\tcrossOrigin = this._crossOrigin,\n\t\t\timage;\n\n\t\tfunction loaded() {\n\t\t\tvar view = that.getView();\n\t\t\tif (view) {\n\t\t\t\tpaper = view._scope;\n\t\t\t\tthat.setImage(image);\n\t\t\t\tthat.emit('load');\n\t\t\t\tview.update();\n\t\t\t}\n\t\t}\n\n\t\timage = document.getElementById(src) || new Image();\n\t\tif (crossOrigin)\n\t\t\timage.crossOrigin = crossOrigin;\n\t\tif (image.naturalWidth && image.naturalHeight) {\n\t\t\tsetTimeout(loaded, 0);\n\t\t} else {\n\t\t\tDomEvent.add(image, { load: loaded });\n\t\t\tif (!image.src)\n\t\t\t\timage.src = src;\n\t\t}\n\t\tthis.setImage(image);\n\t},\n\n\tgetCrossOrigin: function() {\n\t\treturn this._image && this._image.crossOrigin || this._crossOrigin || '';\n\t},\n\n\tsetCrossOrigin: function(crossOrigin) {\n\t\tthis._crossOrigin = crossOrigin;\n\t\tif (this._image)\n\t\t\tthis._image.crossOrigin = crossOrigin;\n\t},\n\n\tgetElement: function() {\n\t\treturn this._canvas || this._loaded && this._image;\n\t}\n}, {\n\tbeans: false,\n\n\tgetSubCanvas: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\tctx = CanvasProvider.getContext(rect.getSize());\n\t\tctx.drawImage(this.getCanvas(), rect.x, rect.y,\n\t\t\t\trect.width, rect.height, 0, 0, rect.width, rect.height);\n\t\treturn ctx.canvas;\n\t},\n\n\tgetSubRaster: function() {\n\t\tvar rect = Rectangle.read(arguments),\n\t\t\traster = new Raster(Item.NO_INSERT);\n\t\traster.setImage(this.getSubCanvas(rect));\n\t\traster.translate(rect.getCenter().subtract(this.getSize().divide(2)));\n\t\traster._matrix.preConcatenate(this._matrix);\n\t\traster.insertAbove(this);\n\t\treturn raster;\n\t},\n\n\ttoDataURL: function() {\n\t\tvar src = this._image && this._image.src;\n\t\tif (/^data:/.test(src))\n\t\t\treturn src;\n\t\tvar canvas = this.getCanvas();\n\t\treturn canvas ? canvas.toDataURL() : null;\n\t},\n\n\tdrawImage: function(image ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).drawImage(image, point.x, point.y);\n\t},\n\n\tgetAverageColor: function(object) {\n\t\tvar bounds, path;\n\t\tif (!object) {\n\t\t\tbounds = this.getBounds();\n\t\t} else if (object instanceof PathItem) {\n\t\t\tpath = object;\n\t\t\tbounds = object.getBounds();\n\t\t} else if (object.width) {\n\t\t\tbounds = new Rectangle(object);\n\t\t} else if (object.x) {\n\t\t\tbounds = new Rectangle(object.x - 0.5, object.y - 0.5, 1, 1);\n\t\t}\n\t\tvar sampleSize = 32,\n\t\t\twidth = Math.min(bounds.width, sampleSize),\n\t\t\theight = Math.min(bounds.height, sampleSize);\n\t\tvar ctx = Raster._sampleContext;\n\t\tif (!ctx) {\n\t\t\tctx = Raster._sampleContext = CanvasProvider.getContext(\n\t\t\t\t\tnew Size(sampleSize));\n\t\t} else {\n\t\t\tctx.clearRect(0, 0, sampleSize + 1, sampleSize + 1);\n\t\t}\n\t\tctx.save();\n\t\tvar matrix = new Matrix()\n\t\t\t\t.scale(width / bounds.width, height / bounds.height)\n\t\t\t\t.translate(-bounds.x, -bounds.y);\n\t\tmatrix.applyToContext(ctx);\n\t\tif (path)\n\t\t\tpath.draw(ctx, new Base({ clip: true, matrices: [matrix] }));\n\t\tthis._matrix.applyToContext(ctx);\n\t\tvar element = this.getElement(),\n\t\t\tsize = this._size;\n\t\tif (element)\n\t\t\tctx.drawImage(element, -size.width / 2, -size.height / 2);\n\t\tctx.restore();\n\t\tvar pixels = ctx.getImageData(0.5, 0.5, Math.ceil(width),\n\t\t\t\tMath.ceil(height)).data,\n\t\t\tchannels = [0, 0, 0],\n\t\t\ttotal = 0;\n\t\tfor (var i = 0, l = pixels.length; i < l; i += 4) {\n\t\t\tvar alpha = pixels[i + 3];\n\t\t\ttotal += alpha;\n\t\t\talpha /= 255;\n\t\t\tchannels[0] += pixels[i] * alpha;\n\t\t\tchannels[1] += pixels[i + 1] * alpha;\n\t\t\tchannels[2] += pixels[i + 2] * alpha;\n\t\t}\n\t\tfor (var i = 0; i < 3; i++)\n\t\t\tchannels[i] /= total;\n\t\treturn total ? Color.read(channels) : null;\n\t},\n\n\tgetPixel: function() {\n\t\tvar point = Point.read(arguments);\n\t\tvar data = this.getContext().getImageData(point.x, point.y, 1, 1).data;\n\t\treturn new Color('rgb', [data[0] / 255, data[1] / 255, data[2] / 255],\n\t\t\t\tdata[3] / 255);\n\t},\n\n\tsetPixel: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcolor = Color.read(arguments),\n\t\t\tcomponents = color._convert('rgb'),\n\t\t\talpha = color._alpha,\n\t\t\tctx = this.getContext(true),\n\t\t\timageData = ctx.createImageData(1, 1),\n\t\t\tdata = imageData.data;\n\t\tdata[0] = components[0] * 255;\n\t\tdata[1] = components[1] * 255;\n\t\tdata[2] = components[2] * 255;\n\t\tdata[3] = alpha != null ? alpha * 255 : 255;\n\t\tctx.putImageData(imageData, point.x, point.y);\n\t},\n\n\tcreateImageData: function() {\n\t\tvar size = Size.read(arguments);\n\t\treturn this.getContext().createImageData(size.width, size.height);\n\t},\n\n\tgetImageData: function() {\n\t\tvar rect = Rectangle.read(arguments);\n\t\tif (rect.isEmpty())\n\t\t\trect = new Rectangle(this._size);\n\t\treturn this.getContext().getImageData(rect.x, rect.y,\n\t\t\t\trect.width, rect.height);\n\t},\n\n\tsetImageData: function(data ) {\n\t\tvar point = Point.read(arguments, 1);\n\t\tthis.getContext(true).putImageData(data, point.x, point.y);\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar rect = new Rectangle(this._size).setCenter(0, 0);\n\t\treturn matrix ? matrix._transformBounds(rect) : rect;\n\t},\n\n\t_hitTestSelf: function(point) {\n\t\tif (this._contains(point)) {\n\t\t\tvar that = this;\n\t\t\treturn new HitResult('pixel', that, {\n\t\t\t\toffset: point.add(that._size.divide(2)).round(),\n\t\t\t\tcolor: {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\treturn that.getPixel(this.offset);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\n\t_draw: function(ctx) {\n\t\tvar element = this.getElement();\n\t\tif (element) {\n\t\t\tctx.globalAlpha = this._opacity;\n\t\t\tctx.drawImage(element,\n\t\t\t\t\t-this._size.width / 2, -this._size.height / 2);\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn true;\n\t}\n});\n\nvar PlacedSymbol = Item.extend({\n\t_class: 'PlacedSymbol',\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_boundsGetter: { getBounds: 'getStrokeBounds' },\n\t_boundsSelected: true,\n\t_serializeFields: {\n\t\tsymbol: null\n\t},\n\n\tinitialize: function PlacedSymbol(arg0, arg1) {\n\t\tif (!this._initialize(arg0,\n\t\t\t\targ1 !== undefined && Point.read(arguments, 1)))\n\t\t\tthis.setSymbol(arg0 instanceof Symbol ? arg0 : new Symbol(arg0));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._symbol === item._symbol;\n\t},\n\n\tgetSymbol: function() {\n\t\treturn this._symbol;\n\t},\n\n\tsetSymbol: function(symbol) {\n\t\tthis._symbol = symbol;\n\t\tthis._changed(9);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new PlacedSymbol(Item.NO_INSERT);\n\t\tcopy.setSymbol(this._symbol);\n\t\treturn this._clone(copy, insert);\n\t},\n\n\tisEmpty: function() {\n\t\treturn this._symbol._definition.isEmpty();\n\t},\n\n\t_getBounds: function(getter, matrix, cacheItem) {\n\t\tvar definition = this.symbol._definition;\n\t\treturn definition._getCachedBounds(getter,\n\t\t\t\tmatrix && matrix.chain(definition._matrix), cacheItem);\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar res = this._symbol._definition._hitTest(point, options);\n\t\tif (res)\n\t\t\tres.item = this;\n\t\treturn res;\n\t},\n\n\t_draw: function(ctx, param) {\n\t\tthis.symbol._definition.draw(ctx, param);\n\t}\n\n});\n\nvar HitResult = Base.extend({\n\t_class: 'HitResult',\n\n\tinitialize: function HitResult(type, item, values) {\n\t\tthis.type = type;\n\t\tthis.item = item;\n\t\tif (values) {\n\t\t\tvalues.enumerable = true;\n\t\t\tthis.inject(values);\n\t\t}\n\t},\n\n\tstatics: {\n\t\tgetOptions: function(options) {\n\t\t\treturn new Base({\n\t\t\t\ttype: null,\n\t\t\t\ttolerance: paper.settings.hitTolerance,\n\t\t\t\tfill: !options,\n\t\t\t\tstroke: !options,\n\t\t\t\tsegments: !options,\n\t\t\t\thandles: false,\n\t\t\t\tends: false,\n\t\t\t\tcenter: false,\n\t\t\t\tbounds: false,\n\t\t\t\tguides: false,\n\t\t\t\tselected: false\n\t\t\t}, options);\n\t\t}\n\t}\n});\n\nvar Segment = Base.extend({\n\t_class: 'Segment',\n\tbeans: true,\n\n\tinitialize: function Segment(arg0, arg1, arg2, arg3, arg4, arg5) {\n\t\tvar count = arguments.length,\n\t\t\tpoint, handleIn, handleOut;\n\t\tif (count === 0) {\n\t\t} else if (count === 1) {\n\t\t\tif (arg0.point) {\n\t\t\t\tpoint = arg0.point;\n\t\t\t\thandleIn = arg0.handleIn;\n\t\t\t\thandleOut = arg0.handleOut;\n\t\t\t} else {\n\t\t\t\tpoint = arg0;\n\t\t\t}\n\t\t} else if (count === 2 && typeof arg0 === 'number') {\n\t\t\tpoint = arguments;\n\t\t} else if (count <= 3) {\n\t\t\tpoint = arg0;\n\t\t\thandleIn = arg1;\n\t\t\thandleOut = arg2;\n\t\t} else {\n\t\t\tpoint = arg0 !== undefined ? [ arg0, arg1 ] : null;\n\t\t\thandleIn = arg2 !== undefined ? [ arg2, arg3 ] : null;\n\t\t\thandleOut = arg4 !== undefined ? [ arg4, arg5 ] : null;\n\t\t}\n\t\tnew SegmentPoint(point, this, '_point');\n\t\tnew SegmentPoint(handleIn, this, '_handleIn');\n\t\tnew SegmentPoint(handleOut, this, '_handleOut');\n\t},\n\n\t_serialize: function(options) {\n\t\treturn Base.serialize(this.isStraight() ? this._point\n\t\t\t\t: [this._point, this._handleIn, this._handleOut],\n\t\t\t\toptions, true);\n\t},\n\n\t_changed: function(point) {\n\t\tvar path = this._path;\n\t\tif (!path)\n\t\t\treturn;\n\t\tvar curves = path._curves,\n\t\t\tindex = this._index,\n\t\t\tcurve;\n\t\tif (curves) {\n\t\t\tif ((!point || point === this._point || point === this._handleIn)\n\t\t\t\t\t&& (curve = index > 0 ? curves[index - 1] : path._closed\n\t\t\t\t\t\t? curves[curves.length - 1] : null))\n\t\t\t\tcurve._changed();\n\t\t\tif ((!point || point === this._point || point === this._handleOut)\n\t\t\t\t\t&& (curve = curves[index]))\n\t\t\t\tcurve._changed();\n\t\t}\n\t\tpath._changed(25);\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._point.set(point.x, point.y);\n\t},\n\n\tgetHandleIn: function() {\n\t\treturn this._handleIn;\n\t},\n\n\tsetHandleIn: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleIn.set(point.x, point.y);\n\t},\n\n\tgetHandleOut: function() {\n\t\treturn this._handleOut;\n\t},\n\n\tsetHandleOut: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._handleOut.set(point.x, point.y);\n\t},\n\n\thasHandles: function() {\n\t\treturn !this.isStraight();\n\t},\n\n\tisStraight: function() {\n\t\treturn this._handleIn.isZero() && this._handleOut.isZero();\n\t},\n\n\tisLinear: function() {\n\t\treturn Segment.isLinear(this, this.getNext());\n\t},\n\n\tisCollinear: function(segment) {\n\t\treturn Segment.isCollinear(this, this.getNext(),\n\t\t\t\tsegment, segment.getNext());\n\t},\n\n\tisColinear: '#isCollinear',\n\n\tisOrthogonal: function() {\n\t\treturn Segment.isOrthogonal(this.getPrevious(), this, this.getNext());\n\t},\n\n\tisOrthogonalArc: function() {\n\t\treturn Segment.isOrthogonalArc(this, this.getNext());\n\t},\n\n\tisArc: '#isOrthogonalArc',\n\n\t_selectionState: 0,\n\n\tisSelected: function(_point) {\n\t\tvar state = this._selectionState;\n\t\treturn !_point ? !!(state & 7)\n\t\t\t: _point === this._point ? !!(state & 4)\n\t\t\t: _point === this._handleIn ? !!(state & 1)\n\t\t\t: _point === this._handleOut ? !!(state & 2)\n\t\t\t: false;\n\t},\n\n\tsetSelected: function(selected, _point) {\n\t\tvar path = this._path,\n\t\t\tselected = !!selected,\n\t\t\tstate = this._selectionState,\n\t\t\toldState = state,\n\t\t\tflag = !_point ? 7\n\t\t\t\t\t: _point === this._point ? 4\n\t\t\t\t\t: _point === this._handleIn ? 1\n\t\t\t\t\t: _point === this._handleOut ? 2\n\t\t\t\t\t: 0;\n\t\tif (selected) {\n\t\t\tstate |= flag;\n\t\t} else {\n\t\t\tstate &= ~flag;\n\t\t}\n\t\tthis._selectionState = state;\n\t\tif (path && state !== oldState) {\n\t\t\tpath._updateSelection(this, oldState, state);\n\t\t\tpath._changed(129);\n\t\t}\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._index !== undefined ? this._index : null;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path || null;\n\t},\n\n\tgetCurve: function() {\n\t\tvar path = this._path,\n\t\t\tindex = this._index;\n\t\tif (path) {\n\t\t\tif (index > 0 && !path._closed\n\t\t\t\t\t&& index === path._segments.length - 1)\n\t\t\t\tindex--;\n\t\t\treturn path.getCurves()[index] || null;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocation: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve\n\t\t\t\t? new CurveLocation(curve, this === curve._segment1 ? 0 : 1)\n\t\t\t\t: null;\n\t},\n\n\tgetNext: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index + 1]\n\t\t\t\t|| this._path._closed && segments[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar segments = this._path && this._path._segments;\n\t\treturn segments && (segments[this._index - 1]\n\t\t\t\t|| this._path._closed && segments[segments.length - 1]) || null;\n\t},\n\n\treverse: function() {\n\t\treturn new Segment(this._point, this._handleOut, this._handleIn);\n\t},\n\n\tremove: function() {\n\t\treturn this._path ? !!this._path.removeSegment(this._index) : false;\n\t},\n\n\tclone: function() {\n\t\treturn new Segment(this._point, this._handleIn, this._handleOut);\n\t},\n\n\tequals: function(segment) {\n\t\treturn segment === this || segment && this._class === segment._class\n\t\t\t\t&& this._point.equals(segment._point)\n\t\t\t\t&& this._handleIn.equals(segment._handleIn)\n\t\t\t\t&& this._handleOut.equals(segment._handleOut)\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point: ' + this._point ];\n\t\tif (!this._handleIn.isZero())\n\t\t\tparts.push('handleIn: ' + this._handleIn);\n\t\tif (!this._handleOut.isZero())\n\t\t\tparts.push('handleOut: ' + this._handleOut);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\n\ttransform: function(matrix) {\n\t\tthis._transformCoordinates(matrix, new Array(6), true);\n\t\tthis._changed();\n\t},\n\n\t_transformCoordinates: function(matrix, coords, change) {\n\t\tvar point = this._point,\n\t\t\thandleIn = !change || !this._handleIn.isZero()\n\t\t\t\t\t? this._handleIn : null,\n\t\t\thandleOut = !change || !this._handleOut.isZero()\n\t\t\t\t\t? this._handleOut : null,\n\t\t\tx = point._x,\n\t\t\ty = point._y,\n\t\t\ti = 2;\n\t\tcoords[0] = x;\n\t\tcoords[1] = y;\n\t\tif (handleIn) {\n\t\t\tcoords[i++] = handleIn._x + x;\n\t\t\tcoords[i++] = handleIn._y + y;\n\t\t}\n\t\tif (handleOut) {\n\t\t\tcoords[i++] = handleOut._x + x;\n\t\t\tcoords[i++] = handleOut._y + y;\n\t\t}\n\t\tif (matrix) {\n\t\t\tmatrix._transformCoordinates(coords, coords, i / 2);\n\t\t\tx = coords[0];\n\t\t\ty = coords[1];\n\t\t\tif (change) {\n\t\t\t\tpoint._x = x;\n\t\t\t\tpoint._y = y;\n\t\t\t\ti  = 2;\n\t\t\t\tif (handleIn) {\n\t\t\t\t\thandleIn._x = coords[i++] - x;\n\t\t\t\t\thandleIn._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t\tif (handleOut) {\n\t\t\t\t\thandleOut._x = coords[i++] - x;\n\t\t\t\t\thandleOut._y = coords[i++] - y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!handleIn) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t\tif (!handleOut) {\n\t\t\t\t\tcoords[i++] = x;\n\t\t\t\t\tcoords[i++] = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn coords;\n\t},\n\n   statics: {\n\n\t\tisLinear: function(seg1, seg2) {\n\t\t\tvar l = seg2._point.subtract(seg1._point);\n\t\t\treturn l.isCollinear(seg1._handleOut)\n\t\t\t\t\t&& l.isCollinear(seg2._handleIn);\n\t\t},\n\n\t\tisCollinear: function(seg1, seg2, seg3, seg4) {\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t\t&& seg3._handleOut.isZero() && seg4._handleIn.isZero()\n\t\t\t\t\t&& seg2._point.subtract(seg1._point).isCollinear(\n\t\t\t\t\t\tseg4._point.subtract(seg3._point));\n\t\t},\n\n\t\tisOrthogonal: function(seg1, seg2, seg3) {\n\t\t\treturn seg1._handleOut.isZero() && seg2._handleIn.isZero()\n\t\t\t\t&& seg2._handleOut.isZero() && seg3._handleIn.isZero()\n\t\t\t\t&& seg2._point.subtract(seg1._point).isOrthogonal(\n\t\t\t\t\t\tseg3._point.subtract(seg2._point));\n\t\t},\n\n\t\tisOrthogonalArc: function(seg1, seg2) {\n\t\t\tvar handle1 = seg1._handleOut,\n\t\t\t\thandle2 = seg2._handleIn,\n\t\t\t\tkappa = 0.5522847498307936;\n\t\t\tif (handle1.isOrthogonal(handle2)) {\n\t\t\t\tvar pt1 = seg1._point,\n\t\t\t\t\tpt2 = seg2._point,\n\t\t\t\t\tcorner = new Line(pt1, handle1, true).intersect(\n\t\t\t\t\t\t\tnew Line(pt2, handle2, true), true);\n\t\t\t\treturn corner && Numerical.isZero(handle1.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt1).getLength() - kappa)\n\t\t\t\t\t&& Numerical.isZero(handle2.getLength() /\n\t\t\t\t\t\tcorner.subtract(pt2).getLength() - kappa);\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t}\n});\n\nvar SegmentPoint = Point.extend({\n\tinitialize: function SegmentPoint(point, owner, key) {\n\t\tvar x, y, selected;\n\t\tif (!point) {\n\t\t\tx = y = 0;\n\t\t} else if ((x = point[0]) !== undefined) {\n\t\t\ty = point[1];\n\t\t} else {\n\t\t\tvar pt = point;\n\t\t\tif ((x = pt.x) === undefined) {\n\t\t\t\tpt = Point.read(arguments);\n\t\t\t\tx = pt.x;\n\t\t\t}\n\t\t\ty = pt.y;\n\t\t\tselected = pt.selected;\n\t\t}\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner = owner;\n\t\towner[key] = this;\n\t\tif (selected)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tset: function(x, y) {\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t\treturn this;\n\t},\n\n\t_serialize: function(options) {\n\t\tvar f = options.formatter,\n\t\t\tx = f.number(this._x),\n\t\t\ty = f.number(this._y);\n\t\treturn this.isSelected()\n\t\t\t\t? { x: x, y: y, selected: true }\n\t\t\t\t: [x, y];\n\t},\n\n\tgetX: function() {\n\t\treturn this._x;\n\t},\n\n\tsetX: function(x) {\n\t\tthis._x = x;\n\t\tthis._owner._changed(this);\n\t},\n\n\tgetY: function() {\n\t\treturn this._y;\n\t},\n\n\tsetY: function(y) {\n\t\tthis._y = y;\n\t\tthis._owner._changed(this);\n\t},\n\n\tisZero: function() {\n\t\treturn Numerical.isZero(this._x) && Numerical.isZero(this._y);\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis._owner.setSelected(selected, this);\n\t},\n\n\tisSelected: function() {\n\t\treturn this._owner.isSelected(this);\n\t}\n});\n\nvar Curve = Base.extend({\n\t_class: 'Curve',\n\n\tinitialize: function Curve(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n\t\tvar count = arguments.length;\n\t\tif (count === 3) {\n\t\t\tthis._path = arg0;\n\t\t\tthis._segment1 = arg1;\n\t\t\tthis._segment2 = arg2;\n\t\t} else if (count === 0) {\n\t\t\tthis._segment1 = new Segment();\n\t\t\tthis._segment2 = new Segment();\n\t\t} else if (count === 1) {\n\t\t\tthis._segment1 = new Segment(arg0.segment1);\n\t\t\tthis._segment2 = new Segment(arg0.segment2);\n\t\t} else if (count === 2) {\n\t\t\tthis._segment1 = new Segment(arg0);\n\t\t\tthis._segment2 = new Segment(arg1);\n\t\t} else {\n\t\t\tvar point1, handle1, handle2, point2;\n\t\t\tif (count === 4) {\n\t\t\t\tpoint1 = arg0;\n\t\t\t\thandle1 = arg1;\n\t\t\t\thandle2 = arg2;\n\t\t\t\tpoint2 = arg3;\n\t\t\t} else if (count === 8) {\n\t\t\t\tpoint1 = [arg0, arg1];\n\t\t\t\tpoint2 = [arg6, arg7];\n\t\t\t\thandle1 = [arg2 - arg0, arg3 - arg1];\n\t\t\t\thandle2 = [arg4 - arg6, arg5 - arg7];\n\t\t\t}\n\t\t\tthis._segment1 = new Segment(point1, null, handle1);\n\t\t\tthis._segment2 = new Segment(point2, handle2, null);\n\t\t}\n\t},\n\n\t_changed: function() {\n\t\tthis._length = this._bounds = undefined;\n\t},\n\n\tgetPoint1: function() {\n\t\treturn this._segment1._point;\n\t},\n\n\tsetPoint1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._point.set(point.x, point.y);\n\t},\n\n\tgetPoint2: function() {\n\t\treturn this._segment2._point;\n\t},\n\n\tsetPoint2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._point.set(point.x, point.y);\n\t},\n\n\tgetHandle1: function() {\n\t\treturn this._segment1._handleOut;\n\t},\n\n\tsetHandle1: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment1._handleOut.set(point.x, point.y);\n\t},\n\n\tgetHandle2: function() {\n\t\treturn this._segment2._handleIn;\n\t},\n\n\tsetHandle2: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis._segment2._handleIn.set(point.x, point.y);\n\t},\n\n\tgetSegment1: function() {\n\t\treturn this._segment1;\n\t},\n\n\tgetSegment2: function() {\n\t\treturn this._segment2;\n\t},\n\n\tgetPath: function() {\n\t\treturn this._path;\n\t},\n\n\tgetIndex: function() {\n\t\treturn this._segment1._index;\n\t},\n\n\tgetNext: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index + 1]\n\t\t\t\t|| this._path._closed && curves[0]) || null;\n\t},\n\n\tgetPrevious: function() {\n\t\tvar curves = this._path && this._path._curves;\n\t\treturn curves && (curves[this._segment1._index - 1]\n\t\t\t\t|| this._path._closed && curves[curves.length - 1]) || null;\n\t},\n\n\tisSelected: function() {\n\t\treturn this.getPoint1().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getHandle2().isSelected()\n\t\t\t\t&& this.getPoint2().isSelected();\n\t},\n\n\tsetSelected: function(selected) {\n\t\tthis.getPoint1().setSelected(selected);\n\t\tthis.getHandle1().setSelected(selected);\n\t\tthis.getHandle2().setSelected(selected);\n\t\tthis.getPoint2().setSelected(selected);\n\t},\n\n\tgetValues: function(matrix) {\n\t\treturn Curve.getValues(this._segment1, this._segment2, matrix);\n\t},\n\n\tgetPoints: function() {\n\t\tvar coords = this.getValues(),\n\t\t\tpoints = [];\n\t\tfor (var i = 0; i < 8; i += 2)\n\t\t\tpoints.push(new Point(coords[i], coords[i + 1]));\n\t\treturn points;\n\t},\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tthis._length = this.isLinear()\n\t\t\t\t? this._segment2._point.getDistance(this._segment1._point)\n\t\t\t\t: Curve.getLength(this.getValues(), 0, 1);\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\treturn Curve.getArea(this.getValues());\n\t},\n\n\tgetPart: function(from, to) {\n\t\treturn new Curve(Curve.getPart(this.getValues(), from, to));\n\t},\n\n\tgetPartLength: function(from, to) {\n\t\treturn Curve.getLength(this.getValues(), from, to);\n\t},\n\n\thasHandles: function() {\n\t\treturn !this._segment1._handleOut.isZero()\n\t\t\t\t|| !this._segment2._handleIn.isZero();\n\t},\n\n\tisLinear: function() {\n\t\treturn Segment.isLinear(this._segment1, this._segment2);\n\t},\n\n\tisCollinear: function(curve) {\n\t\treturn Ssegment.isCollinear(this._segment1, this._segment2,\n\t\t\t\tcurve._segment1, curve._segment2);\n\t},\n\n\tisOrthogonalArc: function() {\n\t\treturn Segment.isOrthogonalArc(this._segment1, this._segment2);\n\t},\n\n\tgetIntersections: function(curve) {\n\t\treturn Curve.filterIntersections(Curve.getIntersections(\n\t\t\t\tthis.getValues(), curve.getValues(), this, curve, []));\n\t},\n\n\t_getParameter: function(offset, isParameter) {\n\t\treturn isParameter\n\t\t\t\t? offset\n\t\t\t\t: offset && offset.curve === this\n\t\t\t\t\t? offset.parameter\n\t\t\t\t\t: offset === undefined && isParameter === undefined\n\t\t\t\t\t\t? 0.5\n\t\t\t\t\t\t: this.getParameterAt(offset, 0);\n\t},\n\n\tdivide: function(offset, isParameter, ignoreLinear) {\n\t\tvar parameter = this._getParameter(offset, isParameter),\n\t\t\ttolerance = 0.000001,\n\t\t\tres = null;\n\t\tif (parameter > tolerance && parameter < 1 - tolerance) {\n\t\t\tvar parts = Curve.subdivide(this.getValues(), parameter),\n\t\t\t\tisLinear = ignoreLinear ? false : this.isLinear(),\n\t\t\t\tleft = parts[0],\n\t\t\t\tright = parts[1];\n\n\t\t\tif (!isLinear) {\n\t\t\t\tthis._segment1._handleOut.set(left[2] - left[0],\n\t\t\t\t\t\tleft[3] - left[1]);\n\t\t\t\tthis._segment2._handleIn.set(right[4] - right[6],\n\t\t\t\t\t\tright[5] - right[7]);\n\t\t\t}\n\n\t\t\tvar x = left[6], y = left[7],\n\t\t\t\tsegment = new Segment(new Point(x, y),\n\t\t\t\t\t\t!isLinear && new Point(left[4] - x, left[5] - y),\n\t\t\t\t\t\t!isLinear && new Point(right[2] - x, right[3] - y));\n\n\t\t\tif (this._path) {\n\t\t\t\tif (this._segment1._index > 0 && this._segment2._index === 0) {\n\t\t\t\t\tthis._path.add(segment);\n\t\t\t\t} else {\n\t\t\t\t\tthis._path.insert(this._segment2._index, segment);\n\t\t\t\t}\n\t\t\t\tres = this;\n\t\t\t} else {\n\t\t\t\tvar end = this._segment2;\n\t\t\t\tthis._segment2 = segment;\n\t\t\t\tres = new Curve(segment, end);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t},\n\n\tsplit: function(offset, isParameter) {\n\t\treturn this._path\n\t\t\t? this._path.split(this._segment1._index,\n\t\t\t\t\tthis._getParameter(offset, isParameter))\n\t\t\t: null;\n\t},\n\n\treverse: function() {\n\t\treturn new Curve(this._segment2.reverse(), this._segment1.reverse());\n\t},\n\n\tremove: function() {\n\t\tvar removed = false;\n\t\tif (this._path) {\n\t\t\tvar segment2 = this._segment2,\n\t\t\t\thandleOut = segment2._handleOut;\n\t\t\tremoved = segment2.remove();\n\t\t\tif (removed)\n\t\t\t\tthis._segment1._handleOut.set(handleOut.x, handleOut.y);\n\t\t}\n\t\treturn removed;\n\t},\n\n\tclone: function() {\n\t\treturn new Curve(this._segment1, this._segment2);\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [ 'point1: ' + this._segment1._point ];\n\t\tif (!this._segment1._handleOut.isZero())\n\t\t\tparts.push('handle1: ' + this._segment1._handleOut);\n\t\tif (!this._segment2._handleIn.isZero())\n\t\t\tparts.push('handle2: ' + this._segment2._handleIn);\n\t\tparts.push('point2: ' + this._segment2._point);\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t},\n\nstatics: {\n\tgetValues: function(segment1, segment2, matrix) {\n\t\tvar p1 = segment1._point,\n\t\t\th1 = segment1._handleOut,\n\t\t\th2 = segment2._handleIn,\n\t\t\tp2 = segment2._point,\n\t\t\tvalues = [\n\t\t\t\tp1._x, p1._y,\n\t\t\t\tp1._x + h1._x, p1._y + h1._y,\n\t\t\t\tp2._x + h2._x, p2._y + h2._y,\n\t\t\t\tp2._x, p2._y\n\t\t\t];\n\t\tif (matrix)\n\t\t\tmatrix._transformCoordinates(values, values, 4);\n\t\treturn values;\n\t},\n\n\tsubdivide: function(v, t) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\tif (t === undefined)\n\t\t\tt = 0.5;\n\t\tvar u = 1 - t,\n\t\t\tp3x = u * p1x + t * c1x, p3y = u * p1y + t * c1y,\n\t\t\tp4x = u * c1x + t * c2x, p4y = u * c1y + t * c2y,\n\t\t\tp5x = u * c2x + t * p2x, p5y = u * c2y + t * p2y,\n\t\t\tp6x = u * p3x + t * p4x, p6y = u * p3y + t * p4y,\n\t\t\tp7x = u * p4x + t * p5x, p7y = u * p4y + t * p5y,\n\t\t\tp8x = u * p6x + t * p7x, p8y = u * p6y + t * p7y;\n\t\treturn [\n\t\t\t[p1x, p1y, p3x, p3y, p6x, p6y, p8x, p8y],\n\t\t\t[p8x, p8y, p7x, p7y, p5x, p5y, p2x, p2y]\n\t\t];\n\t},\n\n\tsolveCubic: function (v, coord, val, roots, min, max) {\n\t\tvar p1 = v[coord],\n\t\t\tc1 = v[coord + 2],\n\t\t\tc2 = v[coord + 4],\n\t\t\tp2 = v[coord + 6],\n\t\t\tc = 3 * (c1 - p1),\n\t\t\tb = 3 * (c2 - c1) - c,\n\t\t\ta = p2 - p1 - c - b;\n\t\treturn Numerical.solveCubic(a, b, c, p1 - val, roots, min, max);\n\t},\n\n\tgetParameterOf: function(v, x, y) {\n\t\tvar tolerance = 0.000001;\n\t\tif (Math.abs(v[0] - x) < tolerance && Math.abs(v[1] - y) < tolerance)\n\t\t\treturn 0;\n\t\tif (Math.abs(v[6] - x) < tolerance && Math.abs(v[7] - y) < tolerance)\n\t\t\treturn 1;\n\t\tvar txs = [],\n\t\t\ttys = [],\n\t\t\tsx = Curve.solveCubic(v, 0, x, txs, 0, 1),\n\t\t\tsy = Curve.solveCubic(v, 1, y, tys, 0, 1),\n\t\t\ttx, ty;\n\t\tfor (var cx = 0;  sx === -1 || cx < sx;) {\n\t\t\tif (sx === -1 || (tx = txs[cx++]) > 0 && tx < 1) {\n\t\t\t\tfor (var cy = 0; sy === -1 || cy < sy;) {\n\t\t\t\t\tif (sy === -1 || (ty = tys[cy++]) > 0 && ty < 1) {\n\t\t\t\t\t\tif (sx === -1) {\n\t\t\t\t\t\t\ttx = ty;\n\t\t\t\t\t\t} else if (sy === -1) {\n\t\t\t\t\t\t\tty = tx;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Math.abs(tx - ty) < tolerance)\n\t\t\t\t\t\t\treturn (tx + ty) * 0.5;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (sx === -1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetPart: function(v, from, to) {\n\t\tif (from > 0)\n\t\t\tv = Curve.subdivide(v, from)[1];\n\t\tif (to < 1)\n\t\t\tv = Curve.subdivide(v, (to - from) / (1 - from))[0];\n\t\treturn v;\n\t},\n\n\thasHandles: function(v) {\n\t\tvar isZero = Numerical.isZero;\n\t\treturn !(isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t&& isZero(v[4] - v[6]) && isZero(v[5] - v[7]));\n\t},\n\n\tisLinear: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tl = new Point(p2x - p1x, p2y - p1y);\n\t\treturn l.isCollinear(new Point(v[2] - p1x, v[3] - p1y))\n\t\t\t\t&& l.isCollinear(new Point(v[4] - p2x, v[5] - p2y));\n\t},\n\n\tisFlatEnough: function(v, tolerance) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\tux = 3 * c1x - 2 * p1x - p2x,\n\t\t\tuy = 3 * c1y - 2 * p1y - p2y,\n\t\t\tvx = 3 * c2x - 2 * p2x - p1x,\n\t\t\tvy = 3 * c2y - 2 * p2y - p1y;\n\t\treturn Math.max(ux * ux, vx * vx) + Math.max(uy * uy, vy * vy)\n\t\t\t\t< 10 * tolerance * tolerance;\n\t},\n\n\tgetArea: function(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7];\n\t\treturn (  3.0 * c1y * p1x - 1.5 * c1y * c2x\n\t\t\t\t- 1.5 * c1y * p2x - 3.0 * p1y * c1x\n\t\t\t\t- 1.5 * p1y * c2x - 0.5 * p1y * p2x\n\t\t\t\t+ 1.5 * c2y * p1x + 1.5 * c2y * c1x\n\t\t\t\t- 3.0 * c2y * p2x + 0.5 * p2y * p1x\n\t\t\t\t+ 1.5 * p2y * c1x + 3.0 * p2y * c2x) / 10;\n\t},\n\n\tgetEdgeSum: function(v) {\n\t\treturn\t  (v[0] - v[2]) * (v[3] + v[1])\n\t\t\t\t+ (v[2] - v[4]) * (v[5] + v[3])\n\t\t\t\t+ (v[4] - v[6]) * (v[7] + v[5]);\n\t},\n\n\tgetBounds: function(v) {\n\t\tvar min = v.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = [0, 0];\n\t\tfor (var i = 0; i < 2; i++)\n\t\t\tCurve._addBounds(v[i], v[i + 2], v[i + 4], v[i + 6],\n\t\t\t\t\ti, 0, min, max, roots);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\t_addBounds: function(v0, v1, v2, v3, coord, padding, min, max, roots) {\n\t\tfunction add(value, padding) {\n\t\t\tvar left = value - padding,\n\t\t\t\tright = value + padding;\n\t\t\tif (left < min[coord])\n\t\t\t\tmin[coord] = left;\n\t\t\tif (right > max[coord])\n\t\t\t\tmax[coord] = right;\n\t\t}\n\t\tvar a = 3 * (v1 - v2) - v0 + v3,\n\t\t\tb = 2 * (v0 + v2) - 4 * v1,\n\t\t\tc = v1 - v0,\n\t\t\tcount = Numerical.solveQuadratic(a, b, c, roots),\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tadd(v3, 0);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar t = roots[i],\n\t\t\t\tu = 1 - t;\n\t\t\tif (tMin < t && t < tMax)\n\t\t\t\tadd(u * u * u * v0\n\t\t\t\t\t+ 3 * u * u * t * v1\n\t\t\t\t\t+ 3 * u * t * t * v2\n\t\t\t\t\t+ t * t * t * v3,\n\t\t\t\t\tpadding);\n\t\t}\n\t}\n}}, Base.each(\n\t['getBounds', 'getStrokeBounds', 'getHandleBounds', 'getRoughBounds'],\n\tfunction(name) {\n\t\tthis[name] = function() {\n\t\t\tif (!this._bounds)\n\t\t\t\tthis._bounds = {};\n\t\t\tvar bounds = this._bounds[name];\n\t\t\tif (!bounds) {\n\t\t\t\tbounds = this._bounds[name] = Path[name]([this._segment1,\n\t\t\t\t\t\tthis._segment2], false, this._path.getStyle());\n\t\t\t}\n\t\t\treturn bounds.clone();\n\t\t};\n\t},\n{\n\n}), {\n\tbeans: false,\n\n\tgetParameterAt: function(offset, start) {\n\t\treturn Curve.getParameterAt(this.getValues(), offset, start);\n\t},\n\n\tgetParameterOf: function() {\n\t\tvar point = Point.read(arguments);\n\t\treturn Curve.getParameterOf(this.getValues(), point.x, point.y);\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar t = isParameter ? offset : this.getParameterAt(offset);\n\t\treturn t != null && t >= 0 && t <= 1\n\t\t\t\t? new CurveLocation(this, t)\n\t\t\t\t: null;\n\t},\n\n\tgetLocationOf: function() {\n\t\treturn this.getLocationAt(this.getParameterOf(Point.read(arguments)),\n\t\t\t\ttrue);\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tvalues = this.getValues(),\n\t\t\tcount = 100,\n\t\t\tminDist = Infinity,\n\t\t\tminT = 0;\n\n\t\tfunction refine(t) {\n\t\t\tif (t >= 0 && t <= 1) {\n\t\t\t\tvar dist = point.getDistance(Curve.getPoint(values, t), true);\n\t\t\t\tif (dist < minDist) {\n\t\t\t\t\tminDist = dist;\n\t\t\t\t\tminT = t;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i <= count; i++)\n\t\t\trefine(i / count);\n\n\t\tvar step = 1 / (count * 2);\n\t\twhile (step > 0.000001) {\n\t\t\tif (!refine(minT - step) && !refine(minT + step))\n\t\t\t\tstep /= 2;\n\t\t}\n\t\tvar pt = Curve.getPoint(values, minT);\n\t\treturn new CurveLocation(this, minT, pt, null, null, null,\n\t\t\t\tpoint.getDistance(pt));\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n\n},\nnew function() {\n\tvar methods = ['getPoint', 'getTangent', 'getNormal', 'getWeightedTangent',\n\t\t'getWeightedNormal', 'getCurvature'];\n\treturn Base.each(methods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar values = this.getValues();\n\t\t\treturn Curve[name](values, isParameter ? offset\n\t\t\t\t\t: Curve.getParameterAt(values, offset, 0));\n\t\t};\n\t}, {\n\t\tstatics: {\n\t\t\tevaluateMethods: methods\n\t\t}\n\t})\n},\nnew function() {\n\n\tfunction getLengthIntegrand(v) {\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\n\t\t\tax = 9 * (c1x - c2x) + 3 * (p2x - p1x),\n\t\t\tbx = 6 * (p1x + c2x) - 12 * c1x,\n\t\t\tcx = 3 * (c1x - p1x),\n\n\t\t\tay = 9 * (c1y - c2y) + 3 * (p2y - p1y),\n\t\t\tby = 6 * (p1y + c2y) - 12 * c1y,\n\t\t\tcy = 3 * (c1y - p1y);\n\n\t\treturn function(t) {\n\t\t\tvar dx = (ax * t + bx) * t + cx,\n\t\t\t\tdy = (ay * t + by) * t + cy;\n\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t};\n\t}\n\n\tfunction getIterations(a, b) {\n\t\treturn Math.max(2, Math.min(16, Math.ceil(Math.abs(b - a) * 32)));\n\t}\n\n\tfunction evaluate(v, t, type, normalized) {\n\t\tif (t == null || t < 0 || t > 1)\n\t\t\treturn null;\n\t\tvar p1x = v[0], p1y = v[1],\n\t\t\tc1x = v[2], c1y = v[3],\n\t\t\tc2x = v[4], c2y = v[5],\n\t\t\tp2x = v[6], p2y = v[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tx, y;\n\n\t\tif (type === 0 && (t < tolerance || t > 1 - tolerance)) {\n\t\t\tvar isZero = t < tolerance;\n\t\t\tx = isZero ? p1x : p2x;\n\t\t\ty = isZero ? p1y : p2y;\n\t\t} else {\n\t\t\tvar cx = 3 * (c1x - p1x),\n\t\t\t\tbx = 3 * (c2x - c1x) - cx,\n\t\t\t\tax = p2x - p1x - cx - bx,\n\n\t\t\t\tcy = 3 * (c1y - p1y),\n\t\t\t\tby = 3 * (c2y - c1y) - cy,\n\t\t\t\tay = p2y - p1y - cy - by;\n\t\t\tif (type === 0) {\n\t\t\t\tx = ((ax * t + bx) * t + cx) * t + p1x;\n\t\t\t\ty = ((ay * t + by) * t + cy) * t + p1y;\n\t\t\t} else {\n\t\t\t\tif (t < tolerance) {\n\t\t\t\t\tx = cx;\n\t\t\t\t\ty = cy;\n\t\t\t\t} else if (t > 1 - tolerance) {\n\t\t\t\t\tx = 3 * (p2x - c2x);\n\t\t\t\t\ty = 3 * (p2y - c2y);\n\t\t\t\t} else {\n\t\t\t\t\tx = (3 * ax * t + 2 * bx) * t + cx;\n\t\t\t\t\ty = (3 * ay * t + 2 * by) * t + cy;\n\t\t\t\t}\n\t\t\t\tif (normalized) {\n\t\t\t\t\tif (x === 0 && y === 0\n\t\t\t\t\t\t\t&& (t < tolerance || t > 1 - tolerance)) {\n\t\t\t\t\t\tx = c2x - c1x;\n\t\t\t\t\t\ty = c2y - c1y;\n\t\t\t\t\t}\n\t\t\t\t\tvar len = Math.sqrt(x * x + y * y);\n\t\t\t\t\tx /= len;\n\t\t\t\t\ty /= len;\n\t\t\t\t}\n\t\t\t\tif (type === 3) {\n\t\t\t\t\tvar x2 = 6 * ax * t + 2 * bx,\n\t\t\t\t\t\ty2 = 6 * ay * t + 2 * by,\n\t\t\t\t\t\td = Math.pow(x * x + y * y, 3 / 2);\n\t\t\t\t\tx = d !== 0 ? (x * y2 - y * x2) / d : 0;\n\t\t\t\t\ty = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn type === 2 ? new Point(y, -x) : new Point(x, y);\n\t}\n\n\treturn {\n\t\tstatics: true,\n\n\t\tgetLength: function(v, a, b) {\n\t\t\tif (a === undefined)\n\t\t\t\ta = 0;\n\t\t\tif (b === undefined)\n\t\t\t\tb = 1;\n\t\t\tvar isZero = Numerical.isZero;\n\t\t\tif (a === 0 && b === 1\n\t\t\t\t\t&& isZero(v[0] - v[2]) && isZero(v[1] - v[3])\n\t\t\t\t\t&& isZero(v[6] - v[4]) && isZero(v[7] - v[5])) {\n\t\t\t\tvar dx = v[6] - v[0],\n\t\t\t\t\tdy = v[7] - v[1];\n\t\t\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t\t\t}\n\t\t\tvar ds = getLengthIntegrand(v);\n\t\t\treturn Numerical.integrate(ds, a, b, getIterations(a, b));\n\t\t},\n\n\t\tgetParameterAt: function(v, offset, start) {\n\t\t\tif (start === undefined)\n\t\t\t\tstart = offset < 0 ? 1 : 0\n\t\t\tif (offset === 0)\n\t\t\t\treturn start;\n\t\t\tvar tolerance = 0.000001,\n\t\t\t\tabs = Math.abs,\n\t\t\t\tforward = offset > 0,\n\t\t\t\ta = forward ? start : 0,\n\t\t\t\tb = forward ? 1 : start,\n\t\t\t\tds = getLengthIntegrand(v),\n\t\t\t\trangeLength = Numerical.integrate(ds, a, b,\n\t\t\t\t\t\tgetIterations(a, b));\n\t\t\tif (abs(offset - rangeLength) < tolerance) {\n\t\t\t\treturn forward ? b : a;\n\t\t\t} else if (abs(offset) > rangeLength) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar guess = offset / rangeLength,\n\t\t\t\tlength = 0;\n\t\t\tfunction f(t) {\n\t\t\t\tlength += Numerical.integrate(ds, start, t,\n\t\t\t\t\t\tgetIterations(start, t));\n\t\t\t\tstart = t;\n\t\t\t\treturn length - offset;\n\t\t\t}\n\t\t\treturn Numerical.findRoot(f, ds, start + guess, a, b, 16,\n\t\t\t\t\ttolerance);\n\t\t},\n\n\t\tgetPoint: function(v, t) {\n\t\t\treturn evaluate(v, t, 0, false);\n\t\t},\n\n\t\tgetTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, true);\n\t\t},\n\n\t\tgetWeightedTangent: function(v, t) {\n\t\t\treturn evaluate(v, t, 1, false);\n\t\t},\n\n\t\tgetNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, true);\n\t\t},\n\n\t\tgetWeightedNormal: function(v, t) {\n\t\t\treturn evaluate(v, t, 2, false);\n\t\t},\n\n\t\tgetCurvature: function(v, t) {\n\t\t\treturn evaluate(v, t, 3, false).x;\n\t\t}\n\t};\n}, new function() {\n\tfunction addLocation(locations, include, curve1, t1, point1, curve2, t2,\n\t\t\tpoint2) {\n\t\tvar loc = new CurveLocation(curve1, t1, point1, curve2, t2, point2);\n\t\tif (!include || include(loc))\n\t\t\tlocations.push(loc);\n\t}\n\n\tfunction addCurveIntersections(v1, v2, curve1, curve2, locations, include,\n\t\t\ttMin, tMax, uMin, uMax, oldTDiff, reverse, recursion) {\n\t\tif (recursion > 32)\n\t\t\treturn;\n\t\tvar q0x = v2[0], q0y = v2[1], q3x = v2[6], q3y = v2[7],\n\t\t\ttolerance = 0.000001,\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\td1 = getSignedDistance(q0x, q0y, q3x, q3y, v2[2], v2[3]) || 0,\n\t\t\td2 = getSignedDistance(q0x, q0y, q3x, q3y, v2[4], v2[5]) || 0,\n\t\t\tfactor = d1 * d2 > 0 ? 3 / 4 : 4 / 9,\n\t\t\tdMin = factor * Math.min(0, d1, d2),\n\t\t\tdMax = factor * Math.max(0, d1, d2),\n\t\t\tdp0 = getSignedDistance(q0x, q0y, q3x, q3y, v1[0], v1[1]),\n\t\t\tdp1 = getSignedDistance(q0x, q0y, q3x, q3y, v1[2], v1[3]),\n\t\t\tdp2 = getSignedDistance(q0x, q0y, q3x, q3y, v1[4], v1[5]),\n\t\t\tdp3 = getSignedDistance(q0x, q0y, q3x, q3y, v1[6], v1[7]),\n\t\t\ttMinNew, tMaxNew, tDiff;\n\t\tif (q0x === q3x && uMax - uMin < tolerance && recursion > 3) {\n\t\t\ttMaxNew = tMinNew = (tMax + tMin) / 2;\n\t\t\ttDiff = 0;\n\t\t} else {\n\t\t\tvar hull = getConvexHull(dp0, dp1, dp2, dp3),\n\t\t\t\ttop = hull[0],\n\t\t\t\tbottom = hull[1],\n\t\t\t\ttMinClip, tMaxClip;\n\t\t\ttMinClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\ttop.reverse();\n\t\t\tbottom.reverse();\n\t\t\ttMaxClip = clipConvexHull(top, bottom, dMin, dMax);\n\t\t\tif (tMinClip == null || tMaxClip == null)\n\t\t\t\treturn;\n\t\t\tv1 = Curve.getPart(v1, tMinClip, tMaxClip);\n\t\t\ttDiff = tMaxClip - tMinClip;\n\t\t\ttMinNew = tMax * tMinClip + tMin * (1 - tMinClip);\n\t\t\ttMaxNew = tMax * tMaxClip + tMin * (1 - tMaxClip);\n\t\t}\n\t\tif (oldTDiff > 0.5 && tDiff > 0.5) {\n\t\t\tif (tMaxNew - tMinNew > uMax - uMin) {\n\t\t\t\tvar parts = Curve.subdivide(v1, 0.5),\n\t\t\t\t\tt = tMinNew + (tMaxNew - tMinNew) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[0], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, t, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tv2, parts[1], curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, t, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t} else {\n\t\t\t\tvar parts = Curve.subdivide(v2, 0.5),\n\t\t\t\t\tt = uMin + (uMax - uMin) / 2;\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[0], v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, t, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t\t\taddCurveIntersections(\n\t\t\t\t\tparts[1], v1, curve2, curve1, locations, include,\n\t\t\t\t\tt, uMax, tMinNew, tMaxNew, tDiff, !reverse, recursion);\n\t\t\t}\n\t\t} else if (Math.max(uMax - uMin, tMaxNew - tMinNew) < tolerance) {\n\t\t\tvar t1 = tMinNew + (tMaxNew - tMinNew) / 2,\n\t\t\t\tt2 = uMin + (uMax - uMin) / 2;\n\t\t\tif (reverse) {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve2, t2, Curve.getPoint(v2, t2),\n\t\t\t\t\t\tcurve1, t1, Curve.getPoint(v1, t1));\n\t\t\t} else {\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.getPoint(v1, t1),\n\t\t\t\t\t\tcurve2, t2, Curve.getPoint(v2, t2));\n\t\t\t}\n\t\t} else if (tDiff > 0) {\n\t\t\taddCurveIntersections(v2, v1, curve2, curve1, locations, include,\n\t\t\t\t\tuMin, uMax, tMinNew, tMaxNew, tDiff, !reverse, ++recursion);\n\t\t}\n\t}\n\n\tfunction getConvexHull(dq0, dq1, dq2, dq3) {\n\t\tvar p0 = [ 0, dq0 ],\n\t\t\tp1 = [ 1 / 3, dq1 ],\n\t\t\tp2 = [ 2 / 3, dq2 ],\n\t\t\tp3 = [ 1, dq3 ],\n\t\t\tgetSignedDistance = Line.getSignedDistance,\n\t\t\tdist1 = getSignedDistance(0, dq0, 1, dq3, 1 / 3, dq1),\n\t\t\tdist2 = getSignedDistance(0, dq0, 1, dq3, 2 / 3, dq2),\n\t\t\tflip = false,\n\t\t\thull;\n\t\tif (dist1 * dist2 < 0) {\n\t\t\thull = [[p0, p1, p3], [p0, p2, p3]];\n\t\t\tflip = dist1 < 0;\n\t\t} else {\n\t\t\tvar pmax, cross = 0,\n\t\t\t\tdistZero = dist1 === 0 || dist2 === 0;\n\t\t\tif (Math.abs(dist1) > Math.abs(dist2)) {\n\t\t\t\tpmax = p1;\n\t\t\t\tcross = (dq3 - dq2 - (dq3 - dq0) / 3)\n\t\t\t\t\t\t* (2 * (dq3 - dq2) - dq3 + dq1) / 3;\n\t\t\t} else {\n\t\t\t\tpmax = p2;\n\t\t\t\tcross = (dq1 - dq0 + (dq0 - dq3) / 3)\n\t\t\t\t\t\t* (-2 * (dq0 - dq1) + dq0 - dq2) / 3;\n\t\t\t}\n\t\t\thull = cross < 0 || distZero\n\t\t\t\t\t? [[p0, pmax, p3], [p0, p3]]\n\t\t\t\t\t: [[p0, p1, p2, p3], [p0, p3]];\n\t\t\tflip = dist1 ? dist1 < 0 : dist2 < 0;\n\t\t}\n\t\treturn flip ? hull.reverse() : hull;\n\t}\n\n\tfunction clipConvexHull(hullTop, hullBottom, dMin, dMax) {\n\t\tif (hullTop[0][1] < dMin) {\n\t\t\treturn clipConvexHullPart(hullTop, true, dMin);\n\t\t} else if (hullBottom[0][1] > dMax) {\n\t\t\treturn clipConvexHullPart(hullBottom, false, dMax);\n\t\t} else {\n\t\t\treturn hullTop[0][0];\n\t\t}\n\t}\n\n\tfunction clipConvexHullPart(part, top, threshold) {\n\t\tvar px = part[0][0],\n\t\t\tpy = part[0][1];\n\t\tfor (var i = 1, l = part.length; i < l; i++) {\n\t\t\tvar qx = part[i][0],\n\t\t\t\tqy = part[i][1];\n\t\t\tif (top ? qy >= threshold : qy <= threshold)\n\t\t\t\treturn px + (threshold - py) * (qx - px) / (qy - py);\n\t\t\tpx = qx;\n\t\t\tpy = qy;\n\t\t}\n\t\treturn null;\n\t}\n\n\tfunction addCurveLineIntersections(v1, v2, curve1, curve2, locations,\n\t\t\tinclude) {\n\t\tvar flip = Curve.isLinear(v1),\n\t\t\tvc = flip ? v2 : v1,\n\t\t\tvl = flip ? v1 : v2,\n\t\t\tlx1 = vl[0], ly1 = vl[1],\n\t\t\tlx2 = vl[6], ly2 = vl[7],\n\t\t\tldx = lx2 - lx1,\n\t\t\tldy = ly2 - ly1,\n\t\t\tangle = Math.atan2(-ldy, ldx),\n\t\t\tsin = Math.sin(angle),\n\t\t\tcos = Math.cos(angle),\n\t\t\trlx2 = ldx * cos - ldy * sin,\n\t\t\trvl = [0, 0, 0, 0, rlx2, 0, rlx2, 0],\n\t\t\trvc = [];\n\t\tfor(var i = 0; i < 8; i += 2) {\n\t\t\tvar x = vc[i] - lx1,\n\t\t\t\ty = vc[i + 1] - ly1;\n\t\t\trvc.push(\n\t\t\t\tx * cos - y * sin,\n\t\t\t\ty * cos + x * sin);\n\t\t}\n\t\tvar roots = [],\n\t\t\tcount = Curve.solveCubic(rvc, 1, 0, roots, 0, 1);\n\t\tfor (var i = 0; i < count; i++) {\n\t\t\tvar tc = roots[i],\n\t\t\t\tx = Curve.getPoint(rvc, tc).x;\n\t\t\tif (x >= 0 && x <= rlx2) {\n\t\t\t\tvar tl = Curve.getParameterOf(rvl, x, 0),\n\t\t\t\t\tt1 = flip ? tl : tc,\n\t\t\t\t\tt2 = flip ? tc : tl;\n\t\t\t\taddLocation(locations, include,\n\t\t\t\t\t\tcurve1, t1, Curve.getPoint(v1, t1),\n\t\t\t\t\t\tcurve2, t2, Curve.getPoint(v2, t2));\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction addLineIntersection(v1, v2, curve1, curve2, locations, include) {\n\t\tvar point = Line.intersect(\n\t\t\t\tv1[0], v1[1], v1[6], v1[7],\n\t\t\t\tv2[0], v2[1], v2[6], v2[7]);\n\t\tif (point) {\n\t\t\tvar x = point.x,\n\t\t\t\ty = point.y;\n\t\t\taddLocation(locations, include,\n\t\t\t\t\tcurve1, Curve.getParameterOf(v1, x, y), point,\n\t\t\t\t\tcurve2, Curve.getParameterOf(v2, x, y), point);\n\t\t}\n\t}\n\n\treturn { statics: {\n\t\tgetIntersections: function(v1, v2, c1, c2, locations, include) {\n\t\t\tvar linear1 = Curve.isLinear(v1),\n\t\t\t\tlinear2 = Curve.isLinear(v2),\n\t\t\t\tc1p1 = c1.getPoint1(),\n\t\t\t\tc1p2 = c1.getPoint2(),\n\t\t\t\tc2p1 = c2.getPoint1(),\n\t\t\t\tc2p2 = c2.getPoint2(),\n\t\t\t\ttolerance = 0.000001;\n\t\t\tif (c1p1.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 0, c1p1);\n\t\t\tif (c1p1.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 0, c1p1, c2, 1, c1p1);\n\t\t\t(linear1 && linear2\n\t\t\t\t? addLineIntersection\n\t\t\t\t: linear1 || linear2\n\t\t\t\t\t? addCurveLineIntersections\n\t\t\t\t\t: addCurveIntersections)(\n\t\t\t\t\t\tv1, v2, c1, c2, locations, include,\n\t\t\t\t\t\t0, 1, 0, 1, 0, false, 0);\n\t\t\tif (c1p2.isClose(c2p1, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 0, c1p2);\n\t\t\tif (c1p2.isClose(c2p2, tolerance))\n\t\t\t\taddLocation(locations, include, c1, 1, c1p2, c2, 1, c1p2);\n\t\t\treturn locations;\n\t\t},\n\n\t\tfilterIntersections: function(locations, _expand) {\n\t\t\tvar last = locations.length - 1,\n\t\t\t\ttMax = 1 - 0.000001;\n\t\t\tfor (var i = last; i >= 0; i--) {\n\t\t\t\tvar loc = locations[i],\n\t\t\t\t\tnext = loc._curve.getNext(),\n\t\t\t\t\tnext2 = loc._curve2.getNext();\n\t\t\t\tif (next && loc._parameter >= tMax) {\n\t\t\t\t\tloc._parameter = 0;\n\t\t\t\t\tloc._curve = next;\n\t\t\t\t}\n\t\t\t\tif (next2 && loc._parameter2 >= tMax) {\n\t\t\t\t\tloc._parameter2 = 0;\n\t\t\t\t\tloc._curve2 = next2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction compare(loc1, loc2) {\n\t\t\t\tvar path1 = loc1.getPath(),\n\t\t\t\t\tpath2 = loc2.getPath();\n\t\t\t\treturn path1 === path2\n\t\t\t\t\t\t? (loc1.getIndex() + loc1.getParameter())\n\t\t\t\t\t\t\t\t- (loc2.getIndex() + loc2.getParameter())\n\t\t\t\t\t\t: path1._id - path2._id;\n\t\t\t}\n\n\t\t\tif (last > 0) {\n\t\t\t\tlocations.sort(compare);\n\t\t\t\tfor (var i = last; i > 0; i--) {\n\t\t\t\t\tif (locations[i].equals(locations[i - 1])) {\n\t\t\t\t\t\tlocations.splice(i, 1);\n\t\t\t\t\t\tlast--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_expand) {\n\t\t\t\tfor (var i = last; i >= 0; i--)\n\t\t\t\t\tlocations.push(locations[i].getIntersection());\n\t\t\t\tlocations.sort(compare);\n\t\t\t}\n\t\t\treturn locations;\n\t\t}\n\t}};\n});\n\nvar CurveLocation = Base.extend({\n\t_class: 'CurveLocation',\n\tbeans: true,\n\n\tinitialize: function CurveLocation(curve, parameter, point, _curve2,\n\t\t\t_parameter2, _point2, _distance) {\n\t\tthis._id = UID.get(CurveLocation);\n\t\tvar path = curve._path;\n\t\tthis._version = path ? path._version : 0;\n\t\tthis._curve = curve;\n\t\tthis._parameter = parameter;\n\t\tthis._point = point || curve.getPointAt(parameter, true);\n\t\tthis._curve2 = _curve2;\n\t\tthis._parameter2 = _parameter2;\n\t\tthis._point2 = _point2;\n\t\tthis._distance = _distance;\n\t\tthis._segment1 = curve._segment1;\n\t\tthis._segment2 = curve._segment2;\n\t},\n\n\tgetSegment: function(_preferFirst) {\n\t\tif (!this._segment) {\n\t\t\tvar curve = this.getCurve(),\n\t\t\t\tparameter = this.getParameter();\n\t\t\tif (parameter === 1) {\n\t\t\t\tthis._segment = curve._segment2;\n\t\t\t} else if (parameter === 0 || _preferFirst) {\n\t\t\t\tthis._segment = curve._segment1;\n\t\t\t} else if (parameter == null) {\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis._segment = curve.getPartLength(0, parameter)\n\t\t\t\t\t< curve.getPartLength(parameter, 1)\n\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t}\n\t\treturn this._segment;\n\t},\n\n\tgetCurve: function() {\n\t\tvar curve = this._curve,\n\t\t\tpath = curve && curve._path;\n\t\tif (path && path._version !== this._version) {\n\t\t\tcurve = null;\n\t\t\tthis._parameter = null;\n\t\t}\n\t\tif (!curve) {\n\t\t\tcurve = this._segment1.getCurve();\n\t\t\tif (curve.getParameterOf(this._point) == null)\n\t\t\t\tcurve = this._segment2.getPrevious().getCurve();\n\t\t\tthis._curve = curve;\n\t\t\tpath = curve._path;\n\t\t\tthis._version = path ? path._version : 0;\n\t\t}\n\t\treturn curve;\n\t},\n\n\tgetPath: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve._path;\n\t},\n\n\tgetIndex: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.getIndex();\n\t},\n\n\tgetParameter: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this._parameter;\n\t\treturn curve && parameter == null\n\t\t\t? this._parameter = curve.getParameterOf(this._point)\n\t\t\t: parameter;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._point;\n\t},\n\n\tgetOffset: function() {\n\t\tvar path = this.getPath();\n\t\treturn path ? path._getOffset(this) : this.getCurveOffset();\n\t},\n\n\tgetCurveOffset: function() {\n\t\tvar curve = this.getCurve(),\n\t\t\tparameter = this.getParameter();\n\t\treturn parameter != null && curve && curve.getPartLength(0, parameter);\n\t},\n\n\tgetIntersection: function() {\n\t\tvar intersection = this._intersection;\n\t\tif (!intersection && this._curve2) {\n\t\t\tthis._intersection = intersection = new CurveLocation(this._curve2,\n\t\t\t\t\tthis._parameter2, this._point2 || this._point, this);\n\t\t\tintersection._intersection = this;\n\t\t}\n\t\treturn intersection;\n\t},\n\n\tgetDistance: function() {\n\t\treturn this._distance;\n\t},\n\n\tdivide: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.divide(this.getParameter(), true);\n\t},\n\n\tsplit: function() {\n\t\tvar curve = this.getCurve();\n\t\treturn curve && curve.split(this.getParameter(), true);\n\t},\n\n\tequals: function(loc) {\n\t\tvar abs = Math.abs,\n\t\t\ttolerance = 0.000001;\n\t\treturn this === loc\n\t\t\t\t|| loc instanceof CurveLocation\n\t\t\t\t\t&& this.getCurve() === loc.getCurve()\n\t\t\t\t\t&& abs(this.getParameter() - loc.getParameter()) < tolerance\n\t\t\t\t\t&& this._curve2 === loc._curve2\n\t\t\t\t\t&& abs(this._parameter2 - loc._parameter2) < tolerance\n\t\t\t\t|| false;\n\t},\n\n\ttoString: function() {\n\t\tvar parts = [],\n\t\t\tpoint = this.getPoint(),\n\t\t\tf = Formatter.instance;\n\t\tif (point)\n\t\t\tparts.push('point: ' + point);\n\t\tvar index = this.getIndex();\n\t\tif (index != null)\n\t\t\tparts.push('index: ' + index);\n\t\tvar parameter = this.getParameter();\n\t\tif (parameter != null)\n\t\t\tparts.push('parameter: ' + f.number(parameter));\n\t\tif (this._distance != null)\n\t\t\tparts.push('distance: ' + f.number(this._distance));\n\t\treturn '{ ' + parts.join(', ') + ' }';\n\t}\n}, Base.each(Curve.evaluateMethods, function(name) {\n\tif (name !== 'getPoint') {\n\t\tvar get = name + 'At';\n\t\tthis[name] = function() {\n\t\t\tvar parameter = this.getParameter(),\n\t\t\t\tcurve = this.getCurve();\n\t\t\treturn parameter != null && curve && curve[get](parameter, true);\n\t\t};\n\t}\n}, {}));\n\nvar PathItem = Item.extend({\n\t_class: 'PathItem',\n\n\tinitialize: function PathItem() {\n\t},\n\n\tgetIntersections: function(path, _matrix, _expand) {\n\t\tif (this === path)\n\t\t\tpath = null;\n\t\tvar locations = [],\n\t\t\tcurves1 = this.getCurves(),\n\t\t\tcurves2 = path ? path.getCurves() : curves1,\n\t\t\tmatrix1 = this._matrix.orNullIfIdentity(),\n\t\t\tmatrix2 = path ? (_matrix || path._matrix).orNullIfIdentity()\n\t\t\t\t: matrix1,\n\t\t\tlength1 = curves1.length,\n\t\t\tlength2 = path ? curves2.length : length1,\n\t\t\tvalues2 = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tif (path && !this.getBounds(matrix1).touches(path.getBounds(matrix2)))\n\t\t\treturn [];\n\t\tfor (var i = 0; i < length2; i++)\n\t\t\tvalues2[i] = curves2[i].getValues(matrix2);\n\t\tfor (var i = 0; i < length1; i++) {\n\t\t\tvar curve1 = curves1[i],\n\t\t\t\tvalues1 = path ? curve1.getValues(matrix1) : values2[i];\n\t\t\tif (!path) {\n\t\t\t\tvar seg1 = curve1.getSegment1(),\n\t\t\t\t\tseg2 = curve1.getSegment2(),\n\t\t\t\t\th1 = seg1._handleOut,\n\t\t\t\t\th2 = seg2._handleIn;\n\t\t\t\tif (new Line(seg1._point.subtract(h1), h1.multiply(2), true)\n\t\t\t\t\t\t.intersect(new Line(seg2._point.subtract(h2),\n\t\t\t\t\t\th2.multiply(2), true), false)) {\n\t\t\t\t\tvar parts = Curve.subdivide(values1);\n\t\t\t\t\tCurve.getIntersections(\n\t\t\t\t\t\tparts[0], parts[1], curve1, curve1, locations,\n\t\t\t\t\t\tfunction(loc) {\n\t\t\t\t\t\t\tif (loc._parameter <= tMax) {\n\t\t\t\t\t\t\t\tloc._parameter /= 2;\n\t\t\t\t\t\t\t\tloc._parameter2 = 0.5 + loc._parameter2 / 2;\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (var j = path ? 0 : i + 1; j < length2; j++) {\n\t\t\t\tCurve.getIntersections(\n\t\t\t\t\tvalues1, values2[j], curve1, curves2[j], locations,\n\t\t\t\t\t!path && (j === i + 1 || j === length2 - 1 && i === 0)\n\t\t\t\t\t\t&& function(loc) {\n\t\t\t\t\t\t\tvar t = loc._parameter;\n\t\t\t\t\t\t\treturn t >= tMin && t <= tMax;\n\t\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn Curve.filterIntersections(locations, _expand);\n\t},\n\n\t_asPathItem: function() {\n\t\treturn this;\n\t},\n\n\tsetPathData: function(data) {\n\n\t\tvar parts = data.match(/[mlhvcsqtaz][^mlhvcsqtaz]*/ig),\n\t\t\tcoords,\n\t\t\trelative = false,\n\t\t\tprevious,\n\t\t\tcontrol,\n\t\t\tcurrent = new Point(),\n\t\t\tstart = new Point();\n\n\t\tfunction getCoord(index, coord) {\n\t\t\tvar val = +coords[index];\n\t\t\tif (relative)\n\t\t\t\tval += current[coord];\n\t\t\treturn val;\n\t\t}\n\n\t\tfunction getPoint(index) {\n\t\t\treturn new Point(\n\t\t\t\tgetCoord(index, 'x'),\n\t\t\t\tgetCoord(index + 1, 'y')\n\t\t\t);\n\t\t}\n\n\t\tthis.clear();\n\n\t\tfor (var i = 0, l = parts && parts.length; i < l; i++) {\n\t\t\tvar part = parts[i],\n\t\t\t\tcommand = part[0],\n\t\t\t\tlower = command.toLowerCase();\n\t\t\tcoords = part.match(/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g);\n\t\t\tvar length = coords && coords.length;\n\t\t\trelative = command === lower;\n\t\t\tif (previous === 'z' && !/[mz]/.test(lower))\n\t\t\t\tthis.moveTo(current = start);\n\t\t\tswitch (lower) {\n\t\t\tcase 'm':\n\t\t\tcase 'l':\n\t\t\t\tvar move = lower === 'm';\n\t\t\t\tfor (var j = 0; j < length; j += 2)\n\t\t\t\t\tthis[j === 0 && move ? 'moveTo' : 'lineTo'](\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\tcontrol = current;\n\t\t\t\tif (move)\n\t\t\t\t\tstart = current;\n\t\t\t\tbreak;\n\t\t\tcase 'h':\n\t\t\tcase 'v':\n\t\t\t\tvar coord = lower === 'h' ? 'x' : 'y';\n\t\t\t\tfor (var j = 0; j < length; j++) {\n\t\t\t\t\tcurrent[coord] = getCoord(j, coord);\n\t\t\t\t\tthis.lineTo(current);\n\t\t\t\t}\n\t\t\t\tcontrol = current;\n\t\t\t\tbreak;\n\t\t\tcase 'c':\n\t\t\t\tfor (var j = 0; j < length; j += 6) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\tgetPoint(j),\n\t\t\t\t\t\t\tcontrol = getPoint(j + 2),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 4));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.cubicCurveTo(\n\t\t\t\t\t\t\t/[cs]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current,\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'q':\n\t\t\t\tfor (var j = 0; j < length; j += 4) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = getPoint(j),\n\t\t\t\t\t\t\tcurrent = getPoint(j + 2));\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tfor (var j = 0; j < length; j += 2) {\n\t\t\t\t\tthis.quadraticCurveTo(\n\t\t\t\t\t\t\tcontrol = (/[qt]/.test(previous)\n\t\t\t\t\t\t\t\t\t? current.multiply(2).subtract(control)\n\t\t\t\t\t\t\t\t\t: current),\n\t\t\t\t\t\t\tcurrent = getPoint(j));\n\t\t\t\t\tprevious = lower;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'a':\n\t\t\t\tfor (var j = 0; j < length; j += 7) {\n\t\t\t\t\tthis.arcTo(current = getPoint(j + 5),\n\t\t\t\t\t\t\tnew Size(+coords[j], +coords[j + 1]),\n\t\t\t\t\t\t\t+coords[j + 2], +coords[j + 4], +coords[j + 3]);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'z':\n\t\t\t\tthis.closePath(true);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tprevious = lower;\n\t\t}\n\t},\n\n\t_canComposite: function() {\n\t\treturn !(this.hasFill() && this.hasStroke());\n\t},\n\n\t_contains: function(point) {\n\t\tvar winding = this._getWinding(point, false, true);\n\t\treturn !!(this.getWindingRule() === 'evenodd' ? winding & 1 : winding);\n\t}\n\n});\n\nvar Path = PathItem.extend({\n\t_class: 'Path',\n\t_serializeFields: {\n\t\tsegments: [],\n\t\tclosed: false\n\t},\n\n\tinitialize: function Path(arg) {\n\t\tthis._closed = false;\n\t\tthis._segments = [];\n\t\tthis._version = 0;\n\t\tvar segments = Array.isArray(arg)\n\t\t\t? typeof arg[0] === 'object'\n\t\t\t\t? arg\n\t\t\t\t: arguments\n\t\t\t: arg && (arg.size === undefined && (arg.x !== undefined\n\t\t\t\t\t|| arg.point !== undefined))\n\t\t\t\t? arguments\n\t\t\t\t: null;\n\t\tif (segments && segments.length > 0) {\n\t\t\tthis.setSegments(segments);\n\t\t} else {\n\t\t\tthis._curves = undefined;\n\t\t\tthis._selectedSegmentState = 0;\n\t\t\tif (!segments && typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t\targ = null;\n\t\t\t}\n\t\t}\n\t\tthis._initialize(!segments && arg);\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._closed === item._closed\n\t\t\t\t&& Base.equals(this._segments, item._segments);\n\t},\n\n\tclone: function(insert) {\n\t\tvar copy = new Path(Item.NO_INSERT);\n\t\tcopy.setSegments(this._segments);\n\t\tcopy._closed = this._closed;\n\t\tif (this._clockwise !== undefined)\n\t\t\tcopy._clockwise = this._clockwise;\n\t\treturn this._clone(copy, insert);\n\t},\n\n\t_changed: function _changed(flags) {\n\t\t_changed.base.call(this, flags);\n\t\tif (flags & 8) {\n\t\t\tvar parent = this._parent;\n\t\t\tif (parent)\n\t\t\t\tparent._currentPath = undefined;\n\t\t\tthis._length = this._clockwise = undefined;\n\t\t\tif (flags & 16) {\n\t\t\t\tthis._version++;\n\t\t\t} else if (this._curves) {\n\t\t\t   for (var i = 0, l = this._curves.length; i < l; i++)\n\t\t\t\t\tthis._curves[i]._changed();\n\t\t\t}\n\t\t\tthis._monoCurves = undefined;\n\t\t} else if (flags & 32) {\n\t\t\tthis._bounds = undefined;\n\t\t}\n\t},\n\n\tgetStyle: function() {\n\t\tvar parent = this._parent;\n\t\treturn (parent instanceof CompoundPath ? parent : this)._style;\n\t},\n\n\tgetSegments: function() {\n\t\treturn this._segments;\n\t},\n\n\tsetSegments: function(segments) {\n\t\tvar fullySelected = this.isFullySelected();\n\t\tthis._segments.length = 0;\n\t\tthis._selectedSegmentState = 0;\n\t\tthis._curves = undefined;\n\t\tif (segments && segments.length > 0)\n\t\t\tthis._add(Segment.readAll(segments));\n\t\tif (fullySelected)\n\t\t\tthis.setFullySelected(true);\n\t},\n\n\tgetFirstSegment: function() {\n\t\treturn this._segments[0];\n\t},\n\n\tgetLastSegment: function() {\n\t\treturn this._segments[this._segments.length - 1];\n\t},\n\n\tgetCurves: function() {\n\t\tvar curves = this._curves,\n\t\t\tsegments = this._segments;\n\t\tif (!curves) {\n\t\t\tvar length = this._countCurves();\n\t\t\tcurves = this._curves = new Array(length);\n\t\t\tfor (var i = 0; i < length; i++)\n\t\t\t\tcurves[i] = new Curve(this, segments[i],\n\t\t\t\t\tsegments[i + 1] || segments[0]);\n\t\t}\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\treturn this.getCurves()[0];\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar curves = this.getCurves();\n\t\treturn curves[curves.length - 1];\n\t},\n\n\tisClosed: function() {\n\t\treturn this._closed;\n\t},\n\n\tsetClosed: function(closed) {\n\t\tif (this._closed != (closed = !!closed)) {\n\t\t\tthis._closed = closed;\n\t\t\tif (this._curves) {\n\t\t\t\tvar length = this._curves.length = this._countCurves();\n\t\t\t\tif (closed)\n\t\t\t\t\tthis._curves[length - 1] = new Curve(this,\n\t\t\t\t\t\tthis._segments[length - 1], this._segments[0]);\n\t\t\t}\n\t\t\tthis._changed(25);\n\t\t}\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar segments = this._segments,\n\t\t\tlength = segments.length,\n\t\t\tf = new Formatter(_precision),\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY,\n\t\t\tparts = [];\n\n\t\tfunction addSegment(segment, skipLine) {\n\t\t\tsegment._transformCoordinates(_matrix, coords, false);\n\t\t\tcurX = coords[0];\n\t\t\tcurY = coords[1];\n\t\t\tif (first) {\n\t\t\t\tparts.push('M' + f.pair(curX, curY));\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tinX = coords[2];\n\t\t\t\tinY = coords[3];\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tif (!skipLine)\n\t\t\t\t\t\tparts.push('l' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t} else {\n\t\t\t\t\tparts.push('c' + f.pair(outX - prevX, outY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(inX - prevX, inY - prevY)\n\t\t\t\t\t\t\t+ ' ' + f.pair(curX - prevX, curY - prevY));\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\toutX = coords[4];\n\t\t\toutY = coords[5];\n\t\t}\n\n\t\tif (length === 0)\n\t\t\treturn '';\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\taddSegment(segments[i]);\n\t\tif (this._closed && length > 0) {\n\t\t\taddSegment(segments[0], true);\n\t\t\tparts.push('z');\n\t\t}\n\t\treturn parts.join('');\n\t}\n}, {\n\n\tisEmpty: function() {\n\t\treturn this._segments.length === 0;\n\t},\n\n\tisLinear: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tif (!segments[i].isLinear())\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\thasHandles: function() {\n\t\tvar segments = this._segments;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tif (segments[i].hasHandles())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t_transformContent: function(matrix) {\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++)\n\t\t\tthis._segments[i]._transformCoordinates(matrix, coords, true);\n\t\treturn true;\n\t},\n\n\t_add: function(segs, index) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tamount = segs.length,\n\t\t\tappend = index == null,\n\t\t\tindex = append ? segments.length : index;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = segs[i];\n\t\t\tif (segment._path)\n\t\t\t\tsegment = segs[i] = segment.clone();\n\t\t\tsegment._path = this;\n\t\t\tsegment._index = index + i;\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, 0, segment._selectionState);\n\t\t}\n\t\tif (append) {\n\t\t\tsegments.push.apply(segments, segs);\n\t\t} else {\n\t\t\tsegments.splice.apply(segments, [index, 0].concat(segs));\n\t\t\tfor (var i = index + amount, l = segments.length; i < l; i++)\n\t\t\t\tsegments[i]._index = i;\n\t\t}\n\t\tif (curves || segs._curves) {\n\t\t\tif (!curves)\n\t\t\t\tcurves = this._curves = [];\n\t\t\tvar from = index > 0 ? index - 1 : index,\n\t\t\t\tstart = from,\n\t\t\t\tto = Math.min(from + amount, this._countCurves());\n\t\t\tif (segs._curves) {\n\t\t\t\tcurves.splice.apply(curves, [from, 0].concat(segs._curves));\n\t\t\t\tstart += segs._curves.length;\n\t\t\t}\n\t\t\tfor (var i = start; i < to; i++)\n\t\t\t\tcurves.splice(i, 0, new Curve(this, null, null));\n\t\t\tthis._adjustCurves(from, to);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn segs;\n\t},\n\n\t_adjustCurves: function(from, to) {\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcurve;\n\t\tfor (var i = from; i < to; i++) {\n\t\t\tcurve = curves[i];\n\t\t\tcurve._path = this;\n\t\t\tcurve._segment1 = segments[i];\n\t\t\tcurve._segment2 = segments[i + 1] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[this._closed && from === 0 ? segments.length - 1\n\t\t\t\t: from - 1]) {\n\t\t\tcurve._segment2 = segments[from] || segments[0];\n\t\t\tcurve._changed();\n\t\t}\n\t\tif (curve = curves[to]) {\n\t\t\tcurve._segment1 = segments[to];\n\t\t\tcurve._changed();\n\t\t}\n\t},\n\n\t_countCurves: function() {\n\t\tvar length = this._segments.length;\n\t\treturn !this._closed && length > 0 ? length - 1 : length;\n\t},\n\n\tadd: function(segment1 ) {\n\t\treturn arguments.length > 1 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments))\n\t\t\t: this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsert: function(index, segment1 ) {\n\t\treturn arguments.length > 2 && typeof segment1 !== 'number'\n\t\t\t? this._add(Segment.readAll(arguments, 1), index)\n\t\t\t: this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegment: function() {\n\t\treturn this._add([ Segment.read(arguments) ])[0];\n\t},\n\n\tinsertSegment: function(index ) {\n\t\treturn this._add([ Segment.read(arguments, 1) ], index)[0];\n\t},\n\n\taddSegments: function(segments) {\n\t\treturn this._add(Segment.readAll(segments));\n\t},\n\n\tinsertSegments: function(index, segments) {\n\t\treturn this._add(Segment.readAll(segments), index);\n\t},\n\n\tremoveSegment: function(index) {\n\t\treturn this.removeSegments(index, index + 1)[0] || null;\n\t},\n\n\tremoveSegments: function(from, to, _includeCurves) {\n\t\tfrom = from || 0;\n\t\tto = Base.pick(to, this._segments.length);\n\t\tvar segments = this._segments,\n\t\t\tcurves = this._curves,\n\t\t\tcount = segments.length,\n\t\t\tremoved = segments.splice(from, to - from),\n\t\t\tamount = removed.length;\n\t\tif (!amount)\n\t\t\treturn removed;\n\t\tfor (var i = 0; i < amount; i++) {\n\t\t\tvar segment = removed[i];\n\t\t\tif (segment._selectionState)\n\t\t\t\tthis._updateSelection(segment, segment._selectionState, 0);\n\t\t\tsegment._index = segment._path = null;\n\t\t}\n\t\tfor (var i = from, l = segments.length; i < l; i++)\n\t\t\tsegments[i]._index = i;\n\t\tif (curves) {\n\t\t\tvar index = from > 0 && to === count + (this._closed ? 1 : 0)\n\t\t\t\t\t? from - 1\n\t\t\t\t\t: from,\n\t\t\t\tcurves = curves.splice(index, amount);\n\t\t\tif (_includeCurves)\n\t\t\t\tremoved._curves = curves.slice(1);\n\t\t\tthis._adjustCurves(index, index);\n\t\t}\n\t\tthis._changed(25);\n\t\treturn removed;\n\t},\n\n\tclear: '#removeSegments',\n\n\tgetLength: function() {\n\t\tif (this._length == null) {\n\t\t\tvar curves = this.getCurves();\n\t\t\tthis._length = 0;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\tthis._length += curves[i].getLength();\n\t\t}\n\t\treturn this._length;\n\t},\n\n\tgetArea: function() {\n\t\tvar curves = this.getCurves();\n\t\tvar area = 0;\n\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\tarea += curves[i].getArea();\n\t\treturn area;\n\t},\n\n\tisFullySelected: function() {\n\t\tvar length = this._segments.length;\n\t\treturn this._selected && length > 0 && this._selectedSegmentState\n\t\t\t\t=== length * 7;\n\t},\n\n\tsetFullySelected: function(selected) {\n\t\tif (selected)\n\t\t\tthis._selectSegments(true);\n\t\tthis.setSelected(selected);\n\t},\n\n\tsetSelected: function setSelected(selected) {\n\t\tif (!selected)\n\t\t\tthis._selectSegments(false);\n\t\tsetSelected.base.call(this, selected);\n\t},\n\n\t_selectSegments: function(selected) {\n\t\tvar length = this._segments.length;\n\t\tthis._selectedSegmentState = selected\n\t\t\t\t? length * 7 : 0;\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tthis._segments[i]._selectionState = selected\n\t\t\t\t\t? 7 : 0;\n\t},\n\n\t_updateSelection: function(segment, oldState, newState) {\n\t\tsegment._selectionState = newState;\n\t\tvar total = this._selectedSegmentState += newState - oldState;\n\t\tif (total > 0)\n\t\t\tthis.setSelected(true);\n\t},\n\n\tflatten: function(maxDistance) {\n\t\tvar iterator = new PathIterator(this, 64, 0.1),\n\t\t\tpos = 0,\n\t\t\tstep = iterator.length / Math.ceil(iterator.length / maxDistance),\n\t\t\tend = iterator.length + (this._closed ? -step : step) / 2;\n\t\tvar segments = [];\n\t\twhile (pos <= end) {\n\t\t\tsegments.push(new Segment(iterator.getPointAt(pos)));\n\t\t\tpos += step;\n\t\t}\n\t\tthis.setSegments(segments);\n\t},\n\n\treduce: function() {\n\t\tvar curves = this.getCurves();\n\t\tfor (var i = curves.length - 1; i >= 0; i--) {\n\t\t\tvar curve = curves[i];\n\t\t\tif (curve.isLinear() && curve.getLength() === 0)\n\t\t\t\tcurve.remove();\n\t\t}\n\t\treturn this;\n\t},\n\n\tsimplify: function(tolerance) {\n\t\tif (this._segments.length > 2) {\n\t\t\tvar fitter = new PathFitter(this, tolerance || 2.5);\n\t\t\tthis.setSegments(fitter.fit());\n\t\t}\n\t},\n\n\tsplit: function(index, parameter) {\n\t\tif (parameter === null)\n\t\t\treturn null;\n\t\tif (arguments.length === 1) {\n\t\t\tvar arg = index;\n\t\t\tif (typeof arg === 'number')\n\t\t\t\targ = this.getLocationAt(arg);\n\t\t\tif (!arg)\n\t\t\t\treturn null\n\t\t\tindex = arg.index;\n\t\t\tparameter = arg.parameter;\n\t\t}\n\t\tvar tolerance = 0.000001;\n\t\tif (parameter >= 1 - tolerance) {\n\t\t\tindex++;\n\t\t\tparameter--;\n\t\t}\n\t\tvar curves = this.getCurves();\n\t\tif (index >= 0 && index < curves.length) {\n\t\t\tif (parameter > tolerance) {\n\t\t\t\tcurves[index++].divide(parameter, true);\n\t\t\t}\n\t\t\tvar segs = this.removeSegments(index, this._segments.length, true),\n\t\t\t\tpath;\n\t\t\tif (this._closed) {\n\t\t\t\tthis.setClosed(false);\n\t\t\t\tpath = this;\n\t\t\t} else {\n\t\t\t\tpath = this._clone(new Path().insertAbove(this, true));\n\t\t\t}\n\t\t\tpath._add(segs, 0);\n\t\t\tthis.addSegment(segs[0]);\n\t\t\treturn path;\n\t\t}\n\t\treturn null;\n\t},\n\n\tisClockwise: function() {\n\t\tif (this._clockwise !== undefined)\n\t\t\treturn this._clockwise;\n\t\treturn Path.isClockwise(this._segments);\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() != (clockwise = !!clockwise))\n\t\t\tthis.reverse();\n\t\tthis._clockwise = clockwise;\n\t},\n\n\treverse: function() {\n\t\tthis._segments.reverse();\n\t\tfor (var i = 0, l = this._segments.length; i < l; i++) {\n\t\t\tvar segment = this._segments[i];\n\t\t\tvar handleIn = segment._handleIn;\n\t\t\tsegment._handleIn = segment._handleOut;\n\t\t\tsegment._handleOut = handleIn;\n\t\t\tsegment._index = i;\n\t\t}\n\t\tthis._curves = null;\n\t\tif (this._clockwise !== undefined)\n\t\t\tthis._clockwise = !this._clockwise;\n\t\tthis._changed(9);\n\t},\n\n\tjoin: function(path) {\n\t\tif (path) {\n\t\t\tvar segments = path._segments,\n\t\t\t\tlast1 = this.getLastSegment(),\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\tif (!last2)\n\t\t\t\treturn this;\n\t\t\tif (last1 && last1._point.equals(last2._point))\n\t\t\t\tpath.reverse();\n\t\t\tvar first2 = path.getFirstSegment();\n\t\t\tif (last1 && last1._point.equals(first2._point)) {\n\t\t\t\tlast1.setHandleOut(first2._handleOut);\n\t\t\t\tthis._add(segments.slice(1));\n\t\t\t} else {\n\t\t\t\tvar first1 = this.getFirstSegment();\n\t\t\t\tif (first1 && first1._point.equals(first2._point))\n\t\t\t\t\tpath.reverse();\n\t\t\t\tlast2 = path.getLastSegment();\n\t\t\t\tif (first1 && first1._point.equals(last2._point)) {\n\t\t\t\t\tfirst1.setHandleIn(last2._handleIn);\n\t\t\t\t\tthis._add(segments.slice(0, segments.length - 1), 0);\n\t\t\t\t} else {\n\t\t\t\t\tthis._add(segments.slice());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (path.closed)\n\t\t\t\tthis._add([segments[0]]);\n\t\t\tpath.remove();\n\t\t}\n\t\tvar first = this.getFirstSegment(),\n\t\t\tlast = this.getLastSegment();\n\t\tif (first !== last && first._point.equals(last._point)) {\n\t\t\tfirst.setHandleIn(last._handleIn);\n\t\t\tlast.remove();\n\t\t\tthis.setClosed(true);\n\t\t}\n\t\treturn this;\n\t},\n\n\ttoShape: function(insert) {\n\t\tif (!this._closed)\n\t\t\treturn null;\n\n\t\tvar segments = this._segments,\n\t\t\ttype,\n\t\t\tsize,\n\t\t\tradius,\n\t\t\ttopCenter;\n\n\t\tfunction isCollinear(i, j) {\n\t\t\treturn segments[i].isCollinear(segments[j]);\n\t\t}\n\n\t\tfunction isOrthogonal(i) {\n\t\t\treturn segments[i].isOrthogonal();\n\t\t}\n\n\t\tfunction isArc(i) {\n\t\t\treturn segments[i].isOrthogonalArc();\n\t\t}\n\n\t\tfunction getDistance(i, j) {\n\t\t\treturn segments[i]._point.getDistance(segments[j]._point);\n\t\t}\n\n\t\tif (!this.hasHandles() && segments.length === 4\n\t\t\t\t&& isCollinear(0, 2) && isCollinear(1, 3) && isOrthogonal(1)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(0, 3), getDistance(0, 1));\n\t\t\ttopCenter = segments[1]._point.add(segments[2]._point).divide(2);\n\t\t} else if (segments.length === 8 && isArc(0) && isArc(2) && isArc(4)\n\t\t\t\t&& isArc(6) && isCollinear(1, 5) && isCollinear(3, 7)) {\n\t\t\ttype = Shape.Rectangle;\n\t\t\tsize = new Size(getDistance(1, 6), getDistance(0, 3));\n\t\t\tradius = size.subtract(new Size(getDistance(0, 7),\n\t\t\t\t\tgetDistance(1, 2))).divide(2);\n\t\t\ttopCenter = segments[3]._point.add(segments[4]._point).divide(2);\n\t\t} else if (segments.length === 4\n\t\t\t\t&& isArc(0) && isArc(1) && isArc(2) && isArc(3)) {\n\t\t\tif (Numerical.isZero(getDistance(0, 2) - getDistance(1, 3))) {\n\t\t\t\ttype = Shape.Circle;\n\t\t\t\tradius = getDistance(0, 2) / 2;\n\t\t\t} else {\n\t\t\t\ttype = Shape.Ellipse;\n\t\t\t\tradius = new Size(getDistance(2, 0) / 2, getDistance(3, 1) / 2);\n\t\t\t}\n\t\t\ttopCenter = segments[1]._point;\n\t\t}\n\n\t\tif (type) {\n\t\t\tvar center = this.getPosition(true),\n\t\t\t\tshape = this._clone(new type({\n\t\t\t\t\tcenter: center,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tradius: radius,\n\t\t\t\t\tinsert: false\n\t\t\t\t}), insert, false);\n\t\t\tshape.rotate(topCenter.subtract(center).getAngle() + 90);\n\t\t\treturn shape;\n\t\t}\n\t\treturn null;\n\t},\n\n\t_hitTestSelf: function(point, options) {\n\t\tvar that = this,\n\t\t\tstyle = this.getStyle(),\n\t\t\tsegments = this._segments,\n\t\t\tnumSegments = segments.length,\n\t\t\tclosed = this._closed,\n\t\t\ttolerancePadding = options._tolerancePadding,\n\t\t\tstrokePadding = tolerancePadding,\n\t\t\tjoin, cap, miterLimit,\n\t\t\tarea, loc, res,\n\t\t\thitStroke = options.stroke && style.hasStroke(),\n\t\t\thitFill = options.fill && style.hasFill(),\n\t\t\thitCurves = options.curves,\n\t\t\tradius = hitStroke\n\t\t\t\t\t? style.getStrokeWidth() / 2\n\t\t\t\t\t: hitFill && options.tolerance > 0 || hitCurves\n\t\t\t\t\t\t? 0 : null;\n\t\tif (radius !== null) {\n\t\t\tif (radius > 0) {\n\t\t\t\tjoin = style.getStrokeJoin();\n\t\t\t\tcap = style.getStrokeCap();\n\t\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\t\t\tstrokePadding = tolerancePadding.add(new Point(radius, radius));\n\t\t\t} else {\n\t\t\t\tjoin = cap = 'round';\n\t\t\t}\n\t\t}\n\n\t\tfunction isCloseEnough(pt, padding) {\n\t\t\treturn point.subtract(pt).divide(padding).length <= 1;\n\t\t}\n\n\t\tfunction checkSegmentPoint(seg, pt, name) {\n\t\t\tif (!options.selected || pt.isSelected()) {\n\t\t\t\tvar anchor = seg._point;\n\t\t\t\tif (pt !== anchor)\n\t\t\t\t\tpt = pt.add(anchor);\n\t\t\t\tif (isCloseEnough(pt, strokePadding)) {\n\t\t\t\t\treturn new HitResult(name, that, {\n\t\t\t\t\t\tsegment: seg,\n\t\t\t\t\t\tpoint: pt\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction checkSegmentPoints(seg, ends) {\n\t\t\treturn (ends || options.segments)\n\t\t\t\t&& checkSegmentPoint(seg, seg._point, 'segment')\n\t\t\t\t|| (!ends && options.handles) && (\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleIn, 'handle-in') ||\n\t\t\t\t\tcheckSegmentPoint(seg, seg._handleOut, 'handle-out'));\n\t\t}\n\n\t\tfunction addToArea(point) {\n\t\t\tarea.add(point);\n\t\t}\n\n\t\tfunction checkSegmentStroke(segment) {\n\t\t\tif (join !== 'round' || cap !== 'round') {\n\t\t\t\tarea = new Path({ internal: true, closed: true });\n\t\t\t\tif (closed || segment._index > 0\n\t\t\t\t\t\t&& segment._index < numSegments - 1) {\n\t\t\t\t\tif (join !== 'round' && (segment._handleIn.isZero()\n\t\t\t\t\t\t\t|| segment._handleOut.isZero()))\n\t\t\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit,\n\t\t\t\t\t\t\t\taddToArea, true);\n\t\t\t\t} else if (cap !== 'round') {\n\t\t\t\t\tPath._addSquareCap(segment, cap, radius, addToArea, true);\n\t\t\t\t}\n\t\t\t\tif (!area.isEmpty()) {\n\t\t\t\t\tvar loc;\n\t\t\t\t\treturn area.contains(point)\n\t\t\t\t\t\t|| (loc = area.getNearestLocation(point))\n\t\t\t\t\t\t\t&& isCloseEnough(loc.getPoint(), tolerancePadding);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn isCloseEnough(segment._point, strokePadding);\n\t\t}\n\n\t\tif (options.ends && !options.segments && !closed) {\n\t\t\tif (res = checkSegmentPoints(segments[0], true)\n\t\t\t\t\t|| checkSegmentPoints(segments[numSegments - 1], true))\n\t\t\t\treturn res;\n\t\t} else if (options.segments || options.handles) {\n\t\t\tfor (var i = 0; i < numSegments; i++)\n\t\t\t\tif (res = checkSegmentPoints(segments[i]))\n\t\t\t\t\treturn res;\n\t\t}\n\t\tif (radius !== null) {\n\t\t\tloc = this.getNearestLocation(point);\n\t\t\tif (loc) {\n\t\t\t\tvar parameter = loc.getParameter();\n\t\t\t\tif (parameter === 0 || parameter === 1 && numSegments > 1) {\n\t\t\t\t\tif (!checkSegmentStroke(loc.getSegment()))\n\t\t\t\t\t\tloc = null;\n\t\t\t\t} else if (!isCloseEnough(loc.getPoint(), strokePadding)) {\n\t\t\t\t\tloc = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!loc && join === 'miter' && numSegments > 1) {\n\t\t\t\tfor (var i = 0; i < numSegments; i++) {\n\t\t\t\t\tvar segment = segments[i];\n\t\t\t\t\tif (point.getDistance(segment._point) <= miterLimit\n\t\t\t\t\t\t\t&& checkSegmentStroke(segment)) {\n\t\t\t\t\t\tloc = segment.getLocation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn !loc && hitFill && this._contains(point)\n\t\t\t\t|| loc && !hitStroke && !hitCurves\n\t\t\t\t\t? new HitResult('fill', this)\n\t\t\t\t\t: loc\n\t\t\t\t\t\t? new HitResult(hitStroke ? 'stroke' : 'curve', this, {\n\t\t\t\t\t\t\tlocation: loc,\n\t\t\t\t\t\t\tpoint: loc.getPoint()\n\t\t\t\t\t\t})\n\t\t\t\t\t\t: null;\n\t}\n\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, isParameter) {\n\t\t\tvar loc = this.getLocationAt(offset, isParameter);\n\t\t\treturn loc && loc[name]();\n\t\t};\n\t},\n{\n\tbeans: false,\n\n\t_getOffset: function(location) {\n\t\tvar index = location && location.getIndex();\n\t\tif (index != null) {\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\toffset = 0;\n\t\t\tfor (var i = 0; i < index; i++)\n\t\t\t\toffset += curves[i].getLength();\n\t\t\tvar curve = curves[index],\n\t\t\t\tparameter = location.getParameter();\n\t\t\tif (parameter > 0)\n\t\t\t\toffset += curve.getPartLength(0, parameter);\n\t\t\treturn offset;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetLocationOf: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves();\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getLocationOf(point);\n\t\t\tif (loc)\n\t\t\t\treturn loc;\n\t\t}\n\t\treturn null;\n\t},\n\n\tgetOffsetOf: function() {\n\t\tvar loc = this.getLocationOf.apply(this, arguments);\n\t\treturn loc ? loc.getOffset() : null;\n\t},\n\n\tgetLocationAt: function(offset, isParameter) {\n\t\tvar curves = this.getCurves(),\n\t\t\tlength = 0;\n\t\tif (isParameter) {\n\t\t\tvar index = ~~offset,\n\t\t\t\tcurve = curves[index];\n\t\t\treturn curve ? curve.getLocationAt(offset - index, true) : null;\n\t\t}\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar start = length,\n\t\t\t\tcurve = curves[i];\n\t\t\tlength += curve.getLength();\n\t\t\tif (length > offset) {\n\t\t\t\treturn curve.getLocationAt(offset - start);\n\t\t\t}\n\t\t}\n\t\tif (offset <= this.getLength())\n\t\t\treturn new CurveLocation(curves[curves.length - 1], 1);\n\t\treturn null;\n\t},\n\n\tgetNearestLocation: function() {\n\t\tvar point = Point.read(arguments),\n\t\t\tcurves = this.getCurves(),\n\t\t\tminDist = Infinity,\n\t\t\tminLoc = null;\n\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\tvar loc = curves[i].getNearestLocation(point);\n\t\t\tif (loc._distance < minDist) {\n\t\t\t\tminDist = loc._distance;\n\t\t\t\tminLoc = loc;\n\t\t\t}\n\t\t}\n\t\treturn minLoc;\n\t},\n\n\tgetNearestPoint: function() {\n\t\treturn this.getNearestLocation.apply(this, arguments).getPoint();\n\t}\n}), new function() {\n\n\tfunction drawHandles(ctx, segments, matrix, size) {\n\t\tvar half = size / 2;\n\n\t\tfunction drawHandle(index) {\n\t\t\tvar hX = coords[index],\n\t\t\t\thY = coords[index + 1];\n\t\t\tif (pX != hX || pY != hY) {\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(pX, pY);\n\t\t\t\tctx.lineTo(hX, hY);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(hX, hY, half, 0, Math.PI * 2, true);\n\t\t\t\tctx.fill();\n\t\t\t}\n\t\t}\n\n\t\tvar coords = new Array(6);\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tvar state = segment._selectionState,\n\t\t\t\tpX = coords[0],\n\t\t\t\tpY = coords[1];\n\t\t\tif (state & 1)\n\t\t\t\tdrawHandle(2);\n\t\t\tif (state & 2)\n\t\t\t\tdrawHandle(4);\n\t\t\tctx.fillRect(pX - half, pY - half, size, size);\n\t\t\tif (!(state & 4)) {\n\t\t\t\tvar fillStyle = ctx.fillStyle;\n\t\t\t\tctx.fillStyle = '#ffffff';\n\t\t\t\tctx.fillRect(pX - half + 1, pY - half + 1, size - 2, size - 2);\n\t\t\t\tctx.fillStyle = fillStyle;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawSegments(ctx, path, matrix) {\n\t\tvar segments = path._segments,\n\t\t\tlength = segments.length,\n\t\t\tcoords = new Array(6),\n\t\t\tfirst = true,\n\t\t\tcurX, curY,\n\t\t\tprevX, prevY,\n\t\t\tinX, inY,\n\t\t\toutX, outY;\n\n\t\tfunction drawSegment(segment) {\n\t\t\tif (matrix) {\n\t\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\t\tcurX = coords[0];\n\t\t\t\tcurY = coords[1];\n\t\t\t} else {\n\t\t\t\tvar point = segment._point;\n\t\t\t\tcurX = point._x;\n\t\t\t\tcurY = point._y;\n\t\t\t}\n\t\t\tif (first) {\n\t\t\t\tctx.moveTo(curX, curY);\n\t\t\t\tfirst = false;\n\t\t\t} else {\n\t\t\t\tif (matrix) {\n\t\t\t\t\tinX = coords[2];\n\t\t\t\t\tinY = coords[3];\n\t\t\t\t} else {\n\t\t\t\t\tvar handle = segment._handleIn;\n\t\t\t\t\tinX = curX + handle._x;\n\t\t\t\t\tinY = curY + handle._y;\n\t\t\t\t}\n\t\t\t\tif (inX === curX && inY === curY\n\t\t\t\t\t\t&& outX === prevX && outY === prevY) {\n\t\t\t\t\tctx.lineTo(curX, curY);\n\t\t\t\t} else {\n\t\t\t\t\tctx.bezierCurveTo(outX, outY, inX, inY, curX, curY);\n\t\t\t\t}\n\t\t\t}\n\t\t\tprevX = curX;\n\t\t\tprevY = curY;\n\t\t\tif (matrix) {\n\t\t\t\toutX = coords[4];\n\t\t\t\toutY = coords[5];\n\t\t\t} else {\n\t\t\t\tvar handle = segment._handleOut;\n\t\t\t\toutX = prevX + handle._x;\n\t\t\t\toutY = prevY + handle._y;\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\tdrawSegment(segments[i]);\n\t\tif (path._closed && length > 0)\n\t\t\tdrawSegment(segments[0]);\n\t}\n\n\treturn {\n\t\t_draw: function(ctx, param, strokeMatrix) {\n\t\t\tvar dontStart = param.dontStart,\n\t\t\t\tdontPaint = param.dontFinish || param.clip,\n\t\t\t\tstyle = this.getStyle(),\n\t\t\t\thasFill = style.hasFill(),\n\t\t\t\thasStroke = style.hasStroke(),\n\t\t\t\tdashArray = style.getDashArray(),\n\t\t\t\tdashLength = !paper.support.nativeDash && hasStroke\n\t\t\t\t\t\t&& dashArray && dashArray.length;\n\n\t\t\tif (!dontStart)\n\t\t\t\tctx.beginPath();\n\n\t\t\tif (!dontStart && this._currentPath) {\n\t\t\t\tctx.currentPath = this._currentPath;\n\t\t\t} else if (hasFill || hasStroke && !dashLength || dontPaint) {\n\t\t\t\tdrawSegments(ctx, this, strokeMatrix);\n\t\t\t\tif (this._closed)\n\t\t\t\t\tctx.closePath();\n\t\t\t\tif (!dontStart)\n\t\t\t\t\tthis._currentPath = ctx.currentPath;\n\t\t\t}\n\n\t\t\tfunction getOffset(i) {\n\t\t\t\treturn dashArray[((i % dashLength) + dashLength) % dashLength];\n\t\t\t}\n\n\t\t\tif (!dontPaint && (hasFill || hasStroke)) {\n\t\t\t\tthis._setStyles(ctx);\n\t\t\t\tif (hasFill) {\n\t\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tif (hasStroke) {\n\t\t\t\t\tif (dashLength) {\n\t\t\t\t\t\tif (!dontStart)\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tvar iterator = new PathIterator(this, 32, 0.25,\n\t\t\t\t\t\t\t\tstrokeMatrix),\n\t\t\t\t\t\t\tlength = iterator.length,\n\t\t\t\t\t\t\tfrom = -style.getDashOffset(), to,\n\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\t\tfrom = from % length;\n\t\t\t\t\t\twhile (from > 0) {\n\t\t\t\t\t\t\tfrom -= getOffset(i--) + getOffset(i--);\n\t\t\t\t\t\t}\n\t\t\t\t\t\twhile (from < length) {\n\t\t\t\t\t\t\tto = from + getOffset(i++);\n\t\t\t\t\t\t\tif (from > 0 || to > 0)\n\t\t\t\t\t\t\t\titerator.drawPart(ctx,\n\t\t\t\t\t\t\t\t\t\tMath.max(from, 0), Math.max(to, 0));\n\t\t\t\t\t\t\tfrom = to + getOffset(i++);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_drawSelected: function(ctx, matrix) {\n\t\t\tctx.beginPath();\n\t\t\tdrawSegments(ctx, this, matrix);\n\t\t\tctx.stroke();\n\t\t\tdrawHandles(ctx, this._segments, matrix, paper.settings.handleSize);\n\t\t}\n\t};\n}, new function() {\n\n\tfunction getFirstControlPoints(rhs) {\n\t\tvar n = rhs.length,\n\t\t\tx = [],\n\t\t\ttmp = [],\n\t\t\tb = 2;\n\t\tx[0] = rhs[0] / b;\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\ttmp[i] = 1 / b;\n\t\t\tb = (i < n - 1 ? 4 : 2) - tmp[i];\n\t\t\tx[i] = (rhs[i] - x[i - 1]) / b;\n\t\t}\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tx[n - i - 1] -= tmp[n - i] * x[n - i];\n\t\t}\n\t\treturn x;\n\t}\n\n\treturn {\n\t\tsmooth: function() {\n\t\t\tvar segments = this._segments,\n\t\t\t\tsize = segments.length,\n\t\t\t\tclosed = this._closed,\n\t\t\t\tn = size,\n\t\t\t\toverlap = 0;\n\t\t\tif (size <= 2)\n\t\t\t\treturn;\n\t\t\tif (closed) {\n\t\t\t\toverlap = Math.min(size, 4);\n\t\t\t\tn += Math.min(size, overlap) * 2;\n\t\t\t}\n\t\t\tvar knots = [];\n\t\t\tfor (var i = 0; i < size; i++)\n\t\t\t\tknots[i + overlap] = segments[i]._point;\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0; i < overlap; i++) {\n\t\t\t\t\tknots[i] = segments[i + size - overlap]._point;\n\t\t\t\t\tknots[i + size + overlap] = segments[i]._point;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar rhs = [];\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._x + 2 * knots[i + 1]._x;\n\t\t\trhs[0] = knots[0]._x + 2 * knots[1]._x;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._x;\n\t\t\tvar x = getFirstControlPoints(rhs);\n\n\t\t\tfor (var i = 1; i < n - 1; i++)\n\t\t\t\trhs[i] = 4 * knots[i]._y + 2 * knots[i + 1]._y;\n\t\t\trhs[0] = knots[0]._y + 2 * knots[1]._y;\n\t\t\trhs[n - 1] = 3 * knots[n - 1]._y;\n\t\t\tvar y = getFirstControlPoints(rhs);\n\n\t\t\tif (closed) {\n\t\t\t\tfor (var i = 0, j = size; i < overlap; i++, j++) {\n\t\t\t\t\tvar f1 = i / overlap,\n\t\t\t\t\t\tf2 = 1 - f1,\n\t\t\t\t\t\tie = i + overlap,\n\t\t\t\t\t\tje = j + overlap;\n\t\t\t\t\tx[j] = x[i] * f1 + x[j] * f2;\n\t\t\t\t\ty[j] = y[i] * f1 + y[j] * f2;\n\t\t\t\t\tx[je] = x[ie] * f2 + x[je] * f1;\n\t\t\t\t\ty[je] = y[ie] * f2 + y[je] * f1;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t}\n\t\t\tvar handleIn = null;\n\t\t\tfor (var i = overlap; i <= n - overlap; i++) {\n\t\t\t\tvar segment = segments[i - overlap];\n\t\t\t\tif (handleIn)\n\t\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t\tif (i < n) {\n\t\t\t\t\tsegment.setHandleOut(\n\t\t\t\t\t\t\tnew Point(x[i], y[i]).subtract(segment._point));\n\t\t\t\t\thandleIn = i < n - 1\n\t\t\t\t\t\t\t? new Point(\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._x - x[i + 1],\n\t\t\t\t\t\t\t\t2 * knots[i + 1]._y - y[i + 1])\n\t\t\t\t\t\t\t: new Point(\n\t\t\t\t\t\t\t\t(knots[n]._x + x[n - 1]) / 2,\n\t\t\t\t\t\t\t\t(knots[n]._y + y[n - 1]) / 2);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (closed && handleIn) {\n\t\t\t\tvar segment = this._segments[0];\n\t\t\t\tsegment.setHandleIn(handleIn.subtract(segment._point));\n\t\t\t}\n\t\t}\n\t};\n}, new function() {\n\tfunction getCurrentSegment(that) {\n\t\tvar segments = that._segments;\n\t\tif (segments.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn segments[segments.length - 1];\n\t}\n\n\treturn {\n\t\tmoveTo: function() {\n\t\t\tvar segments = this._segments;\n\t\t\tif (segments.length === 1)\n\t\t\t\tthis.removeSegment(0);\n\t\t\tif (!segments.length)\n\t\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tthrow new Error('moveBy() is unsupported on Path items.');\n\t\t},\n\n\t\tlineTo: function() {\n\t\t\tthis._add([ new Segment(Point.read(arguments)) ]);\n\t\t},\n\n\t\tcubicCurveTo: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this);\n\t\t\tcurrent.setHandleOut(handle1.subtract(current._point));\n\t\t\tthis._add([ new Segment(to, handle2.subtract(to)) ]);\n\t\t},\n\n\t\tquadraticCurveTo: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(\n\t\t\t\thandle.add(current.subtract(handle).multiply(1 / 3)),\n\t\t\t\thandle.add(to.subtract(handle).multiply(1 / 3)),\n\t\t\t\tto\n\t\t\t);\n\t\t},\n\n\t\tcurveTo: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tt = Base.pick(Base.read(arguments), 0.5),\n\t\t\t\tt1 = 1 - t,\n\t\t\t\tcurrent = getCurrentSegment(this)._point,\n\t\t\t\thandle = through.subtract(current.multiply(t1 * t1))\n\t\t\t\t\t.subtract(to.multiply(t * t)).divide(2 * t * t1);\n\t\t\tif (handle.isNaN())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'Cannot put a curve through points with parameter = ' + t);\n\t\t\tthis.quadraticCurveTo(handle, to);\n\t\t},\n\n\t\tarcTo: function() {\n\t\t\tvar current = getCurrentSegment(this),\n\t\t\t\tfrom = current._point,\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tthrough,\n\t\t\t\tpeek = Base.peek(arguments),\n\t\t\t\tclockwise = Base.pick(peek, true),\n\t\t\t\tcenter, extent, vector, matrix;\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tvar middle = from.add(to).divide(2),\n\t\t\t\tthrough = middle.add(middle.subtract(from).rotate(\n\t\t\t\t\t\tclockwise ? -90 : 90));\n\t\t\t} else if (Base.remain(arguments) <= 2) {\n\t\t\t\tthrough = to;\n\t\t\t\tto = Point.read(arguments);\n\t\t\t} else {\n\t\t\t\tvar radius = Size.read(arguments);\n\t\t\t\tif (radius.isZero())\n\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\tvar rotation = Base.read(arguments),\n\t\t\t\t\tclockwise = !!Base.read(arguments),\n\t\t\t\t\tlarge = !!Base.read(arguments),\n\t\t\t\t\tmiddle = from.add(to).divide(2),\n\t\t\t\t\tpt = from.subtract(middle).rotate(-rotation),\n\t\t\t\t\tx = pt.x,\n\t\t\t\t\ty = pt.y,\n\t\t\t\t\tabs = Math.abs,\n\t\t\t\t\tepsilon = 1e-12,\n\t\t\t\t\trx = abs(radius.width),\n\t\t\t\t\try = abs(radius.height),\n\t\t\t\t\trxSq = rx * rx,\n\t\t\t\t\trySq = ry * ry,\n\t\t\t\t\txSq =  x * x,\n\t\t\t\t\tySq =  y * y;\n\t\t\t\tvar factor = Math.sqrt(xSq / rxSq + ySq / rySq);\n\t\t\t\tif (factor > 1) {\n\t\t\t\t\trx *= factor;\n\t\t\t\t\try *= factor;\n\t\t\t\t\trxSq = rx * rx;\n\t\t\t\t\trySq = ry * ry;\n\t\t\t\t}\n\t\t\t\tfactor = (rxSq * rySq - rxSq * ySq - rySq * xSq) /\n\t\t\t\t\t\t(rxSq * ySq + rySq * xSq);\n\t\t\t\tif (abs(factor) < epsilon)\n\t\t\t\t\tfactor = 0;\n\t\t\t\tif (factor < 0)\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\tcenter = new Point(rx * y / ry, -ry * x / rx)\n\t\t\t\t\t\t.multiply((large === clockwise ? -1 : 1)\n\t\t\t\t\t\t\t* Math.sqrt(factor))\n\t\t\t\t\t\t.rotate(rotation).add(middle);\n\t\t\t\tmatrix = new Matrix().translate(center).rotate(rotation)\n\t\t\t\t\t\t.scale(rx, ry);\n\t\t\t\tvector = matrix._inverseTransform(from);\n\t\t\t\textent = vector.getDirectedAngle(matrix._inverseTransform(to));\n\t\t\t\tif (!clockwise && extent > 0)\n\t\t\t\t\textent -= 360;\n\t\t\t\telse if (clockwise && extent < 0)\n\t\t\t\t\textent += 360;\n\t\t\t}\n\t\t\tif (through) {\n\t\t\t\tvar l1 = new Line(from.add(through).divide(2),\n\t\t\t\t\t\t\tthrough.subtract(from).rotate(90), true),\n\t\t\t\t\tl2 = new Line(through.add(to).divide(2),\n\t\t\t\t\t\t\tto.subtract(through).rotate(90), true),\n\t\t\t\t\tline = new Line(from, to),\n\t\t\t\t\tthroughSide = line.getSide(through);\n\t\t\t\tcenter = l1.intersect(l2, true);\n\t\t\t\tif (!center) {\n\t\t\t\t\tif (!throughSide)\n\t\t\t\t\t\treturn this.lineTo(to);\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'Cannot create an arc with the given arguments');\n\t\t\t\t}\n\t\t\t\tvector = from.subtract(center);\n\t\t\t\textent = vector.getDirectedAngle(to.subtract(center));\n\t\t\t\tvar centerSide = line.getSide(center);\n\t\t\t\tif (centerSide === 0) {\n\t\t\t\t\textent = throughSide * Math.abs(extent);\n\t\t\t\t} else if (throughSide === centerSide) {\n\t\t\t\t\textent += extent < 0 ? 360 : -360;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ext = Math.abs(extent),\n\t\t\t\tcount = ext >= 360 ? 4 : Math.ceil(ext / 90),\n\t\t\t\tinc = extent / count,\n\t\t\t\thalf = inc * Math.PI / 360,\n\t\t\t\tz = 4 / 3 * Math.sin(half) / (1 + Math.cos(half)),\n\t\t\t\tsegments = [];\n\t\t\tfor (var i = 0; i <= count; i++) {\n\t\t\t\tvar pt = to,\n\t\t\t\t\tout = null;\n\t\t\t\tif (i < count) {\n\t\t\t\t\tout = vector.rotate(90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\tpt = matrix._transformPoint(vector);\n\t\t\t\t\t\tout = matrix._transformPoint(vector.add(out))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt = center.add(vector);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tcurrent.setHandleOut(out);\n\t\t\t\t} else {\n\t\t\t\t\tvar _in = vector.rotate(-90).multiply(z);\n\t\t\t\t\tif (matrix) {\n\t\t\t\t\t\t_in = matrix._transformPoint(vector.add(_in))\n\t\t\t\t\t\t\t\t.subtract(pt);\n\t\t\t\t\t}\n\t\t\t\t\tsegments.push(new Segment(pt, _in, out));\n\t\t\t\t}\n\t\t\t\tvector = vector.rotate(inc);\n\t\t\t}\n\t\t\tthis._add(segments);\n\t\t},\n\n\t\tlineBy: function() {\n\t\t\tvar to = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.lineTo(current.add(to));\n\t\t},\n\n\t\tcurveBy: function() {\n\t\t\tvar through = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tparameter = Base.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.curveTo(current.add(through), current.add(to), parameter);\n\t\t},\n\n\t\tcubicCurveBy: function() {\n\t\t\tvar handle1 = Point.read(arguments),\n\t\t\t\thandle2 = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.cubicCurveTo(current.add(handle1), current.add(handle2),\n\t\t\t\t\tcurrent.add(to));\n\t\t},\n\n\t\tquadraticCurveBy: function() {\n\t\t\tvar handle = Point.read(arguments),\n\t\t\t\tto = Point.read(arguments),\n\t\t\t\tcurrent = getCurrentSegment(this)._point;\n\t\t\tthis.quadraticCurveTo(current.add(handle), current.add(to));\n\t\t},\n\n\t\tarcBy: function() {\n\t\t\tvar current = getCurrentSegment(this)._point,\n\t\t\t\tpoint = current.add(Point.read(arguments)),\n\t\t\t\tclockwise = Base.pick(Base.peek(arguments), true);\n\t\t\tif (typeof clockwise === 'boolean') {\n\t\t\t\tthis.arcTo(point, clockwise);\n\t\t\t} else {\n\t\t\t\tthis.arcTo(point, current.add(Point.read(arguments)));\n\t\t\t}\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tthis.setClosed(true);\n\t\t\tif (join)\n\t\t\t\tthis.join();\n\t\t}\n\t};\n}, {\n\n\t_getBounds: function(getter, matrix) {\n\t\treturn Path[getter](this._segments, this._closed, this.getStyle(),\n\t\t\t\tmatrix);\n\t},\n\nstatics: {\n\tisClockwise: function(segments) {\n\t\tvar sum = 0;\n\t\tfor (var i = 0, l = segments.length; i < l; i++)\n\t\t\tsum += Curve.getEdgeSum(Curve.getValues(\n\t\t\t\t\tsegments[i], segments[i + 1 < l ? i + 1 : 0]));\n\t\treturn sum > 0;\n\t},\n\n\tgetBounds: function(segments, closed, style, matrix, strokePadding) {\n\t\tvar first = segments[0];\n\t\tif (!first)\n\t\t\treturn new Rectangle();\n\t\tvar coords = new Array(6),\n\t\t\tprevCoords = first._transformCoordinates(matrix, new Array(6), false),\n\t\t\tmin = prevCoords.slice(0, 2),\n\t\t\tmax = min.slice(),\n\t\t\troots = new Array(2);\n\n\t\tfunction processSegment(segment) {\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tCurve._addBounds(\n\t\t\t\t\tprevCoords[i],\n\t\t\t\t\tprevCoords[i + 4],\n\t\t\t\t\tcoords[i + 2],\n\t\t\t\t\tcoords[i],\n\t\t\t\t\ti, strokePadding ? strokePadding[i] : 0, min, max, roots);\n\t\t\t}\n\t\t\tvar tmp = prevCoords;\n\t\t\tprevCoords = coords;\n\t\t\tcoords = tmp;\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++)\n\t\t\tprocessSegment(segments[i]);\n\t\tif (closed)\n\t\t\tprocessSegment(first);\n\t\treturn new Rectangle(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n\t},\n\n\tgetStrokeBounds: function(segments, closed, style, matrix) {\n\t\tif (!style.hasStroke())\n\t\t\treturn Path.getBounds(segments, closed, style, matrix);\n\t\tvar length = segments.length - (closed ? 0 : 1),\n\t\t\tradius = style.getStrokeWidth() / 2,\n\t\t\tpadding = Path._getPenPadding(radius, matrix),\n\t\t\tbounds = Path.getBounds(segments, closed, style, matrix, padding),\n\t\t\tjoin = style.getStrokeJoin(),\n\t\t\tcap = style.getStrokeCap(),\n\t\t\tmiterLimit = radius * style.getMiterLimit();\n\t\tvar joinBounds = new Rectangle(new Size(padding).multiply(2));\n\n\t\tfunction add(point) {\n\t\t\tbounds = bounds.include(matrix\n\t\t\t\t? matrix._transformPoint(point, point) : point);\n\t\t}\n\n\t\tfunction addRound(segment) {\n\t\t\tbounds = bounds.unite(joinBounds.setCenter(matrix\n\t\t\t\t? matrix._transformPoint(segment._point) : segment._point));\n\t\t}\n\n\t\tfunction addJoin(segment, join) {\n\t\t\tvar handleIn = segment._handleIn,\n\t\t\t\thandleOut = segment._handleOut;\n\t\t\tif (join === 'round' || !handleIn.isZero() && !handleOut.isZero()\n\t\t\t\t\t&& handleIn.isCollinear(handleOut)) {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addBevelJoin(segment, join, radius, miterLimit, add);\n\t\t\t}\n\t\t}\n\n\t\tfunction addCap(segment, cap) {\n\t\t\tif (cap === 'round') {\n\t\t\t\taddRound(segment);\n\t\t\t} else {\n\t\t\t\tPath._addSquareCap(segment, cap, radius, add);\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1; i < length; i++)\n\t\t\taddJoin(segments[i], join);\n\t\tif (closed) {\n\t\t\taddJoin(segments[0], join);\n\t\t} else if (length > 0) {\n\t\t\taddCap(segments[0], cap);\n\t\t\taddCap(segments[segments.length - 1], cap);\n\t\t}\n\t\treturn bounds;\n\t},\n\n\t_getPenPadding: function(radius, matrix) {\n\t\tif (!matrix)\n\t\t\treturn [radius, radius];\n\t\tvar mx = matrix.shiftless(),\n\t\t\thor = mx.transform(new Point(radius, 0)),\n\t\t\tver = mx.transform(new Point(0, radius)),\n\t\t\tphi = hor.getAngleInRadians(),\n\t\t\ta = hor.getLength(),\n\t\t\tb = ver.getLength();\n\t\tvar sin = Math.sin(phi),\n\t\t\tcos = Math.cos(phi),\n\t\t\ttan = Math.tan(phi),\n\t\t\ttx = -Math.atan(b * tan / a),\n\t\t\tty = Math.atan(b / (tan * a));\n\t\treturn [Math.abs(a * Math.cos(tx) * cos - b * Math.sin(tx) * sin),\n\t\t\t\tMath.abs(b * Math.sin(ty) * cos + a * Math.cos(ty) * sin)];\n\t},\n\n\t_addBevelJoin: function(segment, join, radius, miterLimit, addPoint, area) {\n\t\tvar curve2 = segment.getCurve(),\n\t\t\tcurve1 = curve2.getPrevious(),\n\t\t\tpoint = curve2.getPointAt(0, true),\n\t\t\tnormal1 = curve1.getNormalAt(1, true),\n\t\t\tnormal2 = curve2.getNormalAt(0, true),\n\t\t\tstep = normal1.getDirectedAngle(normal2) < 0 ? -radius : radius;\n\t\tnormal1.setLength(step);\n\t\tnormal2.setLength(step);\n\t\tif (area) {\n\t\t\taddPoint(point);\n\t\t\taddPoint(point.add(normal1));\n\t\t}\n\t\tif (join === 'miter') {\n\t\t\tvar corner = new Line(\n\t\t\t\t\tpoint.add(normal1),\n\t\t\t\t\tnew Point(-normal1.y, normal1.x), true\n\t\t\t\t).intersect(new Line(\n\t\t\t\t\tpoint.add(normal2),\n\t\t\t\t\tnew Point(-normal2.y, normal2.x), true\n\t\t\t\t), true);\n\t\t\tif (corner && point.getDistance(corner) <= miterLimit) {\n\t\t\t\taddPoint(corner);\n\t\t\t\tif (!area)\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (!area)\n\t\t\taddPoint(point.add(normal1));\n\t\taddPoint(point.add(normal2));\n\t},\n\n\t_addSquareCap: function(segment, cap, radius, addPoint, area) {\n\t\tvar point = segment._point,\n\t\t\tloc = segment.getLocation(),\n\t\t\tnormal = loc.getNormal().multiply(radius);\n\t\tif (area) {\n\t\t\taddPoint(point.subtract(normal));\n\t\t\taddPoint(point.add(normal));\n\t\t}\n\t\tif (cap === 'square')\n\t\t\tpoint = point.add(normal.rotate(loc.getParameter() === 0 ? -90 : 90));\n\t\taddPoint(point.add(normal));\n\t\taddPoint(point.subtract(normal));\n\t},\n\n\tgetHandleBounds: function(segments, closed, style, matrix, strokePadding,\n\t\t\tjoinPadding) {\n\t\tvar coords = new Array(6),\n\t\t\tx1 = Infinity,\n\t\t\tx2 = -x1,\n\t\t\ty1 = x1,\n\t\t\ty2 = x2;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tsegment._transformCoordinates(matrix, coords, false);\n\t\t\tfor (var j = 0; j < 6; j += 2) {\n\t\t\t\tvar padding = j === 0 ? joinPadding : strokePadding,\n\t\t\t\t\tpaddingX = padding ? padding[0] : 0,\n\t\t\t\t\tpaddingY = padding ? padding[1] : 0,\n\t\t\t\t\tx = coords[j],\n\t\t\t\t\ty = coords[j + 1],\n\t\t\t\t\txn = x - paddingX,\n\t\t\t\t\txx = x + paddingX,\n\t\t\t\t\tyn = y - paddingY,\n\t\t\t\t\tyx = y + paddingY;\n\t\t\t\tif (xn < x1) x1 = xn;\n\t\t\t\tif (xx > x2) x2 = xx;\n\t\t\t\tif (yn < y1) y1 = yn;\n\t\t\t\tif (yx > y2) y2 = yx;\n\t\t\t}\n\t\t}\n\t\treturn new Rectangle(x1, y1, x2 - x1, y2 - y1);\n\t},\n\n\tgetRoughBounds: function(segments, closed, style, matrix) {\n\t\tvar strokeRadius = style.hasStroke() ? style.getStrokeWidth() / 2 : 0,\n\t\t\tjoinRadius = strokeRadius;\n\t\tif (strokeRadius > 0) {\n\t\t\tif (style.getStrokeJoin() === 'miter')\n\t\t\t\tjoinRadius = strokeRadius * style.getMiterLimit();\n\t\t\tif (style.getStrokeCap() === 'square')\n\t\t\t\tjoinRadius = Math.max(joinRadius, strokeRadius * Math.sqrt(2));\n\t\t}\n\t\treturn Path.getHandleBounds(segments, closed, style, matrix,\n\t\t\t\tPath._getPenPadding(strokeRadius, matrix),\n\t\t\t\tPath._getPenPadding(joinRadius, matrix));\n\t}\n}});\n\nPath.inject({ statics: new function() {\n\n\tvar kappa = 0.5522847498307936,\n\t\tellipseSegments = [\n\t\t\tnew Segment([-1, 0], [0, kappa ], [0, -kappa]),\n\t\t\tnew Segment([0, -1], [-kappa, 0], [kappa, 0 ]),\n\t\t\tnew Segment([1, 0], [0, -kappa], [0, kappa ]),\n\t\t\tnew Segment([0, 1], [kappa, 0 ], [-kappa, 0])\n\t\t];\n\n\tfunction createPath(segments, closed, args) {\n\t\tvar props = Base.getNamed(args),\n\t\t\tpath = new Path(props && props.insert === false && Item.NO_INSERT);\n\t\tpath._add(segments);\n\t\tpath._closed = closed;\n\t\treturn path.set(props);\n\t}\n\n\tfunction createEllipse(center, radius, args) {\n\t\tvar segments = new Array(4);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tvar segment = ellipseSegments[i];\n\t\t\tsegments[i] = new Segment(\n\t\t\t\tsegment._point.multiply(radius).add(center),\n\t\t\t\tsegment._handleIn.multiply(radius),\n\t\t\t\tsegment._handleOut.multiply(radius)\n\t\t\t);\n\t\t}\n\t\treturn createPath(segments, true, args);\n\t}\n\n\treturn {\n\t\tLine: function() {\n\t\t\treturn createPath([\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'from')),\n\t\t\t\tnew Segment(Point.readNamed(arguments, 'to'))\n\t\t\t], false, arguments);\n\t\t},\n\n\t\tCircle: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius');\n\t\t\treturn createEllipse(center, new Size(radius), arguments);\n\t\t},\n\n\t\tRectangle: function() {\n\t\t\tvar rect = Rectangle.readNamed(arguments, 'rectangle'),\n\t\t\t\tradius = Size.readNamed(arguments, 'radius', 0,\n\t\t\t\t\t\t{ readNull: true }),\n\t\t\t\tbl = rect.getBottomLeft(true),\n\t\t\t\ttl = rect.getTopLeft(true),\n\t\t\t\ttr = rect.getTopRight(true),\n\t\t\t\tbr = rect.getBottomRight(true),\n\t\t\t\tsegments;\n\t\t\tif (!radius || radius.isZero()) {\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl),\n\t\t\t\t\tnew Segment(tl),\n\t\t\t\t\tnew Segment(tr),\n\t\t\t\t\tnew Segment(br)\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\tradius = Size.min(radius, rect.getSize(true).divide(2));\n\t\t\t\tvar rx = radius.width,\n\t\t\t\t\try = radius.height,\n\t\t\t\t\thx = rx * kappa,\n\t\t\t\t\thy = ry * kappa;\n\t\t\t\tsegments = [\n\t\t\t\t\tnew Segment(bl.add(rx, 0), null, [-hx, 0]),\n\t\t\t\t\tnew Segment(bl.subtract(0, ry), [0, hy]),\n\t\t\t\t\tnew Segment(tl.add(0, ry), null, [0, -hy]),\n\t\t\t\t\tnew Segment(tl.add(rx, 0), [-hx, 0], null),\n\t\t\t\t\tnew Segment(tr.subtract(rx, 0), null, [hx, 0]),\n\t\t\t\t\tnew Segment(tr.add(0, ry), [0, -hy], null),\n\t\t\t\t\tnew Segment(br.subtract(0, ry), null, [0, hy]),\n\t\t\t\t\tnew Segment(br.subtract(rx, 0), [hx, 0])\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tRoundRectangle: '#Rectangle',\n\n\t\tEllipse: function() {\n\t\t\tvar ellipse = Shape._readEllipse(arguments);\n\t\t\treturn createEllipse(ellipse.center, ellipse.radius, arguments);\n\t\t},\n\n\t\tOval: '#Ellipse',\n\n\t\tArc: function() {\n\t\t\tvar from = Point.readNamed(arguments, 'from'),\n\t\t\t\tthrough = Point.readNamed(arguments, 'through'),\n\t\t\t\tto = Point.readNamed(arguments, 'to'),\n\t\t\t\tprops = Base.getNamed(arguments),\n\t\t\t\tpath = new Path(props && props.insert === false\n\t\t\t\t\t\t&& Item.NO_INSERT);\n\t\t\tpath.moveTo(from);\n\t\t\tpath.arcTo(through, to);\n\t\t\treturn path.set(props);\n\t\t},\n\n\t\tRegularPolygon: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tsides = Base.readNamed(arguments, 'sides'),\n\t\t\t\tradius = Base.readNamed(arguments, 'radius'),\n\t\t\t\tstep = 360 / sides,\n\t\t\t\tthree = !(sides % 3),\n\t\t\t\tvector = new Point(0, three ? -radius : radius),\n\t\t\t\toffset = three ? -1 : 0.5,\n\t\t\t\tsegments = new Array(sides);\n\t\t\tfor (var i = 0; i < sides; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(\n\t\t\t\t\tvector.rotate((i + offset) * step)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t},\n\n\t\tStar: function() {\n\t\t\tvar center = Point.readNamed(arguments, 'center'),\n\t\t\t\tpoints = Base.readNamed(arguments, 'points') * 2,\n\t\t\t\tradius1 = Base.readNamed(arguments, 'radius1'),\n\t\t\t\tradius2 = Base.readNamed(arguments, 'radius2'),\n\t\t\t\tstep = 360 / points,\n\t\t\t\tvector = new Point(0, -1),\n\t\t\t\tsegments = new Array(points);\n\t\t\tfor (var i = 0; i < points; i++)\n\t\t\t\tsegments[i] = new Segment(center.add(vector.rotate(step * i)\n\t\t\t\t\t\t.multiply(i % 2 ? radius2 : radius1)));\n\t\t\treturn createPath(segments, true, arguments);\n\t\t}\n\t};\n}});\n\nvar CompoundPath = PathItem.extend({\n\t_class: 'CompoundPath',\n\t_serializeFields: {\n\t\tchildren: []\n\t},\n\n\tinitialize: function CompoundPath(arg) {\n\t\tthis._children = [];\n\t\tthis._namedChildren = {};\n\t\tif (!this._initialize(arg)) {\n\t\t\tif (typeof arg === 'string') {\n\t\t\t\tthis.setPathData(arg);\n\t\t\t} else {\n\t\t\t\tthis.addChildren(Array.isArray(arg) ? arg : arguments);\n\t\t\t}\n\t\t}\n\t},\n\n\tinsertChildren: function insertChildren(index, items, _preserve) {\n\t\titems = insertChildren.base.call(this, index, items, _preserve, Path);\n\t\tfor (var i = 0, l = !_preserve && items && items.length; i < l; i++) {\n\t\t\tvar item = items[i];\n\t\t\tif (item._clockwise === undefined)\n\t\t\t\titem.setClockwise(item._index === 0);\n\t\t}\n\t\treturn items;\n\t},\n\n\treverse: function() {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tchildren[i].reverse();\n\t},\n\n\tsmooth: function() {\n\t\tfor (var i = 0, l = this._children.length; i < l; i++)\n\t\t\tthis._children[i].smooth();\n\t},\n\n\treduce: function reduce() {\n\t\tif (this._children.length === 0) {\n\t\t\tvar path = new Path(Item.NO_INSERT);\n\t\t\tpath.insertAbove(this);\n\t\t\tpath.setStyle(this._style);\n\t\t\tthis.remove();\n\t\t\treturn path;\n\t\t} else {\n\t\t\treturn reduce.base.call(this);\n\t\t}\n\t},\n\n\tisClockwise: function() {\n\t\tvar child = this.getFirstChild();\n\t\treturn child && child.isClockwise();\n\t},\n\n\tsetClockwise: function(clockwise) {\n\t\tif (this.isClockwise() !== !!clockwise)\n\t\t\tthis.reverse();\n\t},\n\n\tgetFirstSegment: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstSegment();\n\t},\n\n\tgetLastSegment: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getLastSegment();\n\t},\n\n\tgetCurves: function() {\n\t\tvar children = this._children,\n\t\t\tcurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tcurves.push.apply(curves, children[i].getCurves());\n\t\treturn curves;\n\t},\n\n\tgetFirstCurve: function() {\n\t\tvar first = this.getFirstChild();\n\t\treturn first && first.getFirstCurve();\n\t},\n\n\tgetLastCurve: function() {\n\t\tvar last = this.getLastChild();\n\t\treturn last && last.getFirstCurve();\n\t},\n\n\tgetArea: function() {\n\t\tvar children = this._children,\n\t\t\tarea = 0;\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tarea += children[i].getArea();\n\t\treturn area;\n\t}\n}, {\n\tbeans: true,\n\n\tgetPathData: function(_matrix, _precision) {\n\t\tvar children = this._children,\n\t\t\tpaths = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tpaths.push(child.getPathData(_matrix && !mx.isIdentity()\n\t\t\t\t\t? _matrix.chain(mx) : mx, _precision));\n\t\t}\n\t\treturn paths.join(' ');\n\t}\n}, {\n\t_getChildHitTestOptions: function(options) {\n\t\treturn options.class === Path || options.type === 'path'\n\t\t\t\t? options\n\t\t\t\t: new Base(options, { fill: false });\n\t},\n\n\t_draw: function(ctx, param, strokeMatrix) {\n\t\tvar children = this._children;\n\t\tif (children.length === 0)\n\t\t\treturn;\n\n\t\tif (this._currentPath) {\n\t\t\tctx.currentPath = this._currentPath;\n\t\t} else {\n\t\t\tparam = param.extend({ dontStart: true, dontFinish: true });\n\t\t\tctx.beginPath();\n\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\tchildren[i].draw(ctx, param, strokeMatrix);\n\t\t\tthis._currentPath = ctx.currentPath;\n\t\t}\n\n\t\tif (!param.clip) {\n\t\t\tthis._setStyles(ctx);\n\t\t\tvar style = this._style;\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fill(style.getWindingRule());\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\t_drawSelected: function(ctx, matrix, selectedItems) {\n\t\tvar children = this._children;\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i],\n\t\t\t\tmx = child._matrix;\n\t\t\tif (!selectedItems[child._id])\n\t\t\t\tchild._drawSelected(ctx, mx.isIdentity() ? matrix\n\t\t\t\t\t\t: matrix.chain(mx));\n\t\t}\n\t}\n}, new function() {\n\tfunction getCurrentPath(that, check) {\n\t\tvar children = that._children;\n\t\tif (check && children.length === 0)\n\t\t\tthrow new Error('Use a moveTo() command first');\n\t\treturn children[children.length - 1];\n\t}\n\n\tvar fields = {\n\t\tmoveTo: function() {\n\t\t\tvar current = getCurrentPath(this),\n\t\t\t\tpath = current && current.isEmpty() ? current : new Path();\n\t\t\tif (path !== current)\n\t\t\t\tthis.addChild(path);\n\t\t\tpath.moveTo.apply(path, arguments);\n\t\t},\n\n\t\tmoveBy: function() {\n\t\t\tvar current = getCurrentPath(this, true),\n\t\t\t\tlast = current && current.getLastSegment(),\n\t\t\t\tpoint = Point.read(arguments);\n\t\t\tthis.moveTo(last ? point.add(last._point) : point);\n\t\t},\n\n\t\tclosePath: function(join) {\n\t\t\tgetCurrentPath(this, true).closePath(join);\n\t\t}\n\t};\n\n\tBase.each(['lineTo', 'cubicCurveTo', 'quadraticCurveTo', 'curveTo', 'arcTo',\n\t\t\t'lineBy', 'cubicCurveBy', 'quadraticCurveBy', 'curveBy', 'arcBy'],\n\t\t\tfunction(key) {\n\t\t\t\tfields[key] = function() {\n\t\t\t\t\tvar path = getCurrentPath(this, true);\n\t\t\t\t\tpath[key].apply(path, arguments);\n\t\t\t\t};\n\t\t\t}\n\t);\n\n\treturn fields;\n});\n\nPathItem.inject(new function() {\n\tvar operators = {\n\t\tunite: function(w) {\n\t\t\treturn w === 1 || w === 0;\n\t\t},\n\n\t\tintersect: function(w) {\n\t\t\treturn w === 2;\n\t\t},\n\n\t\tsubtract: function(w) {\n\t\t\treturn w === 1;\n\t\t},\n\n\t\texclude: function(w) {\n\t\t\treturn w === 1;\n\t\t}\n\t};\n\n\tfunction computeBoolean(path1, path2, operation) {\n\t\tvar operator = operators[operation];\n\t\tfunction preparePath(path) {\n\t\t\treturn path.clone(false).reduce().reorient().transform(null, true,\n\t\t\t\t\ttrue);\n\t\t}\n\n\t\tvar _path1 = preparePath(path1),\n\t\t\t_path2 = path2 && path1 !== path2 && preparePath(path2);\n\t\tif (_path2 && /^(subtract|exclude)$/.test(operation)\n\t\t\t\t^ (_path2.isClockwise() !== _path1.isClockwise()))\n\t\t\t_path2.reverse();\n\t\tsplitPath(_path1.getIntersections(_path2, null, true));\n\n\t\tvar chain = [],\n\t\t\tsegments = [],\n\t\t\tmonoCurves = [],\n\t\t\ttolerance = 0.000001;\n\n\t\tfunction collect(paths) {\n\t\t\tfor (var i = 0, l = paths.length; i < l; i++) {\n\t\t\t\tvar path = paths[i];\n\t\t\t\tsegments.push.apply(segments, path._segments);\n\t\t\t\tmonoCurves.push.apply(monoCurves, path._getMonoCurves());\n\t\t\t}\n\t\t}\n\n\t\tcollect(_path1._children || [_path1]);\n\t\tif (_path2)\n\t\t\tcollect(_path2._children || [_path2]);\n\t\tsegments.sort(function(a, b) {\n\t\t\tvar _a = a._intersection,\n\t\t\t\t_b = b._intersection;\n\t\t\treturn !_a && !_b || _a && _b ? 0 : _a ? -1 : 1;\n\t\t});\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar segment = segments[i];\n\t\t\tif (segment._winding != null)\n\t\t\t\tcontinue;\n\t\t\tchain.length = 0;\n\t\t\tvar startSeg = segment,\n\t\t\t\ttotalLength = 0,\n\t\t\t\twindingSum = 0;\n\t\t\tdo {\n\t\t\t\tvar length = segment.getCurve().getLength();\n\t\t\t\tchain.push({ segment: segment, length: length });\n\t\t\t\ttotalLength += length;\n\t\t\t\tsegment = segment.getNext();\n\t\t\t} while (segment && !segment._intersection && segment !== startSeg);\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tvar length = totalLength * (j + 1) / 4;\n\t\t\t\tfor (var k = 0, m = chain.length; k < m; k++) {\n\t\t\t\t\tvar node = chain[k],\n\t\t\t\t\t\tcurveLength = node.length;\n\t\t\t\t\tif (length <= curveLength) {\n\t\t\t\t\t\tif (length < tolerance\n\t\t\t\t\t\t\t\t|| curveLength - length < tolerance)\n\t\t\t\t\t\t\tlength = curveLength / 2;\n\t\t\t\t\t\tvar curve = node.segment.getCurve(),\n\t\t\t\t\t\t\tpt = curve.getPointAt(length),\n\t\t\t\t\t\t\thor = curve.isLinear() && Math.abs(curve\n\t\t\t\t\t\t\t\t\t.getTangentAt(0.5, true).y) < tolerance,\n\t\t\t\t\t\t\tpath = curve._path;\n\t\t\t\t\t\tif (path._parent instanceof CompoundPath)\n\t\t\t\t\t\t\tpath = path._parent;\n\t\t\t\t\t\twindingSum += operation === 'subtract' && _path2\n\t\t\t\t\t\t\t&& (path === _path1 && _path2._getWinding(pt, hor)\n\t\t\t\t\t\t\t|| path === _path2 && !_path1._getWinding(pt, hor))\n\t\t\t\t\t\t\t? 0\n\t\t\t\t\t\t\t: getWinding(pt, monoCurves, hor);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tlength -= curveLength;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar winding = Math.round(windingSum / 3);\n\t\t\tfor (var j = chain.length - 1; j >= 0; j--)\n\t\t\t\tchain[j].segment._winding = winding;\n\t\t}\n\t\tvar result = new CompoundPath(Item.NO_INSERT);\n\t\tresult.insertAbove(path1);\n\t\tresult.addChildren(tracePaths(segments, operator), true);\n\t\tresult = result.reduce();\n\t\tresult.setStyle(path1._style);\n\t\treturn result;\n\t}\n\n\tfunction splitPath(intersections) {\n\t\tvar tMin = 0.000001,\n\t\t\ttMax = 1 - tMin,\n\t\t\tlinearHandles;\n\n\t\tfunction resetLinear() {\n\t\t\tfor (var i = 0, l = linearHandles.length; i < l; i++)\n\t\t\t\tlinearHandles[i].set(0, 0);\n\t\t}\n\n\t\tfor (var i = intersections.length - 1, curve, prev; i >= 0; i--) {\n\t\t\tvar loc = intersections[i],\n\t\t\t\tt = loc._parameter;\n\t\t\tif (prev && prev._curve === loc._curve && prev._parameter > 0) {\n\t\t\t\tt /= prev._parameter;\n\t\t\t} else {\n\t\t\t\tcurve = loc._curve;\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tresetLinear();\n\t\t\t\tlinearHandles = curve.isLinear() ? [\n\t\t\t\t\t\tcurve._segment1._handleOut,\n\t\t\t\t\t\tcurve._segment2._handleIn\n\t\t\t\t\t] : null;\n\t\t\t}\n\t\t\tvar newCurve,\n\t\t\t\tsegment;\n\t\t\tif (newCurve = curve.divide(t, true, true)) {\n\t\t\t\tsegment = newCurve._segment1;\n\t\t\t\tcurve = newCurve.getPrevious();\n\t\t\t\tif (linearHandles)\n\t\t\t\t\tlinearHandles.push(segment._handleOut, segment._handleIn);\n\t\t\t} else {\n\t\t\t\tsegment = t < tMin\n\t\t\t\t\t? curve._segment1\n\t\t\t\t\t: t > tMax\n\t\t\t\t\t\t? curve._segment2\n\t\t\t\t\t\t: curve.getPartLength(0, t) < curve.getPartLength(t, 1)\n\t\t\t\t\t\t\t? curve._segment1\n\t\t\t\t\t\t\t: curve._segment2;\n\t\t\t}\n\t\t\tsegment._intersection = loc.getIntersection();\n\t\t\tloc._segment = segment;\n\t\t\tprev = loc;\n\t\t}\n\t\tif (linearHandles)\n\t\t\tresetLinear();\n\t}\n\n\tfunction getWinding(point, curves, horizontal, testContains) {\n\t\tvar tolerance = 0.000001,\n\t\t\ttMin = tolerance,\n\t\t\ttMax = 1 - tMin,\n\t\t\tpx = point.x,\n\t\t\tpy = point.y,\n\t\t\twindLeft = 0,\n\t\t\twindRight = 0,\n\t\t\troots = [],\n\t\t\tabs = Math.abs;\n\t\tif (horizontal) {\n\t\t\tvar yTop = -Infinity,\n\t\t\t\tyBottom = Infinity,\n\t\t\t\tyBefore = py - tolerance,\n\t\t\t\tyAfter = py + tolerance;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif (Curve.solveCubic(values, 0, px, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--) {\n\t\t\t\t\t\tvar y = Curve.getPoint(values, roots[j]).y;\n\t\t\t\t\t\tif (y < yBefore && y > yTop) {\n\t\t\t\t\t\t\tyTop = y;\n\t\t\t\t\t\t} else if (y > yAfter && y < yBottom) {\n\t\t\t\t\t\t\tyBottom = y;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tyTop = (yTop + py) / 2;\n\t\t\tyBottom = (yBottom + py) / 2;\n\t\t\tif (yTop > -Infinity)\n\t\t\t\twindLeft = getWinding(new Point(px, yTop), curves);\n\t\t\tif (yBottom < Infinity)\n\t\t\t\twindRight = getWinding(new Point(px, yBottom), curves);\n\t\t} else {\n\t\t\tvar xBefore = px - tolerance,\n\t\t\t\txAfter = px + tolerance;\n\t\t\tvar startCounted = false,\n\t\t\t\tprevCurve,\n\t\t\t\tprevT;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar curve = curves[i],\n\t\t\t\t\tvalues = curve.values,\n\t\t\t\t\twinding = curve.winding;\n\t\t\t\tif (winding && (winding === 1\n\t\t\t\t\t\t&& py >= values[1] && py <= values[7]\n\t\t\t\t\t\t|| py >= values[7] && py <= values[1])\n\t\t\t\t\t&& Curve.solveCubic(values, 1, py, roots, 0, 1) === 1) {\n\t\t\t\t\tvar t = roots[0];\n\t\t\t\t\tif (!(\n\t\t\t\t\t\tt > tMax && startCounted && curve.next !== curves[i + 1]\n\t\t\t\t\t\t|| t < tMin && prevT > tMax\n\t\t\t\t\t\t\t&& curve.previous === prevCurve)) {\n\t\t\t\t\t\tvar x = Curve.getPoint(values, t).x,\n\t\t\t\t\t\t\tslope = Curve.getTangent(values, t).y,\n\t\t\t\t\t\t\tcounted = false;\n\t\t\t\t\t\tif (Numerical.isZero(slope) && !Curve.isLinear(values)\n\t\t\t\t\t\t\t\t|| t < tMin && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.previous.values, 1).y < 0\n\t\t\t\t\t\t\t\t|| t > tMax && slope * Curve.getTangent(\n\t\t\t\t\t\t\t\t\tcurve.next.values, 0).y < 0) {\n\t\t\t\t\t\t\tif (testContains && x >= xBefore && x <= xAfter) {\n\t\t\t\t\t\t\t\t++windLeft;\n\t\t\t\t\t\t\t\t++windRight;\n\t\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (x <= xBefore) {\n\t\t\t\t\t\t\twindLeft += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t} else if (x >= xAfter) {\n\t\t\t\t\t\t\twindRight += winding;\n\t\t\t\t\t\t\tcounted = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (curve.previous !== curves[i - 1])\n\t\t\t\t\t\t\tstartCounted = t < tMin && counted;\n\t\t\t\t\t}\n\t\t\t\t\tprevCurve = curve;\n\t\t\t\t\tprevT = t;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Math.max(abs(windLeft), abs(windRight));\n\t}\n\n\tfunction tracePaths(segments, operator, selfOp) {\n\t\tvar paths = [],\n\t\t\ttMin = 0.000001,\n\t\t\ttMax = 1 - tMin;\n\t\tfor (var i = 0, seg, startSeg, l = segments.length; i < l; i++) {\n\t\t\tseg = startSeg = segments[i];\n\t\t\tif (seg._visited || !operator(seg._winding))\n\t\t\t\tcontinue;\n\t\t\tvar path = new Path(Item.NO_INSERT),\n\t\t\t\tinter = seg._intersection,\n\t\t\t\tstartInterSeg = inter && inter._segment,\n\t\t\t\tadded = false,\n\t\t\t\tdir = 1;\n\t\t\tdo {\n\t\t\t\tvar handleIn = dir > 0 ? seg._handleIn : seg._handleOut,\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn,\n\t\t\t\t\tinterSeg;\n\t\t\t\tif (added && (!operator(seg._winding) || selfOp)\n\t\t\t\t\t\t&& (inter = seg._intersection)\n\t\t\t\t\t\t&& (interSeg = inter._segment)\n\t\t\t\t\t\t&& interSeg !== startSeg) {\n\t\t\t\t\tif (selfOp) {\n\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar c1 = seg.getCurve();\n\t\t\t\t\t\tif (dir > 0)\n\t\t\t\t\t\t\tc1 = c1.getPrevious();\n\t\t\t\t\t\tvar t1 = c1.getTangentAt(dir < 1 ? tMin : tMax, true),\n\t\t\t\t\t\t\tc4 = interSeg.getCurve(),\n\t\t\t\t\t\t\tc3 = c4.getPrevious(),\n\t\t\t\t\t\t\tt3 = c3.getTangentAt(tMax, true),\n\t\t\t\t\t\t\tt4 = c4.getTangentAt(tMin, true),\n\t\t\t\t\t\t\tw3 = t1.cross(t3),\n\t\t\t\t\t\t\tw4 = t1.cross(t4);\n\t\t\t\t\t\tif (w3 * w4 !== 0) {\n\t\t\t\t\t\t\tvar curve = w3 < w4 ? c3 : c4,\n\t\t\t\t\t\t\t\tnextCurve = operator(curve._segment1._winding)\n\t\t\t\t\t\t\t\t\t? curve\n\t\t\t\t\t\t\t\t\t: w3 < w4 ? c4 : c3,\n\t\t\t\t\t\t\t\tnextSeg = nextCurve._segment1;\n\t\t\t\t\t\t\tdir = nextCurve === c3 ? -1 : 1;\n\t\t\t\t\t\t\tif (nextSeg._visited && seg._path !== nextSeg._path\n\t\t\t\t\t\t\t\t\t\t|| !operator(nextSeg._winding)) {\n\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tseg._visited = interSeg._visited;\n\t\t\t\t\t\t\t\tseg = interSeg;\n\t\t\t\t\t\t\t\tif (nextSeg._visited)\n\t\t\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdir = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\thandleOut = dir > 0 ? seg._handleOut : seg._handleIn;\n\t\t\t\t}\n\t\t\t\tpath.add(new Segment(seg._point, added && handleIn, handleOut));\n\t\t\t\tadded = true;\n\t\t\t\tseg._visited = true;\n\t\t\t\tseg = dir > 0 ? seg.getNext() : seg. getPrevious();\n\t\t\t} while (seg && !seg._visited\n\t\t\t\t\t&& seg !== startSeg && seg !== startInterSeg\n\t\t\t\t\t&& (seg._intersection || operator(seg._winding)));\n\t\t\tif (seg && (seg === startSeg || seg === startInterSeg)) {\n\t\t\t\tpath.firstSegment.setHandleIn((seg === startInterSeg\n\t\t\t\t\t\t? startInterSeg : seg)._handleIn);\n\t\t\t\tpath.setClosed(true);\n\t\t\t} else {\n\t\t\t\tpath.lastSegment._handleOut.set(0, 0);\n\t\t\t}\n\t\t\tif (path._segments.length >\n\t\t\t\t\t(path._closed ? path.isLinear() ? 2 : 0 : 1))\n\t\t\t\tpaths.push(path);\n\t\t}\n\t\treturn paths;\n\t}\n\n\treturn {\n\t\t_getWinding: function(point, horizontal, testContains) {\n\t\t\treturn getWinding(point, this._getMonoCurves(),\n\t\t\t\t\thorizontal, testContains);\n\t\t},\n\n\t\tunite: function(path) {\n\t\t\treturn computeBoolean(this, path, 'unite');\n\t\t},\n\n\t\tintersect: function(path) {\n\t\t\treturn computeBoolean(this, path, 'intersect');\n\t\t},\n\n\t\tsubtract: function(path) {\n\t\t\treturn computeBoolean(this, path, 'subtract');\n\t\t},\n\n\t\texclude: function(path) {\n\t\t\treturn computeBoolean(this, path, 'exclude');\n\t\t},\n\n\t\tdivide: function(path) {\n\t\t\treturn new Group([this.subtract(path), this.intersect(path)]);\n\t\t}\n\t};\n});\n\nPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar monoCurves = this._monoCurves,\n\t\t\tprevCurve;\n\n\t\tfunction insertCurve(v) {\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[7],\n\t\t\t\tcurve = {\n\t\t\t\t\tvalues: v,\n\t\t\t\t\twinding: y0 === y1\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: y0 > y1\n\t\t\t\t\t\t\t? -1\n\t\t\t\t\t\t\t: 1,\n\t\t\t\t\tprevious: prevCurve,\n\t\t\t\t\tnext: null\n\t\t\t\t};\n\t\t\tif (prevCurve)\n\t\t\t\tprevCurve.next = curve;\n\t\t\tmonoCurves.push(curve);\n\t\t\tprevCurve = curve;\n\t\t}\n\n\t\tfunction handleCurve(v) {\n\t\t\tif (Curve.getLength(v) === 0)\n\t\t\t\treturn;\n\t\t\tvar y0 = v[1],\n\t\t\t\ty1 = v[3],\n\t\t\t\ty2 = v[5],\n\t\t\t\ty3 = v[7];\n\t\t\tif (Curve.isLinear(v)) {\n\t\t\t\tinsertCurve(v);\n\t\t\t} else {\n\t\t\t\tvar a = 3 * (y1 - y2) - y0 + y3,\n\t\t\t\t\tb = 2 * (y0 + y2) - 4 * y1,\n\t\t\t\t\tc = y1 - y0,\n\t\t\t\t\ttolerance = 0.000001,\n\t\t\t\t\troots = [];\n\t\t\t\tvar count = Numerical.solveQuadratic(a, b, c, roots, tolerance,\n\t\t\t\t\t\t1 - tolerance);\n\t\t\t\tif (count === 0) {\n\t\t\t\t\tinsertCurve(v);\n\t\t\t\t} else {\n\t\t\t\t\troots.sort();\n\t\t\t\t\tvar t = roots[0],\n\t\t\t\t\t\tparts = Curve.subdivide(v, t);\n\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\tif (count > 1) {\n\t\t\t\t\t\tt = (roots[1] - t) / (1 - t);\n\t\t\t\t\t\tparts = Curve.subdivide(parts[1], t);\n\t\t\t\t\t\tinsertCurve(parts[0]);\n\t\t\t\t\t}\n\t\t\t\t\tinsertCurve(parts[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!monoCurves) {\n\t\t\tmonoCurves = this._monoCurves = [];\n\t\t\tvar curves = this.getCurves(),\n\t\t\t\tsegments = this._segments;\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++)\n\t\t\t\thandleCurve(curves[i].getValues());\n\t\t\tif (!this._closed && segments.length > 1) {\n\t\t\t\tvar p1 = segments[segments.length - 1]._point,\n\t\t\t\t\tp2 = segments[0]._point,\n\t\t\t\t\tp1x = p1._x, p1y = p1._y,\n\t\t\t\t\tp2x = p2._x, p2y = p2._y;\n\t\t\t\thandleCurve([p1x, p1y, p1x, p1y, p2x, p2y, p2x, p2y]);\n\t\t\t}\n\t\t\tif (monoCurves.length > 0) {\n\t\t\t\tvar first = monoCurves[0],\n\t\t\t\t\tlast = monoCurves[monoCurves.length - 1];\n\t\t\t\tfirst.previous = last;\n\t\t\t\tlast.next = first;\n\t\t\t}\n\t\t}\n\t\treturn monoCurves;\n\t},\n\n\tgetInteriorPoint: function() {\n\t\tvar bounds = this.getBounds(),\n\t\t\tpoint = bounds.getCenter(true);\n\t\tif (!this.contains(point)) {\n\t\t\tvar curves = this._getMonoCurves(),\n\t\t\t\troots = [],\n\t\t\t\ty = point.y,\n\t\t\t\txIntercepts = [];\n\t\t\tfor (var i = 0, l = curves.length; i < l; i++) {\n\t\t\t\tvar values = curves[i].values;\n\t\t\t\tif ((curves[i].winding === 1\n\t\t\t\t\t\t&& y >= values[1] && y <= values[7]\n\t\t\t\t\t\t|| y >= values[7] && y <= values[1])\n\t\t\t\t\t\t&& Curve.solveCubic(values, 1, y, roots, 0, 1) > 0) {\n\t\t\t\t\tfor (var j = roots.length - 1; j >= 0; j--)\n\t\t\t\t\t\txIntercepts.push(Curve.getPoint(values, roots[j]).x);\n\t\t\t\t}\n\t\t\t\tif (xIntercepts.length > 1)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpoint.x = (xIntercepts[0] + xIntercepts[1]) / 2;\n\t\t}\n\t\treturn point;\n\t},\n\n\treorient: function() {\n\t\tthis.setClockwise(true);\n\t\treturn this;\n\t}\n});\n\nCompoundPath.inject({\n\t_getMonoCurves: function() {\n\t\tvar children = this._children,\n\t\t\tmonoCurves = [];\n\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\tmonoCurves.push.apply(monoCurves, children[i]._getMonoCurves());\n\t\treturn monoCurves;\n\t},\n\n\treorient: function() {\n\t\tvar children = this.removeChildren().sort(function(a, b) {\n\t\t\treturn b.getBounds().getArea() - a.getBounds().getArea();\n\t\t});\n\t\tif (children.length > 0) {\n\t\t\tthis.addChildren(children);\n\t\t\tvar clockwise = children[0].isClockwise();\n\t\t\tfor (var i = 1, l = children.length; i < l; i++) {\n\t\t\t\tvar point = children[i].getInteriorPoint(),\n\t\t\t\t\tcounters = 0;\n\t\t\t\tfor (var j = i - 1; j >= 0; j--) {\n\t\t\t\t\tif (children[j].contains(point))\n\t\t\t\t\t\tcounters++;\n\t\t\t\t}\n\t\t\t\tchildren[i].setClockwise(counters % 2 === 0 && clockwise);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n});\n\nvar PathIterator = Base.extend({\n\t_class: 'PathIterator',\n\n\tinitialize: function(path, maxRecursion, tolerance, matrix) {\n\t\tvar curves = [],\n\t\t\tparts = [],\n\t\t\tlength = 0,\n\t\t\tminDifference = 1 / (maxRecursion || 32),\n\t\t\tsegments = path._segments,\n\t\t\tsegment1 = segments[0],\n\t\t\tsegment2;\n\n\t\tfunction addCurve(segment1, segment2) {\n\t\t\tvar curve = Curve.getValues(segment1, segment2, matrix);\n\t\t\tcurves.push(curve);\n\t\t\tcomputeParts(curve, segment1._index, 0, 1);\n\t\t}\n\n\t\tfunction computeParts(curve, index, minT, maxT) {\n\t\t\tif ((maxT - minT) > minDifference\n\t\t\t\t\t&& !Curve.isFlatEnough(curve, tolerance || 0.25)) {\n\t\t\t\tvar split = Curve.subdivide(curve),\n\t\t\t\t\thalfT = (minT + maxT) / 2;\n\t\t\t\tcomputeParts(split[0], index, minT, halfT);\n\t\t\t\tcomputeParts(split[1], index, halfT, maxT);\n\t\t\t} else {\n\t\t\t\tvar x = curve[6] - curve[0],\n\t\t\t\t\ty = curve[7] - curve[1],\n\t\t\t\t\tdist = Math.sqrt(x * x + y * y);\n\t\t\t\tif (dist > 0.000001) {\n\t\t\t\t\tlength += dist;\n\t\t\t\t\tparts.push({\n\t\t\t\t\t\toffset: length,\n\t\t\t\t\t\tvalue: maxT,\n\t\t\t\t\t\tindex: index\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 1, l = segments.length; i < l; i++) {\n\t\t\tsegment2 = segments[i];\n\t\t\taddCurve(segment1, segment2);\n\t\t\tsegment1 = segment2;\n\t\t}\n\t\tif (path._closed)\n\t\t\taddCurve(segment2, segments[0]);\n\n\t\tthis.curves = curves;\n\t\tthis.parts = parts;\n\t\tthis.length = length;\n\t\tthis.index = 0;\n\t},\n\n\tgetParameterAt: function(offset) {\n\t\tvar i, j = this.index;\n\t\tfor (;;) {\n\t\t\ti = j;\n\t\t\tif (j == 0 || this.parts[--j].offset < offset)\n\t\t\t\tbreak;\n\t\t}\n\t\tfor (var l = this.parts.length; i < l; i++) {\n\t\t\tvar part = this.parts[i];\n\t\t\tif (part.offset >= offset) {\n\t\t\t\tthis.index = i;\n\t\t\t\tvar prev = this.parts[i - 1];\n\t\t\t\tvar prevVal = prev && prev.index == part.index ? prev.value : 0,\n\t\t\t\t\tprevLen = prev ? prev.offset : 0;\n\t\t\t\treturn {\n\t\t\t\t\tvalue: prevVal + (part.value - prevVal)\n\t\t\t\t\t\t* (offset - prevLen) / (part.offset - prevLen),\n\t\t\t\t\tindex: part.index\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tvar part = this.parts[this.parts.length - 1];\n\t\treturn {\n\t\t\tvalue: 1,\n\t\t\tindex: part.index\n\t\t};\n\t},\n\n\tdrawPart: function(ctx, from, to) {\n\t\tfrom = this.getParameterAt(from);\n\t\tto = this.getParameterAt(to);\n\t\tfor (var i = from.index; i <= to.index; i++) {\n\t\t\tvar curve = Curve.getPart(this.curves[i],\n\t\t\t\t\ti == from.index ? from.value : 0,\n\t\t\t\t\ti == to.index ? to.value : 1);\n\t\t\tif (i == from.index)\n\t\t\t\tctx.moveTo(curve[0], curve[1]);\n\t\t\tctx.bezierCurveTo.apply(ctx, curve.slice(2));\n\t\t}\n\t}\n}, Base.each(Curve.evaluateMethods,\n\tfunction(name) {\n\t\tthis[name + 'At'] = function(offset, weighted) {\n\t\t\tvar param = this.getParameterAt(offset);\n\t\t\treturn Curve[name](this.curves[param.index], param.value, weighted);\n\t\t};\n\t}, {})\n);\n\nvar PathFitter = Base.extend({\n\tinitialize: function(path, error) {\n\t\tvar points = this.points = [],\n\t\t\tsegments = path._segments,\n\t\t\tprev;\n\t\tfor (var i = 0, l = segments.length; i < l; i++) {\n\t\t\tvar point = segments[i].point.clone();\n\t\t\tif (!prev || !prev.equals(point)) {\n\t\t\t\tpoints.push(point);\n\t\t\t\tprev = point;\n\t\t\t}\n\t\t}\n\n\t\tif (path._closed) {\n\t\t\tthis.closed = true;\n\t\t\tpoints.unshift(points[points.length - 1]);\n\t\t\tpoints.push(points[1]);\n\t\t}\n\n\t\tthis.error = error;\n\t},\n\n\tfit: function() {\n\t\tvar points = this.points,\n\t\t\tlength = points.length,\n\t\t\tsegments = this.segments = length > 0\n\t\t\t\t\t? [new Segment(points[0])] : [];\n\t\tif (length > 1)\n\t\t\tthis.fitCubic(0, length - 1,\n\t\t\t\tpoints[1].subtract(points[0]).normalize(),\n\t\t\t\tpoints[length - 2].subtract(points[length - 1]).normalize());\n\n\t\tif (this.closed) {\n\t\t\tsegments.shift();\n\t\t\tsegments.pop();\n\t\t}\n\n\t\treturn segments;\n\t},\n\n\tfitCubic: function(first, last, tan1, tan2) {\n\t\tif (last - first == 1) {\n\t\t\tvar pt1 = this.points[first],\n\t\t\t\tpt2 = this.points[last],\n\t\t\t\tdist = pt1.getDistance(pt2) / 3;\n\t\t\tthis.addCurve([pt1, pt1.add(tan1.normalize(dist)),\n\t\t\t\t\tpt2.add(tan2.normalize(dist)), pt2]);\n\t\t\treturn;\n\t\t}\n\t\tvar uPrime = this.chordLengthParameterize(first, last),\n\t\t\tmaxError = Math.max(this.error, this.error * this.error),\n\t\t\tsplit,\n\t\t\tparametersInOrder = true;\n\t\tfor (var i = 0; i <= 4; i++) {\n\t\t\tvar curve = this.generateBezier(first, last, uPrime, tan1, tan2);\n\t\t\tvar max = this.findMaxError(first, last, curve, uPrime);\n\t\t\tif (max.error < this.error && parametersInOrder) {\n\t\t\t\tthis.addCurve(curve);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsplit = max.index;\n\t\t\tif (max.error >= maxError)\n\t\t\t\tbreak;\n\t\t\tparametersInOrder = this.reparameterize(first, last, uPrime, curve);\n\t\t\tmaxError = max.error;\n\t\t}\n\t\tvar V1 = this.points[split - 1].subtract(this.points[split]),\n\t\t\tV2 = this.points[split].subtract(this.points[split + 1]),\n\t\t\ttanCenter = V1.add(V2).divide(2).normalize();\n\t\tthis.fitCubic(first, split, tan1, tanCenter);\n\t\tthis.fitCubic(split, last, tanCenter.negate(), tan2);\n\t},\n\n\taddCurve: function(curve) {\n\t\tvar prev = this.segments[this.segments.length - 1];\n\t\tprev.setHandleOut(curve[1].subtract(curve[0]));\n\t\tthis.segments.push(\n\t\t\t\tnew Segment(curve[3], curve[2].subtract(curve[3])));\n\t},\n\n\tgenerateBezier: function(first, last, uPrime, tan1, tan2) {\n\t\tvar epsilon = 1e-12,\n\t\t\tpt1 = this.points[first],\n\t\t\tpt2 = this.points[last],\n\t\t\tC = [[0, 0], [0, 0]],\n\t\t\tX = [0, 0];\n\n\t\tfor (var i = 0, l = last - first + 1; i < l; i++) {\n\t\t\tvar u = uPrime[i],\n\t\t\t\tt = 1 - u,\n\t\t\t\tb = 3 * u * t,\n\t\t\t\tb0 = t * t * t,\n\t\t\t\tb1 = b * t,\n\t\t\t\tb2 = b * u,\n\t\t\t\tb3 = u * u * u,\n\t\t\t\ta1 = tan1.normalize(b1),\n\t\t\t\ta2 = tan2.normalize(b2),\n\t\t\t\ttmp = this.points[first + i]\n\t\t\t\t\t.subtract(pt1.multiply(b0 + b1))\n\t\t\t\t\t.subtract(pt2.multiply(b2 + b3));\n\t\t\tC[0][0] += a1.dot(a1);\n\t\t\tC[0][1] += a1.dot(a2);\n\t\t\tC[1][0] = C[0][1];\n\t\t\tC[1][1] += a2.dot(a2);\n\t\t\tX[0] += a1.dot(tmp);\n\t\t\tX[1] += a2.dot(tmp);\n\t\t}\n\n\t\tvar detC0C1 = C[0][0] * C[1][1] - C[1][0] * C[0][1],\n\t\t\talpha1, alpha2;\n\t\tif (Math.abs(detC0C1) > epsilon) {\n\t\t\tvar detC0X\t= C[0][0] * X[1]\t- C[1][0] * X[0],\n\t\t\t\tdetXC1\t= X[0]\t  * C[1][1] - X[1]\t  * C[0][1];\n\t\t\talpha1 = detXC1 / detC0C1;\n\t\t\talpha2 = detC0X / detC0C1;\n\t\t} else {\n\t\t\tvar c0 = C[0][0] + C[0][1],\n\t\t\t\tc1 = C[1][0] + C[1][1];\n\t\t\tif (Math.abs(c0) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[0] / c0;\n\t\t\t} else if (Math.abs(c1) > epsilon) {\n\t\t\t\talpha1 = alpha2 = X[1] / c1;\n\t\t\t} else {\n\t\t\t\talpha1 = alpha2 = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar segLength = pt2.getDistance(pt1),\n\t\t\teps = epsilon * segLength,\n\t\t\thandle1,\n\t\t\thandle2;\n\t\tif (alpha1 < eps || alpha2 < eps) {\n\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t} else {\n\t\t\tvar line = pt2.subtract(pt1);\n\t\t\thandle1 = tan1.normalize(alpha1);\n\t\t\thandle2 = tan2.normalize(alpha2);\n\t\t\tif (handle1.dot(line) - handle2.dot(line) > segLength * segLength) {\n\t\t\t\talpha1 = alpha2 = segLength / 3;\n\t\t\t\thandle1 = handle2 = null;\n\t\t\t}\n\t\t}\n\n\t\treturn [pt1, pt1.add(handle1 || tan1.normalize(alpha1)),\n\t\t\t\tpt2.add(handle2 || tan2.normalize(alpha2)), pt2];\n\t},\n\n\treparameterize: function(first, last, u, curve) {\n\t\tfor (var i = first; i <= last; i++) {\n\t\t\tu[i - first] = this.findRoot(curve, this.points[i], u[i - first]);\n\t\t}\n\t\tfor (var i = 1, l = u.length; i < l; i++) {\n\t\t\tif (u[i] <= u[i - 1])\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\tfindRoot: function(curve, point, u) {\n\t\tvar curve1 = [],\n\t\t\tcurve2 = [];\n\t\tfor (var i = 0; i <= 2; i++) {\n\t\t\tcurve1[i] = curve[i + 1].subtract(curve[i]).multiply(3);\n\t\t}\n\t\tfor (var i = 0; i <= 1; i++) {\n\t\t\tcurve2[i] = curve1[i + 1].subtract(curve1[i]).multiply(2);\n\t\t}\n\t\tvar pt = this.evaluate(3, curve, u),\n\t\t\tpt1 = this.evaluate(2, curve1, u),\n\t\t\tpt2 = this.evaluate(1, curve2, u),\n\t\t\tdiff = pt.subtract(point),\n\t\t\tdf = pt1.dot(pt1) + diff.dot(pt2);\n\t\tif (Math.abs(df) < 0.000001)\n\t\t\treturn u;\n\t\treturn u - diff.dot(pt1) / df;\n\t},\n\n\tevaluate: function(degree, curve, t) {\n\t\tvar tmp = curve.slice();\n\t\tfor (var i = 1; i <= degree; i++) {\n\t\t\tfor (var j = 0; j <= degree - i; j++) {\n\t\t\t\ttmp[j] = tmp[j].multiply(1 - t).add(tmp[j + 1].multiply(t));\n\t\t\t}\n\t\t}\n\t\treturn tmp[0];\n\t},\n\n\tchordLengthParameterize: function(first, last) {\n\t\tvar u = [0];\n\t\tfor (var i = first + 1; i <= last; i++) {\n\t\t\tu[i - first] = u[i - first - 1]\n\t\t\t\t\t+ this.points[i].getDistance(this.points[i - 1]);\n\t\t}\n\t\tfor (var i = 1, m = last - first; i <= m; i++) {\n\t\t\tu[i] /= u[m];\n\t\t}\n\t\treturn u;\n\t},\n\n\tfindMaxError: function(first, last, curve, u) {\n\t\tvar index = Math.floor((last - first + 1) / 2),\n\t\t\tmaxDist = 0;\n\t\tfor (var i = first + 1; i < last; i++) {\n\t\t\tvar P = this.evaluate(3, curve, u[i - first]);\n\t\t\tvar v = P.subtract(this.points[i]);\n\t\t\tvar dist = v.x * v.x + v.y * v.y;\n\t\t\tif (dist >= maxDist) {\n\t\t\t\tmaxDist = dist;\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\terror: maxDist,\n\t\t\tindex: index\n\t\t};\n\t}\n});\n\nvar TextItem = Item.extend({\n\t_class: 'TextItem',\n\t_boundsSelected: true,\n\t_applyMatrix: false,\n\t_canApplyMatrix: false,\n\t_serializeFields: {\n\t\tcontent: null\n\t},\n\t_boundsGetter: 'getBounds',\n\n\tinitialize: function TextItem(arg) {\n\t\tthis._content = '';\n\t\tthis._lines = [];\n\t\tvar hasProps = arg && Base.isPlainObject(arg)\n\t\t\t\t&& arg.x === undefined && arg.y === undefined;\n\t\tthis._initialize(hasProps && arg, !hasProps && Point.read(arguments));\n\t},\n\n\t_equals: function(item) {\n\t\treturn this._content === item._content;\n\t},\n\n\t_clone: function _clone(copy, insert, includeMatrix) {\n\t\tcopy.setContent(this._content);\n\t\treturn _clone.base.call(this, copy, insert, includeMatrix);\n\t},\n\n\tgetContent: function() {\n\t\treturn this._content;\n\t},\n\n\tsetContent: function(content) {\n\t\tthis._content = '' + content;\n\t\tthis._lines = this._content.split(/\\r\\n|\\n|\\r/mg);\n\t\tthis._changed(265);\n\t},\n\n\tisEmpty: function() {\n\t\treturn !this._content;\n\t},\n\n\tgetCharacterStyle: '#getStyle',\n\tsetCharacterStyle: '#setStyle',\n\n\tgetParagraphStyle: '#getStyle',\n\tsetParagraphStyle: '#setStyle'\n});\n\nvar PointText = TextItem.extend({\n\t_class: 'PointText',\n\n\tinitialize: function PointText() {\n\t\tTextItem.apply(this, arguments);\n\t},\n\n\tclone: function(insert) {\n\t\treturn this._clone(new PointText(Item.NO_INSERT), insert);\n\t},\n\n\tgetPoint: function() {\n\t\tvar point = this._matrix.getTranslation();\n\t\treturn new LinkedPoint(point.x, point.y, this, 'setPoint');\n\t},\n\n\tsetPoint: function() {\n\t\tvar point = Point.read(arguments);\n\t\tthis.translate(point.subtract(this._matrix.getTranslation()));\n\t},\n\n\t_draw: function(ctx) {\n\t\tif (!this._content)\n\t\t\treturn;\n\t\tthis._setStyles(ctx);\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tleading = style.getLeading(),\n\t\t\tshadowColor = ctx.shadowColor;\n\t\tctx.font = style.getFontStyle();\n\t\tctx.textAlign = style.getJustification();\n\t\tfor (var i = 0, l = lines.length; i < l; i++) {\n\t\t\tctx.shadowColor = shadowColor;\n\t\t\tvar line = lines[i];\n\t\t\tif (style.hasFill()) {\n\t\t\t\tctx.fillText(line, 0, 0);\n\t\t\t\tctx.shadowColor = 'rgba(0,0,0,0)';\n\t\t\t}\n\t\t\tif (style.hasStroke())\n\t\t\t\tctx.strokeText(line, 0, 0);\n\t\t\tctx.translate(0, leading);\n\t\t}\n\t},\n\n\t_getBounds: function(getter, matrix) {\n\t\tvar style = this._style,\n\t\t\tlines = this._lines,\n\t\t\tnumLines = lines.length,\n\t\t\tjustification = style.getJustification(),\n\t\t\tleading = style.getLeading(),\n\t\t\twidth = this.getView().getTextWidth(style.getFontStyle(), lines),\n\t\t\tx = 0;\n\t\tif (justification !== 'left')\n\t\t\tx -= width / (justification === 'center' ? 2: 1);\n\t\tvar bounds = new Rectangle(x,\n\t\t\t\t\tnumLines ? - 0.75 * leading : 0,\n\t\t\t\t\twidth, numLines * leading);\n\t\treturn matrix ? matrix._transformBounds(bounds, bounds) : bounds;\n\t}\n});\n\nvar Color = Base.extend(new function() {\n\tvar types = {\n\t\tgray: ['gray'],\n\t\trgb: ['red', 'green', 'blue'],\n\t\thsb: ['hue', 'saturation', 'brightness'],\n\t\thsl: ['hue', 'saturation', 'lightness'],\n\t\tgradient: ['gradient', 'origin', 'destination', 'highlight']\n\t};\n\n\tvar componentParsers = {},\n\t\tcolorCache = {},\n\t\tcolorCtx;\n\n\tfunction fromCSS(string) {\n\t\tvar match = string.match(/^#(\\w{1,2})(\\w{1,2})(\\w{1,2})$/),\n\t\t\tcomponents;\n\t\tif (match) {\n\t\t\tcomponents = [0, 0, 0];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar value = match[i + 1];\n\t\t\t\tcomponents[i] = parseInt(value.length == 1\n\t\t\t\t\t\t? value + value : value, 16) / 255;\n\t\t\t}\n\t\t} else if (match = string.match(/^rgba?\\((.*)\\)$/)) {\n\t\t\tcomponents = match[1].split(',');\n\t\t\tfor (var i = 0, l = components.length; i < l; i++) {\n\t\t\t\tvar value = +components[i];\n\t\t\t\tcomponents[i] = i < 3 ? value / 255 : value;\n\t\t\t}\n\t\t} else {\n\t\t\tvar cached = colorCache[string];\n\t\t\tif (!cached) {\n\t\t\t\tif (!colorCtx) {\n\t\t\t\t\tcolorCtx = CanvasProvider.getContext(1, 1);\n\t\t\t\t\tcolorCtx.globalCompositeOperation = 'copy';\n\t\t\t\t}\n\t\t\t\tcolorCtx.fillStyle = 'rgba(0,0,0,0)';\n\t\t\t\tcolorCtx.fillStyle = string;\n\t\t\t\tcolorCtx.fillRect(0, 0, 1, 1);\n\t\t\t\tvar data = colorCtx.getImageData(0, 0, 1, 1).data;\n\t\t\t\tcached = colorCache[string] = [\n\t\t\t\t\tdata[0] / 255,\n\t\t\t\t\tdata[1] / 255,\n\t\t\t\t\tdata[2] / 255\n\t\t\t\t];\n\t\t\t}\n\t\t\tcomponents = cached.slice();\n\t\t}\n\t\treturn components;\n\t}\n\n\tvar hsbIndices = [\n\t\t[0, 3, 1],\n\t\t[2, 0, 1],\n\t\t[1, 0, 3],\n\t\t[1, 2, 0],\n\t\t[3, 1, 0],\n\t\t[0, 1, 2]\n\t];\n\n\tvar converters = {\n\t\t'rgb-hsb': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\th = delta === 0 ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60;\n\t\t\treturn [h, max === 0 ? 0 : delta / max, max];\n\t\t},\n\n\t\t'hsb-rgb': function(h, s, b) {\n\t\t\th = (((h / 60) % 6) + 6) % 6;\n\t\t\tvar i = Math.floor(h),\n\t\t\t\tf = h - i,\n\t\t\t\ti = hsbIndices[i],\n\t\t\t\tv = [\n\t\t\t\t\tb,\n\t\t\t\t\tb * (1 - s),\n\t\t\t\t\tb * (1 - s * f),\n\t\t\t\t\tb * (1 - s * (1 - f))\n\t\t\t\t];\n\t\t\treturn [v[i[0]], v[i[1]], v[i[2]]];\n\t\t},\n\n\t\t'rgb-hsl': function(r, g, b) {\n\t\t\tvar max = Math.max(r, g, b),\n\t\t\t\tmin = Math.min(r, g, b),\n\t\t\t\tdelta = max - min,\n\t\t\t\tachromatic = delta === 0,\n\t\t\t\th = achromatic ? 0\n\t\t\t\t\t:\t( max == r ? (g - b) / delta + (g < b ? 6 : 0)\n\t\t\t\t\t\t: max == g ? (b - r) / delta + 2\n\t\t\t\t\t\t:\t\t\t (r - g) / delta + 4) * 60,\n\t\t\t\tl = (max + min) / 2,\n\t\t\t\ts = achromatic ? 0 : l < 0.5\n\t\t\t\t\t\t? delta / (max + min)\n\t\t\t\t\t\t: delta / (2 - max - min);\n\t\t\treturn [h, s, l];\n\t\t},\n\n\t\t'hsl-rgb': function(h, s, l) {\n\t\t\th = (((h / 360) % 1) + 1) % 1;\n\t\t\tif (s === 0)\n\t\t\t\treturn [l, l, l];\n\t\t\tvar t3s = [ h + 1 / 3, h, h - 1 / 3 ],\n\t\t\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s,\n\t\t\t\tt1 = 2 * l - t2,\n\t\t\t\tc = [];\n\t\t\tfor (var i = 0; i < 3; i++) {\n\t\t\t\tvar t3 = t3s[i];\n\t\t\t\tif (t3 < 0) t3 += 1;\n\t\t\t\tif (t3 > 1) t3 -= 1;\n\t\t\t\tc[i] = 6 * t3 < 1\n\t\t\t\t\t? t1 + (t2 - t1) * 6 * t3\n\t\t\t\t\t: 2 * t3 < 1\n\t\t\t\t\t\t? t2\n\t\t\t\t\t\t: 3 * t3 < 2\n\t\t\t\t\t\t\t? t1 + (t2 - t1) * ((2 / 3) - t3) * 6\n\t\t\t\t\t\t\t: t1;\n\t\t\t}\n\t\t\treturn c;\n\t\t},\n\n\t\t'rgb-gray': function(r, g, b) {\n\t\t\treturn [r * 0.2989 + g * 0.587 + b * 0.114];\n\t\t},\n\n\t\t'gray-rgb': function(g) {\n\t\t\treturn [g, g, g];\n\t\t},\n\n\t\t'gray-hsb': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gray-hsl': function(g) {\n\t\t\treturn [0, 0, g];\n\t\t},\n\n\t\t'gradient-rgb': function() {\n\t\t\treturn [];\n\t\t},\n\n\t\t'rgb-gradient': function() {\n\t\t\treturn [];\n\t\t}\n\n\t};\n\n\treturn Base.each(types, function(properties, type) {\n\t\tcomponentParsers[type] = [];\n\t\tBase.each(properties, function(name, index) {\n\t\t\tvar part = Base.capitalize(name),\n\t\t\t\thasOverlap = /^(hue|saturation)$/.test(name),\n\t\t\t\tparser = componentParsers[type][index] = name === 'gradient'\n\t\t\t\t\t? function(value) {\n\t\t\t\t\t\tvar current = this._components[0];\n\t\t\t\t\t\tvalue = Gradient.read(Array.isArray(value) ? value\n\t\t\t\t\t\t\t\t: arguments, 0, { readNull: true });\n\t\t\t\t\t\tif (current !== value) {\n\t\t\t\t\t\t\tif (current)\n\t\t\t\t\t\t\t\tcurrent._removeOwner(this);\n\t\t\t\t\t\t\tif (value)\n\t\t\t\t\t\t\t\tvalue._addOwner(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t\t: type === 'gradient'\n\t\t\t\t\t\t? function() {\n\t\t\t\t\t\t\treturn Point.read(arguments, 0, {\n\t\t\t\t\t\t\t\t\treadNull: name === 'highlight',\n\t\t\t\t\t\t\t\t\tclone: true\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t: function(value) {\n\t\t\t\t\t\t\treturn value == null || isNaN(value) ? 0 : value;\n\t\t\t\t\t\t};\n\n\t\t\tthis['get' + part] = function() {\n\t\t\t\treturn this._type === type\n\t\t\t\t\t|| hasOverlap && /^hs[bl]$/.test(this._type)\n\t\t\t\t\t\t? this._components[index]\n\t\t\t\t\t\t: this._convert(type)[index];\n\t\t\t};\n\n\t\t\tthis['set' + part] = function(value) {\n\t\t\t\tif (this._type !== type\n\t\t\t\t\t\t&& !(hasOverlap && /^hs[bl]$/.test(this._type))) {\n\t\t\t\t\tthis._components = this._convert(type);\n\t\t\t\t\tthis._properties = types[type];\n\t\t\t\t\tthis._type = type;\n\t\t\t\t}\n\t\t\t\tthis._components[index] = parser.call(this, value);\n\t\t\t\tthis._changed();\n\t\t\t};\n\t\t}, this);\n\t}, {\n\t\t_class: 'Color',\n\t\t_readIndex: true,\n\n\t\tinitialize: function Color(arg) {\n\t\t\tvar slice = Array.prototype.slice,\n\t\t\t\targs = arguments,\n\t\t\t\tread = 0,\n\t\t\t\ttype,\n\t\t\t\tcomponents,\n\t\t\t\talpha,\n\t\t\t\tvalues;\n\t\t\tif (Array.isArray(arg)) {\n\t\t\t\targs = arg;\n\t\t\t\targ = args[0];\n\t\t\t}\n\t\t\tvar argType = arg != null && typeof arg;\n\t\t\tif (argType === 'string' && arg in types) {\n\t\t\t\ttype = arg;\n\t\t\t\targ = args[1];\n\t\t\t\tif (Array.isArray(arg)) {\n\t\t\t\t\tcomponents = arg;\n\t\t\t\t\talpha = args[2];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread = 1;\n\t\t\t\t\targs = slice.call(args, 1);\n\t\t\t\t\targType = typeof arg;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!components) {\n\t\t\t\tvalues = argType === 'number'\n\t\t\t\t\t\t? args\n\t\t\t\t\t\t: argType === 'object' && arg.length != null\n\t\t\t\t\t\t\t? arg\n\t\t\t\t\t\t\t: null;\n\t\t\t\tif (values) {\n\t\t\t\t\tif (!type)\n\t\t\t\t\t\ttype = values.length >= 3\n\t\t\t\t\t\t\t\t? 'rgb'\n\t\t\t\t\t\t\t\t: 'gray';\n\t\t\t\t\tvar length = types[type].length;\n\t\t\t\t\talpha = values[length];\n\t\t\t\t\tif (this.__read)\n\t\t\t\t\t\tread += values === arguments\n\t\t\t\t\t\t\t? length + (alpha != null ? 1 : 0)\n\t\t\t\t\t\t\t: 1;\n\t\t\t\t\tif (values.length > length)\n\t\t\t\t\t\tvalues = slice.call(values, 0, length);\n\t\t\t\t} else if (argType === 'string') {\n\t\t\t\t\ttype = 'rgb';\n\t\t\t\t\tcomponents = fromCSS(arg);\n\t\t\t\t\tif (components.length === 4) {\n\t\t\t\t\t\talpha = components[3];\n\t\t\t\t\t\tcomponents.length--;\n\t\t\t\t\t}\n\t\t\t\t} else if (argType === 'object') {\n\t\t\t\t\tif (arg.constructor === Color) {\n\t\t\t\t\t\ttype = arg._type;\n\t\t\t\t\t\tcomponents = arg._components.slice();\n\t\t\t\t\t\talpha = arg._alpha;\n\t\t\t\t\t\tif (type === 'gradient') {\n\t\t\t\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\t\t\t\tvar point = components[i];\n\t\t\t\t\t\t\t\tif (point)\n\t\t\t\t\t\t\t\t\tcomponents[i] = point.clone();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (arg.constructor === Gradient) {\n\t\t\t\t\t\ttype = 'gradient';\n\t\t\t\t\t\tvalues = args;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'hue' in arg\n\t\t\t\t\t\t\t? 'lightness' in arg\n\t\t\t\t\t\t\t\t? 'hsl'\n\t\t\t\t\t\t\t\t: 'hsb'\n\t\t\t\t\t\t\t: 'gradient' in arg || 'stops' in arg\n\t\t\t\t\t\t\t\t\t|| 'radial' in arg\n\t\t\t\t\t\t\t\t? 'gradient'\n\t\t\t\t\t\t\t\t: 'gray' in arg\n\t\t\t\t\t\t\t\t\t? 'gray'\n\t\t\t\t\t\t\t\t\t: 'rgb';\n\t\t\t\t\t\tvar properties = types[type];\n\t\t\t\t\t\t\tparsers = componentParsers[type];\n\t\t\t\t\t\tthis._components = components = [];\n\t\t\t\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\t\t\t\tvar value = arg[properties[i]];\n\t\t\t\t\t\t\tif (value == null && i === 0 && type === 'gradient'\n\t\t\t\t\t\t\t\t\t&& 'stops' in arg) {\n\t\t\t\t\t\t\t\tvalue = {\n\t\t\t\t\t\t\t\t\tstops: arg.stops,\n\t\t\t\t\t\t\t\t\tradial: arg.radial\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalue = parsers[i].call(this, value);\n\t\t\t\t\t\t\tif (value != null)\n\t\t\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\talpha = arg.alpha;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.__read && type)\n\t\t\t\t\tread = 1;\n\t\t\t}\n\t\t\tthis._type = type || 'rgb';\n\t\t\tthis._id = UID.get(Color);\n\t\t\tif (!components) {\n\t\t\t\tthis._components = components = [];\n\t\t\t\tvar parsers = componentParsers[this._type];\n\t\t\t\tfor (var i = 0, l = parsers.length; i < l; i++) {\n\t\t\t\t\tvar value = parsers[i].call(this, values && values[i]);\n\t\t\t\t\tif (value != null)\n\t\t\t\t\t\tcomponents[i] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._components = components;\n\t\t\tthis._properties = types[this._type];\n\t\t\tthis._alpha = alpha;\n\t\t\tif (this.__read)\n\t\t\t\tthis.__read = read;\n\t\t},\n\n\t\t_serialize: function(options, dictionary) {\n\t\t\tvar components = this.getComponents();\n\t\t\treturn Base.serialize(\n\t\t\t\t\t/^(gray|rgb)$/.test(this._type)\n\t\t\t\t\t\t? components\n\t\t\t\t\t\t: [this._type].concat(components),\n\t\t\t\t\toptions, true, dictionary);\n\t\t},\n\n\t\t_changed: function() {\n\t\t\tthis._canvasStyle = null;\n\t\t\tif (this._owner)\n\t\t\t\tthis._owner._changed(65);\n\t\t},\n\n\t\t_convert: function(type) {\n\t\t\tvar converter;\n\t\t\treturn this._type === type\n\t\t\t\t\t? this._components.slice()\n\t\t\t\t\t: (converter = converters[this._type + '-' + type])\n\t\t\t\t\t\t? converter.apply(this, this._components)\n\t\t\t\t\t\t: converters['rgb-' + type].apply(this,\n\t\t\t\t\t\t\tconverters[this._type + '-rgb'].apply(this,\n\t\t\t\t\t\t\t\tthis._components));\n\t\t},\n\n\t\tconvert: function(type) {\n\t\t\treturn new Color(type, this._convert(type), this._alpha);\n\t\t},\n\n\t\tgetType: function() {\n\t\t\treturn this._type;\n\t\t},\n\n\t\tsetType: function(type) {\n\t\t\tthis._components = this._convert(type);\n\t\t\tthis._properties = types[type];\n\t\t\tthis._type = type;\n\t\t},\n\n\t\tgetComponents: function() {\n\t\t\tvar components = this._components.slice();\n\t\t\tif (this._alpha != null)\n\t\t\t\tcomponents.push(this._alpha);\n\t\t\treturn components;\n\t\t},\n\n\t\tgetAlpha: function() {\n\t\t\treturn this._alpha != null ? this._alpha : 1;\n\t\t},\n\n\t\tsetAlpha: function(alpha) {\n\t\t\tthis._alpha = alpha == null ? null : Math.min(Math.max(alpha, 0), 1);\n\t\t\tthis._changed();\n\t\t},\n\n\t\thasAlpha: function() {\n\t\t\treturn this._alpha != null;\n\t\t},\n\n\t\tequals: function(color) {\n\t\t\tvar col = Base.isPlainValue(color, true)\n\t\t\t\t\t? Color.read(arguments)\n\t\t\t\t\t: color;\n\t\t\treturn col === this || col && this._class === col._class\n\t\t\t\t\t&& this._type === col._type\n\t\t\t\t\t&& this._alpha === col._alpha\n\t\t\t\t\t&& Base.equals(this._components, col._components)\n\t\t\t\t\t|| false;\n\t\t},\n\n\t\ttoString: function() {\n\t\t\tvar properties = this._properties,\n\t\t\t\tparts = [],\n\t\t\t\tisGradient = this._type === 'gradient',\n\t\t\t\tf = Formatter.instance;\n\t\t\tfor (var i = 0, l = properties.length; i < l; i++) {\n\t\t\t\tvar value = this._components[i];\n\t\t\t\tif (value != null)\n\t\t\t\t\tparts.push(properties[i] + ': '\n\t\t\t\t\t\t\t+ (isGradient ? value : f.number(value)));\n\t\t\t}\n\t\t\tif (this._alpha != null)\n\t\t\t\tparts.push('alpha: ' + f.number(this._alpha));\n\t\t\treturn '{ ' + parts.join(', ') + ' }';\n\t\t},\n\n\t\ttoCSS: function(hex) {\n\t\t\tvar components = this._convert('rgb'),\n\t\t\t\talpha = hex || this._alpha == null ? 1 : this._alpha;\n\t\t\tfunction convert(val) {\n\t\t\t\treturn Math.round((val < 0 ? 0 : val > 1 ? 1 : val) * 255);\n\t\t\t}\n\t\t\tcomponents = [\n\t\t\t\tconvert(components[0]),\n\t\t\t\tconvert(components[1]),\n\t\t\t\tconvert(components[2])\n\t\t\t];\n\t\t\tif (alpha < 1)\n\t\t\t\tcomponents.push(alpha < 0 ? 0 : alpha);\n\t\t\treturn hex\n\t\t\t\t\t? '#' + ((1 << 24) + (components[0] << 16)\n\t\t\t\t\t\t+ (components[1] << 8)\n\t\t\t\t\t\t+ components[2]).toString(16).slice(1)\n\t\t\t\t\t: (components.length == 4 ? 'rgba(' : 'rgb(')\n\t\t\t\t\t\t+ components.join(',') + ')';\n\t\t},\n\n\t\ttoCanvasStyle: function(ctx) {\n\t\t\tif (this._canvasStyle)\n\t\t\t\treturn this._canvasStyle;\n\t\t\tif (this._type !== 'gradient')\n\t\t\t\treturn this._canvasStyle = this.toCSS();\n\t\t\tvar components = this._components,\n\t\t\t\tgradient = components[0],\n\t\t\t\tstops = gradient._stops,\n\t\t\t\torigin = components[1],\n\t\t\t\tdestination = components[2],\n\t\t\t\tcanvasGradient;\n\t\t\tif (gradient._radial) {\n\t\t\t\tvar radius = destination.getDistance(origin),\n\t\t\t\t\thighlight = components[3];\n\t\t\t\tif (highlight) {\n\t\t\t\t\tvar vector = highlight.subtract(origin);\n\t\t\t\t\tif (vector.getLength() > radius)\n\t\t\t\t\t\thighlight = origin.add(vector.normalize(radius - 0.1));\n\t\t\t\t}\n\t\t\t\tvar start = highlight || origin;\n\t\t\t\tcanvasGradient = ctx.createRadialGradient(start.x, start.y,\n\t\t\t\t\t\t0, origin.x, origin.y, radius);\n\t\t\t} else {\n\t\t\t\tcanvasGradient = ctx.createLinearGradient(origin.x, origin.y,\n\t\t\t\t\t\tdestination.x, destination.y);\n\t\t\t}\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i];\n\t\t\t\tcanvasGradient.addColorStop(stop._rampPoint,\n\t\t\t\t\t\tstop._color.toCanvasStyle());\n\t\t\t}\n\t\t\treturn this._canvasStyle = canvasGradient;\n\t\t},\n\n\t\ttransform: function(matrix) {\n\t\t\tif (this._type === 'gradient') {\n\t\t\t\tvar components = this._components;\n\t\t\t\tfor (var i = 1, l = components.length; i < l; i++) {\n\t\t\t\t\tvar point = components[i];\n\t\t\t\t\tmatrix._transformPoint(point, point, true);\n\t\t\t\t}\n\t\t\t\tthis._changed();\n\t\t\t}\n\t\t},\n\n\t\tstatics: {\n\t\t\t_types: types,\n\n\t\t\trandom: function() {\n\t\t\t\tvar random = Math.random;\n\t\t\t\treturn new Color(random(), random(), random());\n\t\t\t}\n\t\t}\n\t});\n}, new function() {\n\tvar operators = {\n\t\tadd: function(a, b) {\n\t\t\treturn a + b;\n\t\t},\n\n\t\tsubtract: function(a, b) {\n\t\t\treturn a - b;\n\t\t},\n\n\t\tmultiply: function(a, b) {\n\t\t\treturn a * b;\n\t\t},\n\n\t\tdivide: function(a, b) {\n\t\t\treturn a / b;\n\t\t}\n\t};\n\n\treturn Base.each(operators, function(operator, name) {\n\t\tthis[name] = function(color) {\n\t\t\tcolor = Color.read(arguments);\n\t\t\tvar type = this._type,\n\t\t\t\tcomponents1 = this._components,\n\t\t\t\tcomponents2 = color._convert(type);\n\t\t\tfor (var i = 0, l = components1.length; i < l; i++)\n\t\t\t\tcomponents2[i] = operator(components1[i], components2[i]);\n\t\t\treturn new Color(type, components2,\n\t\t\t\t\tthis._alpha != null\n\t\t\t\t\t\t\t? operator(this._alpha, color.getAlpha())\n\t\t\t\t\t\t\t: null);\n\t\t};\n\t}, {\n\t});\n});\n\nBase.each(Color._types, function(properties, type) {\n\tvar ctor = this[Base.capitalize(type) + 'Color'] = function(arg) {\n\t\t\tvar argType = arg != null && typeof arg,\n\t\t\t\tcomponents = argType === 'object' && arg.length != null\n\t\t\t\t\t? arg\n\t\t\t\t\t: argType === 'string'\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: arguments;\n\t\t\treturn components\n\t\t\t\t\t? new Color(type, components)\n\t\t\t\t\t: new Color(arg);\n\t\t};\n\tif (type.length == 3) {\n\t\tvar acronym = type.toUpperCase();\n\t\tColor[acronym] = this[acronym + 'Color'] = ctor;\n\t}\n}, Base.exports);\n\nvar Gradient = Base.extend({\n\t_class: 'Gradient',\n\n\tinitialize: function Gradient(stops, radial) {\n\t\tthis._id = UID.get();\n\t\tif (stops && this._set(stops))\n\t\t\tstops = radial = null;\n\t\tif (!this._stops)\n\t\t\tthis.setStops(stops || ['white', 'black']);\n\t\tif (this._radial == null)\n\t\t\tthis.setRadial(typeof radial === 'string' && radial === 'radial'\n\t\t\t\t\t|| radial || false);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn dictionary.add(this, function() {\n\t\t\treturn Base.serialize([this._stops, this._radial],\n\t\t\t\t\toptions, true, dictionary);\n\t\t});\n\t},\n\n\t_changed: function() {\n\t\tfor (var i = 0, l = this._owners && this._owners.length; i < l; i++)\n\t\t\tthis._owners[i]._changed();\n\t},\n\n\t_addOwner: function(color) {\n\t\tif (!this._owners)\n\t\t\tthis._owners = [];\n\t\tthis._owners.push(color);\n\t},\n\n\t_removeOwner: function(color) {\n\t\tvar index = this._owners ? this._owners.indexOf(color) : -1;\n\t\tif (index != -1) {\n\t\t\tthis._owners.splice(index, 1);\n\t\t\tif (this._owners.length === 0)\n\t\t\t\tthis._owners = undefined;\n\t\t}\n\t},\n\n\tclone: function() {\n\t\tvar stops = [];\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\tstops[i] = this._stops[i].clone();\n\t\treturn new Gradient(stops, this._radial);\n\t},\n\n\tgetStops: function() {\n\t\treturn this._stops;\n\t},\n\n\tsetStops: function(stops) {\n\t\tif (this.stops) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++)\n\t\t\t\tthis._stops[i]._owner = undefined;\n\t\t}\n\t\tif (stops.length < 2)\n\t\t\tthrow new Error(\n\t\t\t\t\t'Gradient stop list needs to contain at least two stops.');\n\t\tthis._stops = GradientStop.readAll(stops, 0, { clone: true });\n\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\tvar stop = this._stops[i];\n\t\t\tstop._owner = this;\n\t\t\tif (stop._defaultRamp)\n\t\t\t\tstop.setRampPoint(i / (l - 1));\n\t\t}\n\t\tthis._changed();\n\t},\n\n\tgetRadial: function() {\n\t\treturn this._radial;\n\t},\n\n\tsetRadial: function(radial) {\n\t\tthis._radial = radial;\n\t\tthis._changed();\n\t},\n\n\tequals: function(gradient) {\n\t\tif (gradient === this)\n\t\t\treturn true;\n\t\tif (gradient && this._class === gradient._class\n\t\t\t\t&& this._stops.length === gradient._stops.length) {\n\t\t\tfor (var i = 0, l = this._stops.length; i < l; i++) {\n\t\t\t\tif (!this._stops[i].equals(gradient._stops[i]))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n});\n\nvar GradientStop = Base.extend({\n\t_class: 'GradientStop',\n\n\tinitialize: function GradientStop(arg0, arg1) {\n\t\tif (arg0) {\n\t\t\tvar color, rampPoint;\n\t\t\tif (arg1 === undefined && Array.isArray(arg0)) {\n\t\t\t\tcolor = arg0[0];\n\t\t\t\trampPoint = arg0[1];\n\t\t\t} else if (arg0.color) {\n\t\t\t\tcolor = arg0.color;\n\t\t\t\trampPoint = arg0.rampPoint;\n\t\t\t} else {\n\t\t\t\tcolor = arg0;\n\t\t\t\trampPoint = arg1;\n\t\t\t}\n\t\t\tthis.setColor(color);\n\t\t\tthis.setRampPoint(rampPoint);\n\t\t}\n\t},\n\n\tclone: function() {\n\t\treturn new GradientStop(this._color.clone(), this._rampPoint);\n\t},\n\n\t_serialize: function(options, dictionary) {\n\t\treturn Base.serialize([this._color, this._rampPoint], options, true,\n\t\t\t\tdictionary);\n\t},\n\n\t_changed: function() {\n\t\tif (this._owner)\n\t\t\tthis._owner._changed(65);\n\t},\n\n\tgetRampPoint: function() {\n\t\treturn this._rampPoint;\n\t},\n\n\tsetRampPoint: function(rampPoint) {\n\t\tthis._defaultRamp = rampPoint == null;\n\t\tthis._rampPoint = rampPoint || 0;\n\t\tthis._changed();\n\t},\n\n\tgetColor: function() {\n\t\treturn this._color;\n\t},\n\n\tsetColor: function(color) {\n\t\tthis._color = Color.read(arguments);\n\t\tif (this._color === color)\n\t\t\tthis._color = color.clone();\n\t\tthis._color._owner = this;\n\t\tthis._changed();\n\t},\n\n\tequals: function(stop) {\n\t\treturn stop === this || stop && this._class === stop._class\n\t\t\t\t&& this._color.equals(stop._color)\n\t\t\t\t&& this._rampPoint == stop._rampPoint\n\t\t\t\t|| false;\n\t}\n});\n\nvar Style = Base.extend(new function() {\n\tvar defaults = {\n\t\tfillColor: undefined,\n\t\tstrokeColor: undefined,\n\t\tstrokeWidth: 1,\n\t\tstrokeCap: 'butt',\n\t\tstrokeJoin: 'miter',\n\t\tstrokeScaling: true,\n\t\tmiterLimit: 10,\n\t\tdashOffset: 0,\n\t\tdashArray: [],\n\t\twindingRule: 'nonzero',\n\t\tshadowColor: undefined,\n\t\tshadowBlur: 0,\n\t\tshadowOffset: new Point(),\n\t\tselectedColor: undefined,\n\t\tfontFamily: 'sans-serif',\n\t\tfontWeight: 'normal',\n\t\tfontSize: 12,\n\t\tfont: 'sans-serif',\n\t\tleading: null,\n\t\tjustification: 'left'\n\t};\n\n\tvar flags = {\n\t\tstrokeWidth: 97,\n\t\tstrokeCap: 97,\n\t\tstrokeJoin: 97,\n\t\tstrokeScaling: 105,\n\t\tmiterLimit: 97,\n\t\tfontFamily: 9,\n\t\tfontWeight: 9,\n\t\tfontSize: 9,\n\t\tfont: 9,\n\t\tleading: 9,\n\t\tjustification: 9\n\t};\n\n\tvar item = { beans: true },\n\t\tfields = {\n\t\t\t_defaults: defaults,\n\t\t\t_textDefaults: new Base(defaults, {\n\t\t\t\tfillColor: new Color()\n\t\t\t}),\n\t\t\tbeans: true\n\t\t};\n\n\tBase.each(defaults, function(value, key) {\n\t\tvar isColor = /Color$/.test(key),\n\t\t\tisPoint = key === 'shadowOffset',\n\t\t\tpart = Base.capitalize(key),\n\t\t\tflag = flags[key],\n\t\t\tset = 'set' + part,\n\t\t\tget = 'get' + part;\n\n\t\tfields[set] = function(value) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children;\n\t\t\tif (children && children.length > 0\n\t\t\t\t\t&& !(owner instanceof CompoundPath)) {\n\t\t\t\tfor (var i = 0, l = children.length; i < l; i++)\n\t\t\t\t\tchildren[i]._style[set](value);\n\t\t\t} else {\n\t\t\t\tvar old = this._values[key];\n\t\t\t\tif (old !== value) {\n\t\t\t\t\tif (isColor) {\n\t\t\t\t\t\tif (old)\n\t\t\t\t\t\t\told._owner = undefined;\n\t\t\t\t\t\tif (value && value.constructor === Color) {\n\t\t\t\t\t\t\tif (value._owner)\n\t\t\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[key] = value;\n\t\t\t\t\tif (owner)\n\t\t\t\t\t\towner._changed(flag || 65);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tfields[get] = function(_dontMerge) {\n\t\t\tvar owner = this._owner,\n\t\t\t\tchildren = owner && owner._children,\n\t\t\t\tvalue;\n\t\t\tif (!children || children.length === 0 || _dontMerge\n\t\t\t\t\t|| owner instanceof CompoundPath) {\n\t\t\t\tvar value = this._values[key];\n\t\t\t\tif (value === undefined) {\n\t\t\t\t\tvalue = this._defaults[key];\n\t\t\t\t\tif (value && value.clone)\n\t\t\t\t\t\tvalue = value.clone();\n\t\t\t\t} else {\n\t\t\t\t\tvar ctor = isColor ? Color : isPoint ? Point : null;\n\t\t\t\t\tif (ctor && !(value && value.constructor === ctor)) {\n\t\t\t\t\t\tthis._values[key] = value = ctor.read([value], 0,\n\t\t\t\t\t\t\t\t{ readNull: true, clone: true });\n\t\t\t\t\t\tif (value && isColor)\n\t\t\t\t\t\t\tvalue._owner = owner;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\t\tvar childValue = children[i]._style[get]();\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvalue = childValue;\n\t\t\t\t} else if (!Base.equals(value, childValue)) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value;\n\t\t};\n\n\t\titem[get] = function(_dontMerge) {\n\t\t\treturn this._style[get](_dontMerge);\n\t\t};\n\n\t\titem[set] = function(value) {\n\t\t\tthis._style[set](value);\n\t\t};\n\t});\n\n\tItem.inject(item);\n\treturn fields;\n}, {\n\t_class: 'Style',\n\n\tinitialize: function Style(style, _owner, _project) {\n\t\tthis._values = {};\n\t\tthis._owner = _owner;\n\t\tthis._project = _owner && _owner._project || _project || paper.project;\n\t\tif (_owner instanceof TextItem)\n\t\t\tthis._defaults = this._textDefaults;\n\t\tif (style)\n\t\t\tthis.set(style);\n\t},\n\n\tset: function(style) {\n\t\tvar isStyle = style instanceof Style,\n\t\t\tvalues = isStyle ? style._values : style;\n\t\tif (values) {\n\t\t\tfor (var key in values) {\n\t\t\t\tif (key in this._defaults) {\n\t\t\t\t\tvar value = values[key];\n\t\t\t\t\tthis[key] = value && isStyle && value.clone\n\t\t\t\t\t\t\t? value.clone() : value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tequals: function(style) {\n\t\treturn style === this || style && this._class === style._class\n\t\t\t\t&& Base.equals(this._values, style._values)\n\t\t\t\t|| false;\n\t},\n\n\thasFill: function() {\n\t\treturn !!this.getFillColor();\n\t},\n\n\thasStroke: function() {\n\t\treturn !!this.getStrokeColor() && this.getStrokeWidth() > 0;\n\t},\n\n\thasShadow: function() {\n\t\treturn !!this.getShadowColor() && this.getShadowBlur() > 0;\n\t},\n\n\tgetView: function() {\n\t\treturn this._project.getView();\n\t},\n\n\tgetFontStyle: function() {\n\t\tvar fontSize = this.getFontSize();\n\t\treturn this.getFontWeight()\n\t\t\t\t+ ' ' + fontSize + (/[a-z]/i.test(fontSize + '') ? ' ' : 'px ')\n\t\t\t\t+ this.getFontFamily();\n\t},\n\n\tgetFont: '#getFontFamily',\n\tsetFont: '#setFontFamily',\n\n\tgetLeading: function getLeading() {\n\t\tvar leading = getLeading.base.call(this),\n\t\t\tfontSize = this.getFontSize();\n\t\tif (/pt|em|%|px/.test(fontSize))\n\t\t\tfontSize = this.getView().getPixelSize(fontSize);\n\t\treturn leading != null ? leading : fontSize * 1.2;\n\t}\n\n});\n\nvar DomElement = new function() {\n\tfunction handlePrefix(el, name, set, value) {\n\t\tvar prefixes = ['', 'webkit', 'moz', 'Moz', 'ms', 'o'],\n\t\t\tsuffix = name[0].toUpperCase() + name.substring(1);\n\t\tfor (var i = 0; i < 6; i++) {\n\t\t\tvar prefix = prefixes[i],\n\t\t\t\tkey = prefix ? prefix + suffix : name;\n\t\t\tif (key in el) {\n\t\t\t\tif (set) {\n\t\t\t\t\tel[key] = value;\n\t\t\t\t} else {\n\t\t\t\t\treturn el[key];\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {\n\t\tgetStyles: function(el) {\n\t\t\tvar doc = el && el.nodeType !== 9 ? el.ownerDocument : el,\n\t\t\t\tview = doc && doc.defaultView;\n\t\t\treturn view && view.getComputedStyle(el, '');\n\t\t},\n\n\t\tgetBounds: function(el, viewport) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tbody = doc.body,\n\t\t\t\thtml = doc.documentElement,\n\t\t\t\trect;\n\t\t\ttry {\n\t\t\t\trect = el.getBoundingClientRect();\n\t\t\t} catch (e) {\n\t\t\t\trect = { left: 0, top: 0, width: 0, height: 0 };\n\t\t\t}\n\t\t\tvar x = rect.left - (html.clientLeft || body.clientLeft || 0),\n\t\t\t\ty = rect.top - (html.clientTop || body.clientTop || 0);\n\t\t\tif (!viewport) {\n\t\t\t\tvar view = doc.defaultView;\n\t\t\t\tx += view.pageXOffset || html.scrollLeft || body.scrollLeft;\n\t\t\t\ty += view.pageYOffset || html.scrollTop || body.scrollTop;\n\t\t\t}\n\t\t\treturn new Rectangle(x, y, rect.width, rect.height);\n\t\t},\n\n\t\tgetViewportBounds: function(el) {\n\t\t\tvar doc = el.ownerDocument,\n\t\t\t\tview = doc.defaultView,\n\t\t\t\thtml = doc.documentElement;\n\t\t\treturn new Rectangle(0, 0,\n\t\t\t\tview.innerWidth || html.clientWidth,\n\t\t\t\tview.innerHeight || html.clientHeight\n\t\t\t);\n\t\t},\n\n\t\tgetOffset: function(el, viewport) {\n\t\t\treturn DomElement.getBounds(el, viewport).getPoint();\n\t\t},\n\n\t\tgetSize: function(el) {\n\t\t\treturn DomElement.getBounds(el, true).getSize();\n\t\t},\n\n\t\tisInvisible: function(el) {\n\t\t\treturn DomElement.getSize(el).equals(new Size(0, 0));\n\t\t},\n\n\t\tisInView: function(el) {\n\t\t\treturn !DomElement.isInvisible(el)\n\t\t\t\t\t&& DomElement.getViewportBounds(el).intersects(\n\t\t\t\t\t\tDomElement.getBounds(el, true));\n\t\t},\n\n\t\tgetPrefixed: function(el, name) {\n\t\t\treturn handlePrefix(el, name);\n\t\t},\n\n\t\tsetPrefixed: function(el, name, value) {\n\t\t\tif (typeof name === 'object') {\n\t\t\t\tfor (var key in name)\n\t\t\t\t\thandlePrefix(el, key, true, name[key]);\n\t\t\t} else {\n\t\t\t\thandlePrefix(el, name, true, value);\n\t\t\t}\n\t\t}\n\t};\n};\n\nvar DomEvent = {\n\tadd: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.addEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tremove: function(el, events) {\n\t\tfor (var type in events) {\n\t\t\tvar func = events[type],\n\t\t\t\tparts = type.split(/[\\s,]+/g);\n\t\t\tfor (var i = 0, l = parts.length; i < l; i++)\n\t\t\t\tel.removeEventListener(parts[i], func, false);\n\t\t}\n\t},\n\n\tgetPoint: function(event) {\n\t\tvar pos = event.targetTouches\n\t\t\t\t? event.targetTouches.length\n\t\t\t\t\t? event.targetTouches[0]\n\t\t\t\t\t: event.changedTouches[0]\n\t\t\t\t: event;\n\t\treturn new Point(\n\t\t\tpos.pageX || pos.clientX + document.documentElement.scrollLeft,\n\t\t\tpos.pageY || pos.clientY + document.documentElement.scrollTop\n\t\t);\n\t},\n\n\tgetTarget: function(event) {\n\t\treturn event.target || event.srcElement;\n\t},\n\n\tgetRelatedTarget: function(event) {\n\t\treturn event.relatedTarget || event.toElement;\n\t},\n\n\tgetOffset: function(event, target) {\n\t\treturn DomEvent.getPoint(event).subtract(DomElement.getOffset(\n\t\t\t\ttarget || DomEvent.getTarget(event)));\n\t},\n\n\tstop: function(event) {\n\t\tevent.stopPropagation();\n\t\tevent.preventDefault();\n\t}\n};\n\nDomEvent.requestAnimationFrame = new function() {\n\tvar nativeRequest = DomElement.getPrefixed(window, 'requestAnimationFrame'),\n\t\trequested = false,\n\t\tcallbacks = [],\n\t\tfocused = true,\n\t\ttimer;\n\n\tDomEvent.add(window, {\n\t\tfocus: function() {\n\t\t\tfocused = true;\n\t\t},\n\t\tblur: function() {\n\t\t\tfocused = false;\n\t\t}\n\t});\n\n\tfunction handleCallbacks() {\n\t\tfor (var i = callbacks.length - 1; i >= 0; i--) {\n\t\t\tvar entry = callbacks[i],\n\t\t\t\tfunc = entry[0],\n\t\t\t\tel = entry[1];\n\t\t\tif (!el || (PaperScope.getAttribute(el, 'keepalive') == 'true'\n\t\t\t\t\t|| focused) && DomElement.isInView(el)) {\n\t\t\t\tcallbacks.splice(i, 1);\n\t\t\t\tfunc();\n\t\t\t}\n\t\t}\n\t\tif (nativeRequest) {\n\t\t\tif (callbacks.length) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t} else {\n\t\t\t\trequested = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn function(callback, element) {\n\t\tcallbacks.push([callback, element]);\n\t\tif (nativeRequest) {\n\t\t\tif (!requested) {\n\t\t\t\tnativeRequest(handleCallbacks);\n\t\t\t\trequested = true;\n\t\t\t}\n\t\t} else if (!timer) {\n\t\t\ttimer = setInterval(handleCallbacks, 1000 / 60);\n\t\t}\n\t};\n};\n\nvar View = Base.extend(Emitter, {\n\t_class: 'View',\n\n\tinitialize: function View(project, element) {\n\t\tthis._project = project;\n\t\tthis._scope = project._scope;\n\t\tthis._element = element;\n\t\tvar size;\n\t\tif (!this._pixelRatio)\n\t\t\tthis._pixelRatio = window.devicePixelRatio || 1;\n\t\tthis._id = element.getAttribute('id');\n\t\tif (this._id == null)\n\t\t\telement.setAttribute('id', this._id = 'view-' + View._id++);\n\t\tDomEvent.add(element, this._viewEvents);\n\t\tvar none = 'none';\n\t\tDomElement.setPrefixed(element.style, {\n\t\t\tuserSelect: none,\n\t\t\ttouchAction: none,\n\t\t\ttouchCallout: none,\n\t\t\tcontentZooming: none,\n\t\t\tuserDrag: none,\n\t\t\ttapHighlightColor: 'rgba(0,0,0,0)'\n\t\t});\n\n\t\tfunction getSize(name) {\n\t\t\treturn element[name] || parseInt(element.getAttribute(name), 10);\n\t\t};\n\n\t\tfunction getCanvasSize() {\n\t\t\tvar size = DomElement.getSize(element);\n\t\t\treturn size.isNaN() || size.isZero()\n\t\t\t\t\t? new Size(getSize('width'), getSize('height'))\n\t\t\t\t\t: size;\n\t\t};\n\n\t\tif (PaperScope.hasAttribute(element, 'resize')) {\n\t\t\tvar that = this;\n\t\t\tDomEvent.add(window, this._windowEvents = {\n\t\t\t\tresize: function() {\n\t\t\t\t\tthat.setViewSize(getCanvasSize());\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._setViewSize(size = getCanvasSize());\n\t\tif (PaperScope.hasAttribute(element, 'stats')\n\t\t\t\t&& typeof Stats !== 'undefined') {\n\t\t\tthis._stats = new Stats();\n\t\t\tvar stats = this._stats.domElement,\n\t\t\t\tstyle = stats.style,\n\t\t\t\toffset = DomElement.getOffset(element);\n\t\t\tstyle.position = 'absolute';\n\t\t\tstyle.left = offset.x + 'px';\n\t\t\tstyle.top = offset.y + 'px';\n\t\t\tdocument.body.appendChild(stats);\n\t\t}\n\t\tView._views.push(this);\n\t\tView._viewsById[this._id] = this;\n\t\tthis._viewSize = size;\n\t\t(this._matrix = new Matrix())._owner = this;\n\t\tthis._zoom = 1;\n\t\tif (!View._focused)\n\t\t\tView._focused = this;\n\t\tthis._frameItems = {};\n\t\tthis._frameItemCount = 0;\n\t},\n\n\tremove: function() {\n\t\tif (!this._project)\n\t\t\treturn false;\n\t\tif (View._focused === this)\n\t\t\tView._focused = null;\n\t\tView._views.splice(View._views.indexOf(this), 1);\n\t\tdelete View._viewsById[this._id];\n\t\tif (this._project._view === this)\n\t\t\tthis._project._view = null;\n\t\tDomEvent.remove(this._element, this._viewEvents);\n\t\tDomEvent.remove(window, this._windowEvents);\n\t\tthis._element = this._project = null;\n\t\tthis.off('frame');\n\t\tthis._animate = false;\n\t\tthis._frameItems = {};\n\t\treturn true;\n\t},\n\n\t_events: {\n\t\tonFrame: {\n\t\t\tinstall: function() {\n\t\t\t\tthis.play();\n\t\t\t},\n\n\t\t\tuninstall: function() {\n\t\t\t\tthis.pause();\n\t\t\t}\n\t\t},\n\n\t\tonResize: {}\n\t},\n\n\t_animate: false,\n\t_time: 0,\n\t_count: 0,\n\n\t_requestFrame: function() {\n\t\tvar that = this;\n\t\tDomEvent.requestAnimationFrame(function() {\n\t\t\tthat._requested = false;\n\t\t\tif (!that._animate)\n\t\t\t\treturn;\n\t\t\tthat._requestFrame();\n\t\t\tthat._handleFrame();\n\t\t}, this._element);\n\t\tthis._requested = true;\n\t},\n\n\t_handleFrame: function() {\n\t\tpaper = this._scope;\n\t\tvar now = Date.now() / 1000,\n\t\t\tdelta = this._before ? now - this._before : 0;\n\t\tthis._before = now;\n\t\tthis._handlingFrame = true;\n\t\tthis.emit('frame', new Base({\n\t\t\tdelta: delta,\n\t\t\ttime: this._time += delta,\n\t\t\tcount: this._count++\n\t\t}));\n\t\tif (this._stats)\n\t\t\tthis._stats.update();\n\t\tthis._handlingFrame = false;\n\t\tthis.update();\n\t},\n\n\t_animateItem: function(item, animate) {\n\t\tvar items = this._frameItems;\n\t\tif (animate) {\n\t\t\titems[item._id] = {\n\t\t\t\titem: item,\n\t\t\t\ttime: 0,\n\t\t\t\tcount: 0\n\t\t\t};\n\t\t\tif (++this._frameItemCount === 1)\n\t\t\t\tthis.on('frame', this._handleFrameItems);\n\t\t} else {\n\t\t\tdelete items[item._id];\n\t\t\tif (--this._frameItemCount === 0) {\n\t\t\t\tthis.off('frame', this._handleFrameItems);\n\t\t\t}\n\t\t}\n\t},\n\n\t_handleFrameItems: function(event) {\n\t\tfor (var i in this._frameItems) {\n\t\t\tvar entry = this._frameItems[i];\n\t\t\tentry.item.emit('frame', new Base(event, {\n\t\t\t\ttime: entry.time += event.delta,\n\t\t\t\tcount: entry.count++\n\t\t\t}));\n\t\t}\n\t},\n\n\t_update: function() {\n\t\tthis._project._needsUpdate = true;\n\t\tif (this._handlingFrame)\n\t\t\treturn;\n\t\tif (this._animate) {\n\t\t\tthis._handleFrame();\n\t\t} else {\n\t\t\tthis.update();\n\t\t}\n\t},\n\n\t_changed: function(flags) {\n\t\tif (flags & 1)\n\t\t\tthis._project._needsUpdate = true;\n\t},\n\n\t_transform: function(matrix) {\n\t\tthis._matrix.concatenate(matrix);\n\t\tthis._bounds = null;\n\t\tthis._update();\n\t},\n\n\tgetElement: function() {\n\t\treturn this._element;\n\t},\n\n\tgetPixelRatio: function() {\n\t\treturn this._pixelRatio;\n\t},\n\n\tgetResolution: function() {\n\t\treturn this._pixelRatio * 72;\n\t},\n\n\tgetViewSize: function() {\n\t\tvar size = this._viewSize;\n\t\treturn new LinkedSize(size.width, size.height, this, 'setViewSize');\n\t},\n\n\tsetViewSize: function() {\n\t\tvar size = Size.read(arguments),\n\t\t\tdelta = size.subtract(this._viewSize);\n\t\tif (delta.isZero())\n\t\t\treturn;\n\t\tthis._viewSize.set(size.width, size.height);\n\t\tthis._setViewSize(size);\n\t\tthis._bounds = null;\n\t\tthis.emit('resize', {\n\t\t\tsize: size,\n\t\t\tdelta: delta\n\t\t});\n\t\tthis._update();\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element;\n\t\telement.width = size.width;\n\t\telement.height = size.height;\n\t},\n\n\tgetBounds: function() {\n\t\tif (!this._bounds)\n\t\t\tthis._bounds = this._matrix.inverted()._transformBounds(\n\t\t\t\t\tnew Rectangle(new Point(), this._viewSize));\n\t\treturn this._bounds;\n\t},\n\n\tgetSize: function() {\n\t\treturn this.getBounds().getSize();\n\t},\n\n\tgetCenter: function() {\n\t\treturn this.getBounds().getCenter();\n\t},\n\n\tsetCenter: function() {\n\t\tvar center = Point.read(arguments);\n\t\tthis.scrollBy(center.subtract(this.getCenter()));\n\t},\n\n\tgetZoom: function() {\n\t\treturn this._zoom;\n\t},\n\n\tsetZoom: function(zoom) {\n\t\tthis._transform(new Matrix().scale(zoom / this._zoom,\n\t\t\tthis.getCenter()));\n\t\tthis._zoom = zoom;\n\t},\n\n\tisVisible: function() {\n\t\treturn DomElement.isInView(this._element);\n\t},\n\n\tscrollBy: function() {\n\t\tthis._transform(new Matrix().translate(Point.read(arguments).negate()));\n\t},\n\n\tplay: function() {\n\t\tthis._animate = true;\n\t\tif (!this._requested)\n\t\t\tthis._requestFrame();\n\t},\n\n\tpause: function() {\n\t\tthis._animate = false;\n\t},\n\n\tdraw: function() {\n\t\tthis.update();\n\t},\n\n\tprojectToView: function() {\n\t\treturn this._matrix._transformPoint(Point.read(arguments));\n\t},\n\n\tviewToProject: function() {\n\t\treturn this._matrix._inverseTransform(Point.read(arguments));\n\t}\n\n}, {\n\tstatics: {\n\t\t_views: [],\n\t\t_viewsById: {},\n\t\t_id: 0,\n\n\t\tcreate: function(project, element) {\n\t\t\tif (typeof element === 'string')\n\t\t\t\telement = document.getElementById(element);\n\t\t\treturn new CanvasView(project, element);\n\t\t}\n\t}\n}, new function() {\n\tvar tool,\n\t\tprevFocus,\n\t\ttempFocus,\n\t\tdragging = false;\n\n\tfunction getView(event) {\n\t\tvar target = DomEvent.getTarget(event);\n\t\treturn target.getAttribute && View._viewsById[target.getAttribute('id')];\n\t}\n\n\tfunction viewToProject(view, event) {\n\t\treturn view.viewToProject(DomEvent.getOffset(event, view._element));\n\t}\n\n\tfunction updateFocus() {\n\t\tif (!View._focused || !View._focused.isVisible()) {\n\t\t\tfor (var i = 0, l = View._views.length; i < l; i++) {\n\t\t\t\tvar view = View._views[i];\n\t\t\t\tif (view && view.isVisible()) {\n\t\t\t\t\tView._focused = tempFocus = view;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleMouseMove(view, point, event) {\n\t\tview._handleEvent('mousemove', point, event);\n\t\tvar tool = view._scope.tool;\n\t\tif (tool) {\n\t\t\ttool._handleEvent(dragging && tool.responds('mousedrag')\n\t\t\t\t\t? 'mousedrag' : 'mousemove', point, event);\n\t\t}\n\t\tview.update();\n\t\treturn tool;\n\t}\n\n\tvar navigator = window.navigator,\n\t\tmousedown, mousemove, mouseup;\n\tif (navigator.pointerEnabled || navigator.msPointerEnabled) {\n\t\tmousedown = 'pointerdown MSPointerDown';\n\t\tmousemove = 'pointermove MSPointerMove';\n\t\tmouseup = 'pointerup pointercancel MSPointerUp MSPointerCancel';\n\t} else {\n\t\tmousedown = 'touchstart';\n\t\tmousemove = 'touchmove';\n\t\tmouseup = 'touchend touchcancel';\n\t\tif (!('ontouchstart' in window && navigator.userAgent.match(\n\t\t\t\t/mobile|tablet|ip(ad|hone|od)|android|silk/i))) {\n\t\t\tmousedown += ' mousedown';\n\t\t\tmousemove += ' mousemove';\n\t\t\tmouseup += ' mouseup';\n\t\t}\n\t}\n\n\tvar viewEvents = {\n\t\t'selectstart dragstart': function(event) {\n\t\t\tif (dragging)\n\t\t\t\tevent.preventDefault();\n\t\t}\n\t};\n\n\tvar docEvents = {\n\t\tmouseout: function(event) {\n\t\t\tvar view = View._focused,\n\t\t\t\ttarget = DomEvent.getRelatedTarget(event);\n\t\t\tif (view && (!target || target.nodeName === 'HTML'))\n\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t},\n\n\t\tscroll: updateFocus\n\t};\n\n\tviewEvents[mousedown] = function(event) {\n\t\tvar view = View._focused = getView(event),\n\t\t\tpoint = viewToProject(view, event);\n\t\tdragging = true;\n\t\tview._handleEvent('mousedown', point, event);\n\t\tif (tool = view._scope.tool)\n\t\t\ttool._handleEvent('mousedown', point, event);\n\t\tview.update();\n\t};\n\n\tdocEvents[mousemove] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!dragging) {\n\t\t\tvar target = getView(event);\n\t\t\tif (target) {\n\t\t\t\tif (view !== target)\n\t\t\t\t\thandleMouseMove(view, viewToProject(view, event), event);\n\t\t\t\tprevFocus = view;\n\t\t\t\tview = View._focused = tempFocus = target;\n\t\t\t} else if (tempFocus && tempFocus === view) {\n\t\t\t\tview = View._focused = prevFocus;\n\t\t\t\tupdateFocus();\n\t\t\t}\n\t\t}\n\t\tif (view) {\n\t\t\tvar point = viewToProject(view, event);\n\t\t\tif (dragging || view.getBounds().contains(point))\n\t\t\t\ttool = handleMouseMove(view, point, event);\n\t\t}\n\t};\n\n\tdocEvents[mouseup] = function(event) {\n\t\tvar view = View._focused;\n\t\tif (!view || !dragging)\n\t\t\treturn;\n\t\tvar point = viewToProject(view, event);\n\t\tdragging = false;\n\t\tview._handleEvent('mouseup', point, event);\n\t\tif (tool)\n\t\t\ttool._handleEvent('mouseup', point, event);\n\t\tview.update();\n\t};\n\n\tDomEvent.add(document, docEvents);\n\n\tDomEvent.add(window, {\n\t\tload: updateFocus\n\t});\n\n\treturn {\n\t\t_viewEvents: viewEvents,\n\n\t\t_handleEvent: function() {},\n\n\t\tstatics: {\n\t\t\tupdateFocus: updateFocus\n\t\t}\n\t};\n});\n\nvar CanvasView = View.extend({\n\t_class: 'CanvasView',\n\n\tinitialize: function CanvasView(project, canvas) {\n\t\tif (!(canvas instanceof HTMLCanvasElement)) {\n\t\t\tvar size = Size.read(arguments, 1);\n\t\t\tif (size.isZero())\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\t'Cannot create CanvasView with the provided argument: '\n\t\t\t\t\t\t+ [].slice.call(arguments, 1));\n\t\t\tcanvas = CanvasProvider.getCanvas(size);\n\t\t}\n\t\tthis._context = canvas.getContext('2d');\n\t\tthis._eventCounters = {};\n\t\tthis._pixelRatio = 1;\n\t\tif (!/^off|false$/.test(PaperScope.getAttribute(canvas, 'hidpi'))) {\n\t\t\tvar deviceRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio = DomElement.getPrefixed(this._context,\n\t\t\t\t\t\t'backingStorePixelRatio') || 1;\n\t\t\tthis._pixelRatio = deviceRatio / backingStoreRatio;\n\t\t}\n\t\tView.call(this, project, canvas);\n\t},\n\n\t_setViewSize: function(size) {\n\t\tvar element = this._element,\n\t\t\tpixelRatio = this._pixelRatio,\n\t\t\twidth = size.width,\n\t\t\theight = size.height;\n\t\telement.width = width * pixelRatio;\n\t\telement.height = height * pixelRatio;\n\t\tif (pixelRatio !== 1) {\n\t\t\tif (!PaperScope.hasAttribute(element, 'resize')) {\n\t\t\t\tvar style = element.style;\n\t\t\t\tstyle.width = width + 'px';\n\t\t\t\tstyle.height = height + 'px';\n\t\t\t}\n\t\t\tthis._context.scale(pixelRatio, pixelRatio);\n\t\t}\n\t},\n\n\tgetPixelSize: function(size) {\n\t\tvar browser = paper.browser,\n\t\t\tpixels;\n\t\tif (browser && browser.firefox) {\n\t\t\tvar parent = this._element.parentNode,\n\t\t\t\ttemp = document.createElement('div');\n\t\t\ttemp.style.fontSize = size;\n\t\t\tparent.appendChild(temp);\n\t\t\tpixels = parseFloat(DomElement.getStyles(temp).fontSize);\n\t\t\tparent.removeChild(temp);\n\t\t} else {\n\t\t\tvar ctx = this._context,\n\t\t\t\tprevFont = ctx.font;\n\t\t\tctx.font = size + ' serif';\n\t\t\tpixels = parseFloat(ctx.font);\n\t\t\tctx.font = prevFont;\n\t\t}\n\t\treturn pixels;\n\t},\n\n\tgetTextWidth: function(font, lines) {\n\t\tvar ctx = this._context,\n\t\t\tprevFont = ctx.font,\n\t\t\twidth = 0;\n\t\tctx.font = font;\n\t\tfor (var i = 0, l = lines.length; i < l; i++)\n\t\t\twidth = Math.max(width, ctx.measureText(lines[i]).width);\n\t\tctx.font = prevFont;\n\t\treturn width;\n\t},\n\n\tupdate: function(force) {\n\t\tvar project = this._project;\n\t\tif (!project || !force && !project._needsUpdate)\n\t\t\treturn false;\n\t\tvar ctx = this._context,\n\t\t\tsize = this._viewSize;\n\t\tctx.clearRect(0, 0, size.width + 1, size.height + 1);\n\t\tproject.draw(ctx, this._matrix, this._pixelRatio);\n\t\tproject._needsUpdate = false;\n\t\treturn true;\n\t}\n}, new function() {\n\n\tvar downPoint,\n\t\tlastPoint,\n\t\toverPoint,\n\t\tdownItem,\n\t\tlastItem,\n\t\toverItem,\n\t\tdragItem,\n\t\tdblClick,\n\t\tclickTime;\n\n\tfunction callEvent(view, type, event, point, target, lastPoint) {\n\t\tvar item = target,\n\t\t\tmouseEvent;\n\n\t\tfunction call(obj) {\n\t\t\tif (obj.responds(type)) {\n\t\t\t\tif (!mouseEvent) {\n\t\t\t\t\tmouseEvent = new MouseEvent(type, event, point, target,\n\t\t\t\t\t\t\tlastPoint ? point.subtract(lastPoint) : null);\n\t\t\t\t}\n\t\t\t\tif (obj.emit(type, mouseEvent) && mouseEvent.isStopped) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (item) {\n\t\t\tif (call(item))\n\t\t\t\treturn true;\n\t\t\titem = item.getParent();\n\t\t}\n\t\tif (call(view))\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\treturn {\n\t\t_handleEvent: function(type, point, event) {\n\t\t\tif (!this._eventCounters[type])\n\t\t\t\treturn;\n\t\t\tvar project = this._project,\n\t\t\t\thit = project.hitTest(point, {\n\t\t\t\t\ttolerance: 0,\n\t\t\t\t\tfill: true,\n\t\t\t\t\tstroke: true\n\t\t\t\t}),\n\t\t\t\titem = hit && hit.item,\n\t\t\t\tstopped = false;\n\t\t\tswitch (type) {\n\t\t\tcase 'mousedown':\n\t\t\t\tstopped = callEvent(this, type, event, point, item);\n\t\t\t\tdblClick = lastItem == item && (Date.now() - clickTime < 300);\n\t\t\t\tdownItem = lastItem = item;\n\t\t\t\tdownPoint = lastPoint = overPoint = point;\n\t\t\t\tdragItem = !stopped && item;\n\t\t\t\twhile (dragItem && !dragItem.responds('mousedrag'))\n\t\t\t\t\tdragItem = dragItem._parent;\n\t\t\t\tbreak;\n\t\t\tcase 'mouseup':\n\t\t\t\tstopped = callEvent(this, type, event, point, item, downPoint);\n\t\t\t\tif (dragItem) {\n\t\t\t\t\tif (lastPoint && !lastPoint.equals(point))\n\t\t\t\t\t\tcallEvent(this, 'mousedrag', event, point, dragItem,\n\t\t\t\t\t\t\t\tlastPoint);\n\t\t\t\t\tif (item !== dragItem) {\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\t\tcallEvent(this, 'mousemove', event, point, item,\n\t\t\t\t\t\t\t\toverPoint);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!stopped && item && item === downItem) {\n\t\t\t\t\tclickTime = Date.now();\n\t\t\t\t\tcallEvent(this, dblClick && downItem.responds('doubleclick')\n\t\t\t\t\t\t\t? 'doubleclick' : 'click', event, downPoint, item);\n\t\t\t\t\tdblClick = false;\n\t\t\t\t}\n\t\t\t\tdownItem = dragItem = null;\n\t\t\t\tbreak;\n\t\t\tcase 'mousemove':\n\t\t\t\tif (dragItem)\n\t\t\t\t\tstopped = callEvent(this, 'mousedrag', event, point,\n\t\t\t\t\t\t\tdragItem, lastPoint);\n\t\t\t\tif (!stopped) {\n\t\t\t\t\tif (item !== overItem)\n\t\t\t\t\t\toverPoint = point;\n\t\t\t\t\tstopped = callEvent(this, type, event, point, item,\n\t\t\t\t\t\t\toverPoint);\n\t\t\t\t}\n\t\t\t\tlastPoint = overPoint = point;\n\t\t\t\tif (item !== overItem) {\n\t\t\t\t\tcallEvent(this, 'mouseleave', event, point, overItem);\n\t\t\t\t\toverItem = item;\n\t\t\t\t\tcallEvent(this, 'mouseenter', event, point, item);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\treturn stopped;\n\t\t}\n\t};\n});\n\nvar Event = Base.extend({\n\t_class: 'Event',\n\n\tinitialize: function Event(event) {\n\t\tthis.event = event;\n\t},\n\n\tisPrevented: false,\n\tisStopped: false,\n\n\tpreventDefault: function() {\n\t\tthis.isPrevented = true;\n\t\tthis.event.preventDefault();\n\t},\n\n\tstopPropagation: function() {\n\t\tthis.isStopped = true;\n\t\tthis.event.stopPropagation();\n\t},\n\n\tstop: function() {\n\t\tthis.stopPropagation();\n\t\tthis.preventDefault();\n\t},\n\n\tgetModifiers: function() {\n\t\treturn Key.modifiers;\n\t}\n});\n\nvar KeyEvent = Event.extend({\n\t_class: 'KeyEvent',\n\n\tinitialize: function KeyEvent(down, key, character, event) {\n\t\tEvent.call(this, event);\n\t\tthis.type = down ? 'keydown' : 'keyup';\n\t\tthis.key = key;\n\t\tthis.character = character;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', key: '\" + this.key\n\t\t\t\t+ \"', character: '\" + this.character\n\t\t\t\t+ \"', modifiers: \" + this.getModifiers()\n\t\t\t\t+ \" }\";\n\t}\n});\n\nvar Key = new function() {\n\n\tvar specialKeys = {\n\t\t8: 'backspace',\n\t\t9: 'tab',\n\t\t13: 'enter',\n\t\t16: 'shift',\n\t\t17: 'control',\n\t\t18: 'option',\n\t\t19: 'pause',\n\t\t20: 'caps-lock',\n\t\t27: 'escape',\n\t\t32: 'space',\n\t\t35: 'end',\n\t\t36: 'home',\n\t\t37: 'left',\n\t\t38: 'up',\n\t\t39: 'right',\n\t\t40: 'down',\n\t\t46: 'delete',\n\t\t91: 'command',\n\t\t93: 'command',\n\t\t224: 'command'\n\t},\n\n\tspecialChars = {\n\t\t9: true,\n\t\t13: true,\n\t\t32: true\n\t},\n\n\tmodifiers = new Base({\n\t\tshift: false,\n\t\tcontrol: false,\n\t\toption: false,\n\t\tcommand: false,\n\t\tcapsLock: false,\n\t\tspace: false\n\t}),\n\n\tcharCodeMap = {},\n\tkeyMap = {},\n\tcommandFixMap,\n\tdownCode;\n\n\tfunction handleKey(down, keyCode, charCode, event) {\n\t\tvar character = charCode ? String.fromCharCode(charCode) : '',\n\t\t\tspecialKey = specialKeys[keyCode],\n\t\t\tkey = specialKey || character.toLowerCase(),\n\t\t\ttype = down ? 'keydown' : 'keyup',\n\t\t\tview = View._focused,\n\t\t\tscope = view && view.isVisible() && view._scope,\n\t\t\ttool = scope && scope.tool,\n\t\t\tname;\n\t\tkeyMap[key] = down;\n\t\tif (down) {\n\t\t\tcharCodeMap[keyCode] = charCode;\n\t\t} else {\n\t\t\tdelete charCodeMap[keyCode];\n\t\t}\n\t\tif (specialKey && (name = Base.camelize(specialKey)) in modifiers) {\n\t\t\tmodifiers[name] = down;\n\t\t\tvar browser = paper.browser;\n\t\t\tif (name === 'command' && browser && browser.mac) {\n\t\t\t\tif (down) {\n\t\t\t\t\tcommandFixMap = {};\n\t\t\t\t} else {\n\t\t\t\t\tfor (var code in commandFixMap) {\n\t\t\t\t\t\tif (code in charCodeMap)\n\t\t\t\t\t\t\thandleKey(false, code, commandFixMap[code], event);\n\t\t\t\t\t}\n\t\t\t\t\tcommandFixMap = null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (down && commandFixMap) {\n\t\t\tcommandFixMap[keyCode] = charCode;\n\t\t}\n\t\tif (tool && tool.responds(type)) {\n\t\t\tpaper = scope;\n\t\t\ttool.emit(type, new KeyEvent(down, key, character, event));\n\t\t\tif (view)\n\t\t\t\tview.update();\n\t\t}\n\t}\n\n\tDomEvent.add(document, {\n\t\tkeydown: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in specialKeys || modifiers.command) {\n\t\t\t\thandleKey(true, code,\n\t\t\t\t\t\tcode in specialChars || modifiers.command ? code : 0,\n\t\t\t\t\t\tevent);\n\t\t\t} else {\n\t\t\t\tdownCode = code;\n\t\t\t}\n\t\t},\n\n\t\tkeypress: function(event) {\n\t\t\tif (downCode != null) {\n\t\t\t\thandleKey(true, downCode, event.which || event.keyCode, event);\n\t\t\t\tdownCode = null;\n\t\t\t}\n\t\t},\n\n\t\tkeyup: function(event) {\n\t\t\tvar code = event.which || event.keyCode;\n\t\t\tif (code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\tDomEvent.add(window, {\n\t\tblur: function(event) {\n\t\t\tfor (var code in charCodeMap)\n\t\t\t\thandleKey(false, code, charCodeMap[code], event);\n\t\t}\n\t});\n\n\treturn {\n\t\tmodifiers: modifiers,\n\n\t\tisDown: function(key) {\n\t\t\treturn !!keyMap[key];\n\t\t}\n\t};\n};\n\nvar MouseEvent = Event.extend({\n\t_class: 'MouseEvent',\n\n\tinitialize: function MouseEvent(type, event, point, target, delta) {\n\t\tEvent.call(this, event);\n\t\tthis.type = type;\n\t\tthis.point = point;\n\t\tthis.target = target;\n\t\tthis.delta = delta;\n\t},\n\n\ttoString: function() {\n\t\treturn \"{ type: '\" + this.type\n\t\t\t\t+ \"', point: \" + this.point\n\t\t\t\t+ ', target: ' + this.target\n\t\t\t\t+ (this.delta ? ', delta: ' + this.delta : '')\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar ToolEvent = Event.extend({\n\t_class: 'ToolEvent',\n\t_item: null,\n\n\tinitialize: function ToolEvent(tool, type, event) {\n\t\tthis.tool = tool;\n\t\tthis.type = type;\n\t\tthis.event = event;\n\t},\n\n\t_choosePoint: function(point, toolPoint) {\n\t\treturn point ? point : toolPoint ? toolPoint.clone() : null;\n\t},\n\n\tgetPoint: function() {\n\t\treturn this._choosePoint(this._point, this.tool._point);\n\t},\n\n\tsetPoint: function(point) {\n\t\tthis._point = point;\n\t},\n\n\tgetLastPoint: function() {\n\t\treturn this._choosePoint(this._lastPoint, this.tool._lastPoint);\n\t},\n\n\tsetLastPoint: function(lastPoint) {\n\t\tthis._lastPoint = lastPoint;\n\t},\n\n\tgetDownPoint: function() {\n\t\treturn this._choosePoint(this._downPoint, this.tool._downPoint);\n\t},\n\n\tsetDownPoint: function(downPoint) {\n\t\tthis._downPoint = downPoint;\n\t},\n\n\tgetMiddlePoint: function() {\n\t\tif (!this._middlePoint && this.tool._lastPoint) {\n\t\t\treturn this.tool._point.add(this.tool._lastPoint).divide(2);\n\t\t}\n\t\treturn this._middlePoint;\n\t},\n\n\tsetMiddlePoint: function(middlePoint) {\n\t\tthis._middlePoint = middlePoint;\n\t},\n\n\tgetDelta: function() {\n\t\treturn !this._delta && this.tool._lastPoint\n\t\t\t\t? this.tool._point.subtract(this.tool._lastPoint)\n\t\t\t\t: this._delta;\n\t},\n\n\tsetDelta: function(delta) {\n\t\tthis._delta = delta;\n\t},\n\n\tgetCount: function() {\n\t\treturn /^mouse(down|up)$/.test(this.type)\n\t\t\t\t? this.tool._downCount\n\t\t\t\t: this.tool._count;\n\t},\n\n\tsetCount: function(count) {\n\t\tthis.tool[/^mouse(down|up)$/.test(this.type) ? 'downCount' : 'count']\n\t\t\t= count;\n\t},\n\n\tgetItem: function() {\n\t\tif (!this._item) {\n\t\t\tvar result = this.tool._scope.project.hitTest(this.getPoint());\n\t\t\tif (result) {\n\t\t\t\tvar item = result.item,\n\t\t\t\t\tparent = item._parent;\n\t\t\t\twhile (/^(Group|CompoundPath)$/.test(parent._class)) {\n\t\t\t\t\titem = parent;\n\t\t\t\t\tparent = parent._parent;\n\t\t\t\t}\n\t\t\t\tthis._item = item;\n\t\t\t}\n\t\t}\n\t\treturn this._item;\n\t},\n\n\tsetItem: function(item) {\n\t\tthis._item = item;\n\t},\n\n\ttoString: function() {\n\t\treturn '{ type: ' + this.type\n\t\t\t\t+ ', point: ' + this.getPoint()\n\t\t\t\t+ ', count: ' + this.getCount()\n\t\t\t\t+ ', modifiers: ' + this.getModifiers()\n\t\t\t\t+ ' }';\n\t}\n});\n\nvar Tool = PaperScopeItem.extend({\n\t_class: 'Tool',\n\t_list: 'tools',\n\t_reference: 'tool',\n\t_events: [ 'onActivate', 'onDeactivate', 'onEditOptions',\n\t\t\t'onMouseDown', 'onMouseUp', 'onMouseDrag', 'onMouseMove',\n\t\t\t'onKeyDown', 'onKeyUp' ],\n\n\tinitialize: function Tool(props) {\n\t\tPaperScopeItem.call(this);\n\t\tthis._firstMove = true;\n\t\tthis._count = 0;\n\t\tthis._downCount = 0;\n\t\tthis._set(props);\n\t},\n\n\tgetMinDistance: function() {\n\t\treturn this._minDistance;\n\t},\n\n\tsetMinDistance: function(minDistance) {\n\t\tthis._minDistance = minDistance;\n\t\tif (minDistance != null && this._maxDistance != null\n\t\t\t\t&& minDistance > this._maxDistance) {\n\t\t\tthis._maxDistance = minDistance;\n\t\t}\n\t},\n\n\tgetMaxDistance: function() {\n\t\treturn this._maxDistance;\n\t},\n\n\tsetMaxDistance: function(maxDistance) {\n\t\tthis._maxDistance = maxDistance;\n\t\tif (this._minDistance != null && maxDistance != null\n\t\t\t\t&& maxDistance < this._minDistance) {\n\t\t\tthis._minDistance = maxDistance;\n\t\t}\n\t},\n\n\tgetFixedDistance: function() {\n\t\treturn this._minDistance == this._maxDistance\n\t\t\t? this._minDistance : null;\n\t},\n\n\tsetFixedDistance: function(distance) {\n\t\tthis._minDistance = distance;\n\t\tthis._maxDistance = distance;\n\t},\n\n\t_updateEvent: function(type, point, minDistance, maxDistance, start,\n\t\t\tneedsChange, matchMaxDistance) {\n\t\tif (!start) {\n\t\t\tif (minDistance != null || maxDistance != null) {\n\t\t\t\tvar minDist = minDistance != null ? minDistance : 0,\n\t\t\t\t\tvector = point.subtract(this._point),\n\t\t\t\t\tdistance = vector.getLength();\n\t\t\t\tif (distance < minDist)\n\t\t\t\t\treturn false;\n\t\t\t\tif (maxDistance != null && maxDistance != 0) {\n\t\t\t\t\tif (distance > maxDistance) {\n\t\t\t\t\t\tpoint = this._point.add(vector.normalize(maxDistance));\n\t\t\t\t\t} else if (matchMaxDistance) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (needsChange && point.equals(this._point))\n\t\t\t\treturn false;\n\t\t}\n\t\tthis._lastPoint = start && type == 'mousemove' ? point : this._point;\n\t\tthis._point = point;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tthis._downPoint = this._point;\n\t\t\tthis._downCount++;\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tthis._lastPoint = this._downPoint;\n\t\t\tbreak;\n\t\t}\n\t\tthis._count = start ? 0 : this._count + 1;\n\t\treturn true;\n\t},\n\n\t_fireEvent: function(type, event) {\n\t\tvar sets = paper.project._removeSets;\n\t\tif (sets) {\n\t\t\tif (type === 'mouseup')\n\t\t\t\tsets.mousedrag = null;\n\t\t\tvar set = sets[type];\n\t\t\tif (set) {\n\t\t\t\tfor (var id in set) {\n\t\t\t\t\tvar item = set[id];\n\t\t\t\t\tfor (var key in sets) {\n\t\t\t\t\t\tvar other = sets[key];\n\t\t\t\t\t\tif (other && other != set)\n\t\t\t\t\t\t\tdelete other[item._id];\n\t\t\t\t\t}\n\t\t\t\t\titem.remove();\n\t\t\t\t}\n\t\t\t\tsets[type] = null;\n\t\t\t}\n\t\t}\n\t\treturn this.responds(type)\n\t\t\t\t&& this.emit(type, new ToolEvent(this, type, event));\n\t},\n\n\t_handleEvent: function(type, point, event) {\n\t\tpaper = this._scope;\n\t\tvar called = false;\n\t\tswitch (type) {\n\t\tcase 'mousedown':\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tcalled = this._fireEvent(type, event);\n\t\t\tbreak;\n\t\tcase 'mousedrag':\n\t\t\tvar needsChange = false,\n\t\t\t\tmatchMaxDistance = false;\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, false, needsChange, matchMaxDistance)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tneedsChange = true;\n\t\t\t\tmatchMaxDistance = true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'mouseup':\n\t\t\tif (!point.equals(this._point)\n\t\t\t\t\t&& this._updateEvent('mousedrag', point, this.minDistance,\n\t\t\t\t\t\t\tthis.maxDistance, false, false, false)) {\n\t\t\t\tcalled = this._fireEvent('mousedrag', event);\n\t\t\t}\n\t\t\tthis._updateEvent(type, point, null, this.maxDistance, false,\n\t\t\t\t\tfalse, false);\n\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\tthis._updateEvent(type, point, null, null, true, false, false);\n\t\t\tthis._firstMove = true;\n\t\t\tbreak;\n\t\tcase 'mousemove':\n\t\t\twhile (this._updateEvent(type, point, this.minDistance,\n\t\t\t\t\tthis.maxDistance, this._firstMove, true, false)) {\n\t\t\t\tcalled = this._fireEvent(type, event) || called;\n\t\t\t\tthis._firstMove = false;\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tif (called)\n\t\t\tevent.preventDefault();\n\t\treturn called;\n\t}\n\n});\n\nvar Http = {\n\trequest: function(method, url, callback, async) {\n\t\tasync = (async === undefined) ? true : async;\n\t\tvar xhr = new (window.ActiveXObject || XMLHttpRequest)(\n\t\t\t\t\t'Microsoft.XMLHTTP');\n\t\txhr.open(method.toUpperCase(), url, async);\n\t\tif ('overrideMimeType' in xhr)\n\t\t\txhr.overrideMimeType('text/plain');\n\t\txhr.onreadystatechange = function() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || status === 200) {\n\t\t\t\t\tcallback.call(xhr, xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Could not load ' + url + ' (Error '\n\t\t\t\t\t\t\t+ status + ')');\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn xhr.send(null);\n\t}\n};\n\nvar CanvasProvider = {\n\tcanvases: [],\n\n\tgetCanvas: function(width, height) {\n\t\tvar canvas,\n\t\t\tclear = true;\n\t\tif (typeof width === 'object') {\n\t\t\theight = width.height;\n\t\t\twidth = width.width;\n\t\t}\n\t\tif (this.canvases.length) {\n\t\t\tcanvas = this.canvases.pop();\n\t\t} else {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tvar ctx = canvas.getContext('2d');\n\t\tif (canvas.width === width && canvas.height === height) {\n\t\t\tif (clear)\n\t\t\t\tctx.clearRect(0, 0, width + 1, height + 1);\n\t\t} else {\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t}\n\t\tctx.save();\n\t\treturn canvas;\n\t},\n\n\tgetContext: function(width, height) {\n\t\treturn this.getCanvas(width, height).getContext('2d');\n\t},\n\n\trelease: function(obj) {\n\t\tvar canvas = obj.canvas ? obj.canvas : obj;\n\t\tcanvas.getContext('2d').restore();\n\t\tthis.canvases.push(canvas);\n\t}\n};\n\nvar BlendMode = new function() {\n\tvar min = Math.min,\n\t\tmax = Math.max,\n\t\tabs = Math.abs,\n\t\tsr, sg, sb, sa,\n\t\tbr, bg, bb, ba,\n\t\tdr, dg, db;\n\n\tfunction getLum(r, g, b) {\n\t\treturn 0.2989 * r + 0.587 * g + 0.114 * b;\n\t}\n\n\tfunction setLum(r, g, b, l) {\n\t\tvar d = l - getLum(r, g, b);\n\t\tdr = r + d;\n\t\tdg = g + d;\n\t\tdb = b + d;\n\t\tvar l = getLum(dr, dg, db),\n\t\t\tmn = min(dr, dg, db),\n\t\t\tmx = max(dr, dg, db);\n\t\tif (mn < 0) {\n\t\t\tvar lmn = l - mn;\n\t\t\tdr = l + (dr - l) * l / lmn;\n\t\t\tdg = l + (dg - l) * l / lmn;\n\t\t\tdb = l + (db - l) * l / lmn;\n\t\t}\n\t\tif (mx > 255) {\n\t\t\tvar ln = 255 - l,\n\t\t\t\tmxl = mx - l;\n\t\t\tdr = l + (dr - l) * ln / mxl;\n\t\t\tdg = l + (dg - l) * ln / mxl;\n\t\t\tdb = l + (db - l) * ln / mxl;\n\t\t}\n\t}\n\n\tfunction getSat(r, g, b) {\n\t\treturn max(r, g, b) - min(r, g, b);\n\t}\n\n\tfunction setSat(r, g, b, s) {\n\t\tvar col = [r, g, b],\n\t\t\tmx = max(r, g, b),\n\t\t\tmn = min(r, g, b),\n\t\t\tmd;\n\t\tmn = mn === r ? 0 : mn === g ? 1 : 2;\n\t\tmx = mx === r ? 0 : mx === g ? 1 : 2;\n\t\tmd = min(mn, mx) === 0 ? max(mn, mx) === 1 ? 2 : 1 : 0;\n\t\tif (col[mx] > col[mn]) {\n\t\t\tcol[md] = (col[md] - col[mn]) * s / (col[mx] - col[mn]);\n\t\t\tcol[mx] = s;\n\t\t} else {\n\t\t\tcol[md] = col[mx] = 0;\n\t\t}\n\t\tcol[mn] = 0;\n\t\tdr = col[0];\n\t\tdg = col[1];\n\t\tdb = col[2];\n\t}\n\n\tvar modes = {\n\t\tmultiply: function() {\n\t\t\tdr = br * sr / 255;\n\t\t\tdg = bg * sg / 255;\n\t\t\tdb = bb * sb / 255;\n\t\t},\n\n\t\tscreen: function() {\n\t\t\tdr = br + sr - (br * sr / 255);\n\t\t\tdg = bg + sg - (bg * sg / 255);\n\t\t\tdb = bb + sb - (bb * sb / 255);\n\t\t},\n\n\t\toverlay: function() {\n\t\t\tdr = br < 128 ? 2 * br * sr / 255 : 255 - 2 * (255 - br) * (255 - sr) / 255;\n\t\t\tdg = bg < 128 ? 2 * bg * sg / 255 : 255 - 2 * (255 - bg) * (255 - sg) / 255;\n\t\t\tdb = bb < 128 ? 2 * bb * sb / 255 : 255 - 2 * (255 - bb) * (255 - sb) / 255;\n\t\t},\n\n\t\t'soft-light': function() {\n\t\t\tvar t = sr * br / 255;\n\t\t\tdr = t + br * (255 - (255 - br) * (255 - sr) / 255 - t) / 255;\n\t\t\tt = sg * bg / 255;\n\t\t\tdg = t + bg * (255 - (255 - bg) * (255 - sg) / 255 - t) / 255;\n\t\t\tt = sb * bb / 255;\n\t\t\tdb = t + bb * (255 - (255 - bb) * (255 - sb) / 255 - t) / 255;\n\t\t},\n\n\t\t'hard-light': function() {\n\t\t\tdr = sr < 128 ? 2 * sr * br / 255 : 255 - 2 * (255 - sr) * (255 - br) / 255;\n\t\t\tdg = sg < 128 ? 2 * sg * bg / 255 : 255 - 2 * (255 - sg) * (255 - bg) / 255;\n\t\t\tdb = sb < 128 ? 2 * sb * bb / 255 : 255 - 2 * (255 - sb) * (255 - bb) / 255;\n\t\t},\n\n\t\t'color-dodge': function() {\n\t\t\tdr = br === 0 ? 0 : sr === 255 ? 255 : min(255, 255 * br / (255 - sr));\n\t\t\tdg = bg === 0 ? 0 : sg === 255 ? 255 : min(255, 255 * bg / (255 - sg));\n\t\t\tdb = bb === 0 ? 0 : sb === 255 ? 255 : min(255, 255 * bb / (255 - sb));\n\t\t},\n\n\t\t'color-burn': function() {\n\t\t\tdr = br === 255 ? 255 : sr === 0 ? 0 : max(0, 255 - (255 - br) * 255 / sr);\n\t\t\tdg = bg === 255 ? 255 : sg === 0 ? 0 : max(0, 255 - (255 - bg) * 255 / sg);\n\t\t\tdb = bb === 255 ? 255 : sb === 0 ? 0 : max(0, 255 - (255 - bb) * 255 / sb);\n\t\t},\n\n\t\tdarken: function() {\n\t\t\tdr = br < sr ? br : sr;\n\t\t\tdg = bg < sg ? bg : sg;\n\t\t\tdb = bb < sb ? bb : sb;\n\t\t},\n\n\t\tlighten: function() {\n\t\t\tdr = br > sr ? br : sr;\n\t\t\tdg = bg > sg ? bg : sg;\n\t\t\tdb = bb > sb ? bb : sb;\n\t\t},\n\n\t\tdifference: function() {\n\t\t\tdr = br - sr;\n\t\t\tif (dr < 0)\n\t\t\t\tdr = -dr;\n\t\t\tdg = bg - sg;\n\t\t\tif (dg < 0)\n\t\t\t\tdg = -dg;\n\t\t\tdb = bb - sb;\n\t\t\tif (db < 0)\n\t\t\t\tdb = -db;\n\t\t},\n\n\t\texclusion: function() {\n\t\t\tdr = br + sr * (255 - br - br) / 255;\n\t\t\tdg = bg + sg * (255 - bg - bg) / 255;\n\t\t\tdb = bb + sb * (255 - bb - bb) / 255;\n\t\t},\n\n\t\thue: function() {\n\t\t\tsetSat(sr, sg, sb, getSat(br, bg, bb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tsaturation: function() {\n\t\t\tsetSat(br, bg, bb, getSat(sr, sg, sb));\n\t\t\tsetLum(dr, dg, db, getLum(br, bg, bb));\n\t\t},\n\n\t\tluminosity: function() {\n\t\t\tsetLum(br, bg, bb, getLum(sr, sg, sb));\n\t\t},\n\n\t\tcolor: function() {\n\t\t\tsetLum(sr, sg, sb, getLum(br, bg, bb));\n\t\t},\n\n\t\tadd: function() {\n\t\t\tdr = min(br + sr, 255);\n\t\t\tdg = min(bg + sg, 255);\n\t\t\tdb = min(bb + sb, 255);\n\t\t},\n\n\t\tsubtract: function() {\n\t\t\tdr = max(br - sr, 0);\n\t\t\tdg = max(bg - sg, 0);\n\t\t\tdb = max(bb - sb, 0);\n\t\t},\n\n\t\taverage: function() {\n\t\t\tdr = (br + sr) / 2;\n\t\t\tdg = (bg + sg) / 2;\n\t\t\tdb = (bb + sb) / 2;\n\t\t},\n\n\t\tnegation: function() {\n\t\t\tdr = 255 - abs(255 - sr - br);\n\t\t\tdg = 255 - abs(255 - sg - bg);\n\t\t\tdb = 255 - abs(255 - sb - bb);\n\t\t}\n\t};\n\n\tvar nativeModes = this.nativeModes = Base.each([\n\t\t'source-over', 'source-in', 'source-out', 'source-atop',\n\t\t'destination-over', 'destination-in', 'destination-out',\n\t\t'destination-atop', 'lighter', 'darker', 'copy', 'xor'\n\t], function(mode) {\n\t\tthis[mode] = true;\n\t}, {});\n\n\tvar ctx = CanvasProvider.getContext(1, 1);\n\tBase.each(modes, function(func, mode) {\n\t\tvar darken = mode === 'darken',\n\t\t\tok = false;\n\t\tctx.save();\n\t\ttry {\n\t\t\tctx.fillStyle = darken ? '#300' : '#a00';\n\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\tctx.globalCompositeOperation = mode;\n\t\t\tif (ctx.globalCompositeOperation === mode) {\n\t\t\t\tctx.fillStyle = darken ? '#a00' : '#300';\n\t\t\t\tctx.fillRect(0, 0, 1, 1);\n\t\t\t\tok = ctx.getImageData(0, 0, 1, 1).data[0] !== darken ? 170 : 51;\n\t\t\t}\n\t\t} catch (e) {}\n\t\tctx.restore();\n\t\tnativeModes[mode] = ok;\n\t});\n\tCanvasProvider.release(ctx);\n\n\tthis.process = function(mode, srcContext, dstContext, alpha, offset) {\n\t\tvar srcCanvas = srcContext.canvas,\n\t\t\tnormal = mode === 'normal';\n\t\tif (normal || nativeModes[mode]) {\n\t\t\tdstContext.save();\n\t\t\tdstContext.setTransform(1, 0, 0, 1, 0, 0);\n\t\t\tdstContext.globalAlpha = alpha;\n\t\t\tif (!normal)\n\t\t\t\tdstContext.globalCompositeOperation = mode;\n\t\t\tdstContext.drawImage(srcCanvas, offset.x, offset.y);\n\t\t\tdstContext.restore();\n\t\t} else {\n\t\t\tvar process = modes[mode];\n\t\t\tif (!process)\n\t\t\t\treturn;\n\t\t\tvar dstData = dstContext.getImageData(offset.x, offset.y,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height),\n\t\t\t\tdst = dstData.data,\n\t\t\t\tsrc = srcContext.getImageData(0, 0,\n\t\t\t\t\tsrcCanvas.width, srcCanvas.height).data;\n\t\t\tfor (var i = 0, l = dst.length; i < l; i += 4) {\n\t\t\t\tsr = src[i];\n\t\t\t\tbr = dst[i];\n\t\t\t\tsg = src[i + 1];\n\t\t\t\tbg = dst[i + 1];\n\t\t\t\tsb = src[i + 2];\n\t\t\t\tbb = dst[i + 2];\n\t\t\t\tsa = src[i + 3];\n\t\t\t\tba = dst[i + 3];\n\t\t\t\tprocess();\n\t\t\t\tvar a1 = sa * alpha / 255,\n\t\t\t\t\ta2 = 1 - a1;\n\t\t\t\tdst[i] = a1 * dr + a2 * br;\n\t\t\t\tdst[i + 1] = a1 * dg + a2 * bg;\n\t\t\t\tdst[i + 2] = a1 * db + a2 * bb;\n\t\t\t\tdst[i + 3] = sa * alpha + a2 * ba;\n\t\t\t}\n\t\t\tdstContext.putImageData(dstData, offset.x, offset.y);\n\t\t}\n\t};\n};\n\nvar SVGStyles = Base.each({\n\tfillColor: ['fill', 'color'],\n\tstrokeColor: ['stroke', 'color'],\n\tstrokeWidth: ['stroke-width', 'number'],\n\tstrokeCap: ['stroke-linecap', 'string'],\n\tstrokeJoin: ['stroke-linejoin', 'string'],\n\tstrokeScaling: ['vector-effect', 'lookup', {\n\t\ttrue: 'none',\n\t\tfalse: 'non-scaling-stroke'\n\t}, function(item, value) {\n\t\treturn !value\n\t\t\t\t&& (item instanceof PathItem\n\t\t\t\t\t|| item instanceof Shape\n\t\t\t\t\t|| item instanceof TextItem);\n\t}],\n\tmiterLimit: ['stroke-miterlimit', 'number'],\n\tdashArray: ['stroke-dasharray', 'array'],\n\tdashOffset: ['stroke-dashoffset', 'number'],\n\tfontFamily: ['font-family', 'string'],\n\tfontWeight: ['font-weight', 'string'],\n\tfontSize: ['font-size', 'number'],\n\tjustification: ['text-anchor', 'lookup', {\n\t\tleft: 'start',\n\t\tcenter: 'middle',\n\t\tright: 'end'\n\t}],\n\topacity: ['opacity', 'number'],\n\tblendMode: ['mix-blend-mode', 'string']\n}, function(entry, key) {\n\tvar part = Base.capitalize(key),\n\t\tlookup = entry[2];\n\tthis[key] = {\n\t\ttype: entry[1],\n\t\tproperty: key,\n\t\tattribute: entry[0],\n\t\ttoSVG: lookup,\n\t\tfromSVG: lookup && Base.each(lookup, function(value, name) {\n\t\t\tthis[value] = name;\n\t\t}, {}),\n\t\texportFilter: entry[3],\n\t\tget: 'get' + part,\n\t\tset: 'set' + part\n\t};\n}, {});\n\nvar SVGNamespaces = {\n\thref: 'http://www.w3.org/1999/xlink',\n\txlink: 'http://www.w3.org/2000/xmlns'\n};\n\nnew function() {\n\tvar formatter;\n\n\tfunction setAttributes(node, attrs) {\n\t\tfor (var key in attrs) {\n\t\t\tvar val = attrs[key],\n\t\t\t\tnamespace = SVGNamespaces[key];\n\t\t\tif (typeof val === 'number')\n\t\t\t\tval = formatter.number(val);\n\t\t\tif (namespace) {\n\t\t\t\tnode.setAttributeNS(namespace, key, val);\n\t\t\t} else {\n\t\t\t\tnode.setAttribute(key, val);\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction createElement(tag, attrs) {\n\t\treturn setAttributes(\n\t\t\tdocument.createElementNS('http://www.w3.org/2000/svg', tag), attrs);\n\t}\n\n\tfunction getTransform(matrix, coordinates, center) {\n\t\tvar attrs = new Base(),\n\t\t\ttrans = matrix.getTranslation();\n\t\tif (coordinates) {\n\t\t\tmatrix = matrix.shiftless();\n\t\t\tvar point = matrix._inverseTransform(trans);\n\t\t\tattrs[center ? 'cx' : 'x'] = point.x;\n\t\t\tattrs[center ? 'cy' : 'y'] = point.y;\n\t\t\ttrans = null;\n\t\t}\n\t\tif (!matrix.isIdentity()) {\n\t\t\tvar decomposed = matrix.decompose();\n\t\t\tif (decomposed && !decomposed.shearing) {\n\t\t\t\tvar parts = [],\n\t\t\t\t\tangle = decomposed.rotation,\n\t\t\t\t\tscale = decomposed.scaling;\n\t\t\t\tif (trans && !trans.isZero())\n\t\t\t\t\tparts.push('translate(' + formatter.point(trans) + ')');\n\t\t\t\tif (!Numerical.isZero(scale.x - 1)\n\t\t\t\t\t\t|| !Numerical.isZero(scale.y - 1))\n\t\t\t\t\tparts.push('scale(' + formatter.point(scale) +')');\n\t\t\t\tif (angle)\n\t\t\t\t\tparts.push('rotate(' + formatter.number(angle) + ')');\n\t\t\t\tattrs.transform = parts.join(' ');\n\t\t\t} else {\n\t\t\t\tattrs.transform = 'matrix(' + matrix.getValues().join(',') + ')';\n\t\t\t}\n\t\t}\n\t\treturn attrs;\n\t}\n\n\tfunction exportGroup(item, options) {\n\t\tvar attrs = getTransform(item._matrix),\n\t\t\tchildren = item._children;\n\t\tvar node = createElement('g', attrs);\n\t\tfor (var i = 0, l = children.length; i < l; i++) {\n\t\t\tvar child = children[i];\n\t\t\tvar childNode = exportSVG(child, options);\n\t\t\tif (childNode) {\n\t\t\t\tif (child.isClipMask()) {\n\t\t\t\t\tvar clip = createElement('clipPath');\n\t\t\t\t\tclip.appendChild(childNode);\n\t\t\t\t\tsetDefinition(child, clip, 'clip');\n\t\t\t\t\tsetAttributes(node, {\n\t\t\t\t\t\t'clip-path': 'url(#' + clip.id + ')'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tnode.appendChild(childNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\tfunction exportRaster(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsize = item.getSize(),\n\t\t\timage = item.getImage();\n\t\tattrs.x -= size.width / 2;\n\t\tattrs.y -= size.height / 2;\n\t\tattrs.width = size.width;\n\t\tattrs.height = size.height;\n\t\tattrs.href = options.embedImages === false && image && image.src\n\t\t\t\t|| item.toDataURL();\n\t\treturn createElement('image', attrs);\n\t}\n\n\tfunction exportPath(item, options) {\n\t\tvar matchShapes = options.matchShapes;\n\t\tif (matchShapes) {\n\t\t\tvar shape = item.toShape(false);\n\t\t\tif (shape)\n\t\t\t\treturn exportShape(shape, options);\n\t\t}\n\t\tvar segments = item._segments,\n\t\t\ttype,\n\t\t\tattrs = getTransform(item._matrix);\n\t\tif (segments.length === 0)\n\t\t\treturn null;\n\t\tif (matchShapes && !item.hasHandles()) {\n\t\t\tif (segments.length >= 3) {\n\t\t\t\ttype = item._closed ? 'polygon' : 'polyline';\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var i = 0, l = segments.length; i < l; i++)\n\t\t\t\t\tparts.push(formatter.point(segments[i]._point));\n\t\t\t\tattrs.points = parts.join(' ');\n\t\t\t} else {\n\t\t\t\ttype = 'line';\n\t\t\t\tvar first = segments[0]._point,\n\t\t\t\t\tlast = segments[segments.length - 1]._point;\n\t\t\t\tattrs.set({\n\t\t\t\t\tx1: first.x,\n\t\t\t\t\ty1: first.y,\n\t\t\t\t\tx2: last.x,\n\t\t\t\t\ty2: last.y\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\ttype = 'path';\n\t\t\tattrs.d = item.getPathData(null, options.precision);\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportShape(item) {\n\t\tvar type = item._type,\n\t\t\tradius = item._radius,\n\t\t\tattrs = getTransform(item._matrix, true, type !== 'rectangle');\n\t\tif (type === 'rectangle') {\n\t\t\ttype = 'rect';\n\t\t\tvar size = item._size,\n\t\t\t\twidth = size.width,\n\t\t\t\theight = size.height;\n\t\t\tattrs.x -= width / 2;\n\t\t\tattrs.y -= height / 2;\n\t\t\tattrs.width = width;\n\t\t\tattrs.height = height;\n\t\t\tif (radius.isZero())\n\t\t\t\tradius = null;\n\t\t}\n\t\tif (radius) {\n\t\t\tif (type === 'circle') {\n\t\t\t\tattrs.r = radius;\n\t\t\t} else {\n\t\t\t\tattrs.rx = radius.width;\n\t\t\t\tattrs.ry = radius.height;\n\t\t\t}\n\t\t}\n\t\treturn createElement(type, attrs);\n\t}\n\n\tfunction exportCompoundPath(item, options) {\n\t\tvar attrs = getTransform(item._matrix);\n\t\tvar data = item.getPathData(null, options.precision);\n\t\tif (data)\n\t\t\tattrs.d = data;\n\t\treturn createElement('path', attrs);\n\t}\n\n\tfunction exportPlacedSymbol(item, options) {\n\t\tvar attrs = getTransform(item._matrix, true),\n\t\t\tsymbol = item.getSymbol(),\n\t\t\tsymbolNode = getDefinition(symbol, 'symbol'),\n\t\t\tdefinition = symbol.getDefinition(),\n\t\t\tbounds = definition.getBounds();\n\t\tif (!symbolNode) {\n\t\t\tsymbolNode = createElement('symbol', {\n\t\t\t\tviewBox: formatter.rectangle(bounds)\n\t\t\t});\n\t\t\tsymbolNode.appendChild(exportSVG(definition, options));\n\t\t\tsetDefinition(symbol, symbolNode, 'symbol');\n\t\t}\n\t\tattrs.href = '#' + symbolNode.id;\n\t\tattrs.x += bounds.x;\n\t\tattrs.y += bounds.y;\n\t\tattrs.width = formatter.number(bounds.width);\n\t\tattrs.height = formatter.number(bounds.height);\n\t\tattrs.overflow = 'visible';\n\t\treturn createElement('use', attrs);\n\t}\n\n\tfunction exportGradient(color) {\n\t\tvar gradientNode = getDefinition(color, 'color');\n\t\tif (!gradientNode) {\n\t\t\tvar gradient = color.getGradient(),\n\t\t\t\tradial = gradient._radial,\n\t\t\t\torigin = color.getOrigin().transform(),\n\t\t\t\tdestination = color.getDestination().transform(),\n\t\t\t\tattrs;\n\t\t\tif (radial) {\n\t\t\t\tattrs = {\n\t\t\t\t\tcx: origin.x,\n\t\t\t\t\tcy: origin.y,\n\t\t\t\t\tr: origin.getDistance(destination)\n\t\t\t\t};\n\t\t\t\tvar highlight = color.getHighlight();\n\t\t\t\tif (highlight) {\n\t\t\t\t\thighlight = highlight.transform();\n\t\t\t\t\tattrs.fx = highlight.x;\n\t\t\t\t\tattrs.fy = highlight.y;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tattrs = {\n\t\t\t\t\tx1: origin.x,\n\t\t\t\t\ty1: origin.y,\n\t\t\t\t\tx2: destination.x,\n\t\t\t\t\ty2: destination.y\n\t\t\t\t};\n\t\t\t}\n\t\t\tattrs.gradientUnits = 'userSpaceOnUse';\n\t\t\tgradientNode = createElement(\n\t\t\t\t\t(radial ? 'radial' : 'linear') + 'Gradient', attrs);\n\t\t\tvar stops = gradient._stops;\n\t\t\tfor (var i = 0, l = stops.length; i < l; i++) {\n\t\t\t\tvar stop = stops[i],\n\t\t\t\t\tstopColor = stop._color,\n\t\t\t\t\talpha = stopColor.getAlpha();\n\t\t\t\tattrs = {\n\t\t\t\t\toffset: stop._rampPoint,\n\t\t\t\t\t'stop-color': stopColor.toCSS(true)\n\t\t\t\t};\n\t\t\t\tif (alpha < 1)\n\t\t\t\t\tattrs['stop-opacity'] = alpha;\n\t\t\t\tgradientNode.appendChild(createElement('stop', attrs));\n\t\t\t}\n\t\t\tsetDefinition(color, gradientNode, 'color');\n\t\t}\n\t\treturn 'url(#' + gradientNode.id + ')';\n\t}\n\n\tfunction exportText(item) {\n\t\tvar node = createElement('text', getTransform(item._matrix, true));\n\t\tnode.textContent = item._content;\n\t\treturn node;\n\t}\n\n\tvar exporters = {\n\t\tGroup: exportGroup,\n\t\tLayer: exportGroup,\n\t\tRaster: exportRaster,\n\t\tPath: exportPath,\n\t\tShape: exportShape,\n\t\tCompoundPath: exportCompoundPath,\n\t\tPlacedSymbol: exportPlacedSymbol,\n\t\tPointText: exportText\n\t};\n\n\tfunction applyStyle(item, node, isRoot) {\n\t\tvar attrs = {},\n\t\t\tparent = !isRoot && item.getParent();\n\n\t\tif (item._name != null)\n\t\t\tattrs.id = item._name;\n\n\t\tBase.each(SVGStyles, function(entry) {\n\t\t\tvar get = entry.get,\n\t\t\t\ttype = entry.type,\n\t\t\t\tvalue = item[get]();\n\t\t\tif (entry.exportFilter\n\t\t\t\t\t? entry.exportFilter(item, value)\n\t\t\t\t\t: !parent || !Base.equals(parent[get](), value)) {\n\t\t\t\tif (type === 'color' && value != null) {\n\t\t\t\t\tvar alpha = value.getAlpha();\n\t\t\t\t\tif (alpha < 1)\n\t\t\t\t\t\tattrs[entry.attribute + '-opacity'] = alpha;\n\t\t\t\t}\n\t\t\t\tattrs[entry.attribute] = value == null\n\t\t\t\t\t? 'none'\n\t\t\t\t\t: type === 'number'\n\t\t\t\t\t\t? formatter.number(value)\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? value.gradient\n\t\t\t\t\t\t\t\t? exportGradient(value, item)\n\t\t\t\t\t\t\t\t: value.toCSS(true)\n\t\t\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t\t\t? value.join(',')\n\t\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t\t? entry.toSVG[value]\n\t\t\t\t\t\t\t\t\t: value;\n\t\t\t}\n\t\t});\n\n\t\tif (attrs.opacity === 1)\n\t\t\tdelete attrs.opacity;\n\n\t\tif (!item._visible)\n\t\t\tattrs.visibility = 'hidden';\n\n\t\treturn setAttributes(node, attrs);\n\t}\n\n\tvar definitions;\n\tfunction getDefinition(item, type) {\n\t\tif (!definitions)\n\t\t\tdefinitions = { ids: {}, svgs: {} };\n\t\treturn item && definitions.svgs[type + '-' + item._id];\n\t}\n\n\tfunction setDefinition(item, node, type) {\n\t\tif (!definitions)\n\t\t\tgetDefinition();\n\t\tvar id = definitions.ids[type] = (definitions.ids[type] || 0) + 1;\n\t\tnode.id = type + '-' + id;\n\t\tdefinitions.svgs[type + '-' + item._id] = node;\n\t}\n\n\tfunction exportDefinitions(node, options) {\n\t\tvar svg = node,\n\t\t\tdefs = null;\n\t\tif (definitions) {\n\t\t\tsvg = node.nodeName.toLowerCase() === 'svg' && node;\n\t\t\tfor (var i in definitions.svgs) {\n\t\t\t\tif (!defs) {\n\t\t\t\t\tif (!svg) {\n\t\t\t\t\t\tsvg = createElement('svg');\n\t\t\t\t\t\tsvg.appendChild(node);\n\t\t\t\t\t}\n\t\t\t\t\tdefs = svg.insertBefore(createElement('defs'),\n\t\t\t\t\t\t\tsvg.firstChild);\n\t\t\t\t}\n\t\t\t\tdefs.appendChild(definitions.svgs[i]);\n\t\t\t}\n\t\t\tdefinitions = null;\n\t\t}\n\t\treturn options.asString\n\t\t\t\t? new XMLSerializer().serializeToString(svg)\n\t\t\t\t: svg;\n\t}\n\n\tfunction exportSVG(item, options, isRoot) {\n\t\tvar exporter = exporters[item._class],\n\t\t\tnode = exporter && exporter(item, options);\n\t\tif (node) {\n\t\t\tvar onExport = options.onExport;\n\t\t\tif (onExport)\n\t\t\t\tnode = onExport(item, node, options) || node;\n\t\t\tvar data = JSON.stringify(item._data);\n\t\t\tif (data && data !== '{}' && data !== 'null')\n\t\t\t\tnode.setAttribute('data-paper-data', data);\n\t\t}\n\t\treturn node && applyStyle(item, node, isRoot);\n\t}\n\n\tfunction setOptions(options) {\n\t\tif (!options)\n\t\t\toptions = {};\n\t\tformatter = new Formatter(options.precision);\n\t\treturn options;\n\t}\n\n\tItem.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\treturn exportDefinitions(exportSVG(this, options, true), options);\n\t\t}\n\t});\n\n\tProject.inject({\n\t\texportSVG: function(options) {\n\t\t\toptions = setOptions(options);\n\t\t\tvar layers = this.layers,\n\t\t\t\tview = this.getView(),\n\t\t\t\tsize = view.getViewSize(),\n\t\t\t\tnode = createElement('svg', {\n\t\t\t\t\tx: 0,\n\t\t\t\t\ty: 0,\n\t\t\t\t\twidth: size.width,\n\t\t\t\t\theight: size.height,\n\t\t\t\t\tversion: '1.1',\n\t\t\t\t\txmlns: 'http://www.w3.org/2000/svg',\n\t\t\t\t\t'xmlns:xlink': 'http://www.w3.org/1999/xlink'\n\t\t\t\t}),\n\t\t\t\tparent = node,\n\t\t\t\tmatrix = view._matrix;\n\t\t\tif (!matrix.isIdentity())\n\t\t\t\tparent = node.appendChild(\n\t\t\t\t\t\tcreateElement('g', getTransform(matrix)));\n\t\t\tfor (var i = 0, l = layers.length; i < l; i++)\n\t\t\t\tparent.appendChild(exportSVG(layers[i], options, true));\n\t\t\treturn exportDefinitions(node, options);\n\t\t}\n\t});\n};\n\nnew function() {\n\n\tfunction getValue(node, name, isString, allowNull) {\n\t\tvar namespace = SVGNamespaces[name],\n\t\t\tvalue = namespace\n\t\t\t\t? node.getAttributeNS(namespace, name)\n\t\t\t\t: node.getAttribute(name);\n\t\tif (value === 'null')\n\t\t\tvalue = null;\n\t\treturn value == null\n\t\t\t\t? allowNull\n\t\t\t\t\t? null\n\t\t\t\t\t: isString\n\t\t\t\t\t\t? ''\n\t\t\t\t\t\t: 0\n\t\t\t\t: isString\n\t\t\t\t\t? value\n\t\t\t\t\t: parseFloat(value);\n\t}\n\n\tfunction getPoint(node, x, y, allowNull) {\n\t\tx = getValue(node, x, false, allowNull);\n\t\ty = getValue(node, y, false, allowNull);\n\t\treturn allowNull && (x == null || y == null) ? null\n\t\t\t\t: new Point(x, y);\n\t}\n\n\tfunction getSize(node, w, h, allowNull) {\n\t\tw = getValue(node, w, false, allowNull);\n\t\th = getValue(node, h, false, allowNull);\n\t\treturn allowNull && (w == null || h == null) ? null\n\t\t\t\t: new Size(w, h);\n\t}\n\n\tfunction convertValue(value, type, lookup) {\n\t\treturn value === 'none'\n\t\t\t\t? null\n\t\t\t\t: type === 'number'\n\t\t\t\t\t? parseFloat(value)\n\t\t\t\t\t: type === 'array'\n\t\t\t\t\t\t? value ? value.split(/[\\s,]+/g).map(parseFloat) : []\n\t\t\t\t\t\t: type === 'color'\n\t\t\t\t\t\t\t? getDefinition(value) || value\n\t\t\t\t\t\t\t: type === 'lookup'\n\t\t\t\t\t\t\t\t? lookup[value]\n\t\t\t\t\t\t\t\t: value;\n\t}\n\n\tfunction importGroup(node, type, options, isRoot) {\n\t\tvar nodes = node.childNodes,\n\t\t\tisClip = type === 'clippath',\n\t\t\titem = new Group(),\n\t\t\tproject = item._project,\n\t\t\tcurrentStyle = project._currentStyle,\n\t\t\tchildren = [];\n\t\tif (!isClip) {\n\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tproject._currentStyle = item._style.clone();\n\t\t}\n\t\tif (isRoot) {\n\t\t\tvar defs = node.querySelectorAll('defs');\n\t\t\tfor (var i = 0, l = defs.length; i < l; i++) {\n\t\t\t\timportSVG(defs[i], options, false);\n\t\t\t}\n\t\t}\n\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\tvar childNode = nodes[i],\n\t\t\t\tchild;\n\t\t\tif (childNode.nodeType === 1\n\t\t\t\t\t&& childNode.nodeName.toLowerCase() !== 'defs'\n\t\t\t\t\t&& (child = importSVG(childNode, options, false))\n\t\t\t\t\t&& !(child instanceof Symbol))\n\t\t\t\tchildren.push(child);\n\t\t}\n\t\titem.addChildren(children);\n\t\tif (isClip)\n\t\t\titem = applyAttributes(item.reduce(), node, isRoot);\n\t\tproject._currentStyle = currentStyle;\n\t\tif (isClip || type === 'defs') {\n\t\t\titem.remove();\n\t\t\titem = null;\n\t\t}\n\t\treturn item;\n\t}\n\n\tfunction importPoly(node, type) {\n\t\tvar coords = node.getAttribute('points').match(\n\t\t\t\t\t/[+-]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?/g),\n\t\t\tpoints = [];\n\t\tfor (var i = 0, l = coords.length; i < l; i += 2)\n\t\t\tpoints.push(new Point(\n\t\t\t\t\tparseFloat(coords[i]),\n\t\t\t\t\tparseFloat(coords[i + 1])));\n\t\tvar path = new Path(points);\n\t\tif (type === 'polygon')\n\t\t\tpath.closePath();\n\t\treturn path;\n\t}\n\n\tfunction importPath(node) {\n\t\tvar data = node.getAttribute('d'),\n\t\t\tparam = { pathData: data };\n\t\treturn (data.match(/m/gi) || []).length > 1 || /z\\S+/i.test(data)\n\t\t\t\t? new CompoundPath(param)\n\t\t\t\t: new Path(param);\n\t}\n\n\tfunction importGradient(node, type) {\n\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\tisRadial = type === 'radialgradient',\n\t\t\tgradient;\n\t\tif (id) {\n\t\t\tgradient = definitions[id].getGradient();\n\t\t} else {\n\t\t\tvar nodes = node.childNodes,\n\t\t\t\tstops = [];\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1)\n\t\t\t\t\tstops.push(applyAttributes(new GradientStop(), child));\n\t\t\t}\n\t\t\tgradient = new Gradient(stops, isRadial);\n\t\t}\n\t\tvar origin, destination, highlight;\n\t\tif (isRadial) {\n\t\t\torigin = getPoint(node, 'cx', 'cy');\n\t\t\tdestination = origin.add(getValue(node, 'r'), 0);\n\t\t\thighlight = getPoint(node, 'fx', 'fy', true);\n\t\t} else {\n\t\t\torigin = getPoint(node, 'x1', 'y1');\n\t\t\tdestination = getPoint(node, 'x2', 'y2');\n\t\t}\n\t\tapplyAttributes(\n\t\t\tnew Color(gradient, origin, destination, highlight), node);\n\t\treturn null;\n\t}\n\n\tvar importers = {\n\t\t'#document': function (node, type, options, isRoot) {\n\t\t\tvar nodes = node.childNodes;\n\t\t\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\t\t\tvar child = nodes[i];\n\t\t\t\tif (child.nodeType === 1) {\n\t\t\t\t\tvar next = child.nextSibling;\n\t\t\t\t\tdocument.body.appendChild(child);\n\t\t\t\t\tvar item = importSVG(child, options, isRoot);\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\tnode.insertBefore(child, next);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnode.appendChild(child);\n\t\t\t\t\t}\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tg: importGroup,\n\t\tsvg: importGroup,\n\t\tclippath: importGroup,\n\t\tpolygon: importPoly,\n\t\tpolyline: importPoly,\n\t\tpath: importPath,\n\t\tlineargradient: importGradient,\n\t\tradialgradient: importGradient,\n\n\t\timage: function (node) {\n\t\t\tvar raster = new Raster(getValue(node, 'href', true));\n\t\t\traster.on('load', function() {\n\t\t\t\tvar size = getSize(node, 'width', 'height');\n\t\t\t\tthis.setSize(size);\n\t\t\t\tvar center = this._matrix._transformPoint(\n\t\t\t\t\t\tgetPoint(node, 'x', 'y').add(size.divide(2)));\n\t\t\t\tthis.translate(center);\n\t\t\t});\n\t\t\treturn raster;\n\t\t},\n\n\t\tsymbol: function(node, type, options, isRoot) {\n\t\t\treturn new Symbol(importGroup(node, type, options, isRoot), true);\n\t\t},\n\n\t\tdefs: importGroup,\n\n\t\tuse: function(node) {\n\t\t\tvar id = (getValue(node, 'href', true) || '').substring(1),\n\t\t\t\tdefinition = definitions[id],\n\t\t\t\tpoint = getPoint(node, 'x', 'y');\n\t\t\treturn definition\n\t\t\t\t\t? definition instanceof Symbol\n\t\t\t\t\t\t? definition.place(point)\n\t\t\t\t\t\t: definition.clone().translate(point)\n\t\t\t\t\t: null;\n\t\t},\n\n\t\tcircle: function(node) {\n\t\t\treturn new Shape.Circle(getPoint(node, 'cx', 'cy'),\n\t\t\t\t\tgetValue(node, 'r'));\n\t\t},\n\n\t\tellipse: function(node) {\n\t\t\treturn new Shape.Ellipse({\n\t\t\t\tcenter: getPoint(node, 'cx', 'cy'),\n\t\t\t\tradius: getSize(node, 'rx', 'ry')\n\t\t\t});\n\t\t},\n\n\t\trect: function(node) {\n\t\t\tvar point = getPoint(node, 'x', 'y'),\n\t\t\t\tsize = getSize(node, 'width', 'height'),\n\t\t\t\tradius = getSize(node, 'rx', 'ry');\n\t\t\treturn new Shape.Rectangle(new Rectangle(point, size), radius);\n\t\t},\n\n\t\tline: function(node) {\n\t\t\treturn new Path.Line(getPoint(node, 'x1', 'y1'),\n\t\t\t\t\tgetPoint(node, 'x2', 'y2'));\n\t\t},\n\n\t\ttext: function(node) {\n\t\t\tvar text = new PointText(getPoint(node, 'x', 'y')\n\t\t\t\t\t.add(getPoint(node, 'dx', 'dy')));\n\t\t\ttext.setContent(node.textContent.trim() || '');\n\t\t\treturn text;\n\t\t}\n\t};\n\n\tfunction applyTransform(item, value, name, node) {\n\t\tvar transforms = (node.getAttribute(name) || '').split(/\\)\\s*/g),\n\t\t\tmatrix = new Matrix();\n\t\tfor (var i = 0, l = transforms.length; i < l; i++) {\n\t\t\tvar transform = transforms[i];\n\t\t\tif (!transform)\n\t\t\t\tbreak;\n\t\t\tvar parts = transform.split(/\\(\\s*/),\n\t\t\t\tcommand = parts[0],\n\t\t\t\tv = parts[1].split(/[\\s,]+/g);\n\t\t\tfor (var j = 0, m = v.length; j < m; j++)\n\t\t\t\tv[j] = parseFloat(v[j]);\n\t\t\tswitch (command) {\n\t\t\tcase 'matrix':\n\t\t\t\tmatrix.concatenate(\n\t\t\t\t\t\tnew Matrix(v[0], v[1], v[2], v[3], v[4], v[5]));\n\t\t\t\tbreak;\n\t\t\tcase 'rotate':\n\t\t\t\tmatrix.rotate(v[0], v[1], v[2]);\n\t\t\t\tbreak;\n\t\t\tcase 'translate':\n\t\t\t\tmatrix.translate(v[0], v[1]);\n\t\t\t\tbreak;\n\t\t\tcase 'scale':\n\t\t\t\tmatrix.scale(v);\n\t\t\t\tbreak;\n\t\t\tcase 'skewX':\n\t\t\t\tmatrix.skew(v[0], 0);\n\t\t\t\tbreak;\n\t\t\tcase 'skewY':\n\t\t\t\tmatrix.skew(0, v[0]);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\titem.transform(matrix);\n\t}\n\n\tfunction applyOpacity(item, value, name) {\n\t\tvar color = item[name === 'fill-opacity' ? 'getFillColor'\n\t\t\t\t: 'getStrokeColor']();\n\t\tif (color)\n\t\t\tcolor.setAlpha(parseFloat(value));\n\t}\n\n\tvar attributes = Base.set(Base.each(SVGStyles, function(entry) {\n\t\tthis[entry.attribute] = function(item, value) {\n\t\t\titem[entry.set](convertValue(value, entry.type, entry.fromSVG));\n\t\t\tif (entry.type === 'color' && item instanceof Shape) {\n\t\t\t\tvar color = item[entry.get]();\n\t\t\t\tif (color)\n\t\t\t\t\tcolor.transform(new Matrix().translate(\n\t\t\t\t\t\t\titem.getPosition(true).negate()));\n\t\t\t}\n\t\t};\n\t}, {}), {\n\t\tid: function(item, value) {\n\t\t\tdefinitions[value] = item;\n\t\t\tif (item.setName)\n\t\t\t\titem.setName(value);\n\t\t},\n\n\t\t'clip-path': function(item, value) {\n\t\t\tvar clip = getDefinition(value);\n\t\t\tif (clip) {\n\t\t\t\tclip = clip.clone();\n\t\t\t\tclip.setClipMask(true);\n\t\t\t\tif (item instanceof Group) {\n\t\t\t\t\titem.insertChild(0, clip);\n\t\t\t\t} else {\n\t\t\t\t\treturn new Group(clip, item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgradientTransform: applyTransform,\n\t\ttransform: applyTransform,\n\n\t\t'fill-opacity': applyOpacity,\n\t\t'stroke-opacity': applyOpacity,\n\n\t\tvisibility: function(item, value) {\n\t\t\titem.setVisible(value === 'visible');\n\t\t},\n\n\t\tdisplay: function(item, value) {\n\t\t\titem.setVisible(value !== null);\n\t\t},\n\n\t\t'stop-color': function(item, value) {\n\t\t\tif (item.setColor)\n\t\t\t\titem.setColor(value);\n\t\t},\n\n\t\t'stop-opacity': function(item, value) {\n\t\t\tif (item._color)\n\t\t\t\titem._color.setAlpha(parseFloat(value));\n\t\t},\n\n\t\toffset: function(item, value) {\n\t\t\tvar percentage = value.match(/(.*)%$/);\n\t\t\titem.setRampPoint(percentage\n\t\t\t\t\t? percentage[1] / 100\n\t\t\t\t\t: parseFloat(value));\n\t\t},\n\n\t\tviewBox: function(item, value, name, node, styles) {\n\t\t\tvar rect = new Rectangle(convertValue(value, 'array')),\n\t\t\t\tsize = getSize(node, 'width', 'height', true);\n\t\t\tif (item instanceof Group) {\n\t\t\t\tvar scale = size ? rect.getSize().divide(size) : 1,\n\t\t\t\t\tmatrix = new Matrix().translate(rect.getPoint()).scale(scale);\n\t\t\t\titem.transform(matrix.inverted());\n\t\t\t} else if (item instanceof Symbol) {\n\t\t\t\tif (size)\n\t\t\t\t\trect.setSize(size);\n\t\t\t\tvar clip = getAttribute(node, 'overflow', styles) != 'visible',\n\t\t\t\t\tgroup = item._definition;\n\t\t\t\tif (clip && !rect.contains(group.getBounds())) {\n\t\t\t\t\tclip = new Shape.Rectangle(rect).transform(group._matrix);\n\t\t\t\t\tclip.setClipMask(true);\n\t\t\t\t\tgroup.addChild(clip);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction getAttribute(node, name, styles) {\n\t\tvar attr = node.attributes[name],\n\t\t\tvalue = attr && attr.value;\n\t\tif (!value) {\n\t\t\tvar style = Base.camelize(name);\n\t\t\tvalue = node.style[style];\n\t\t\tif (!value && styles.node[style] !== styles.parent[style])\n\t\t\t\tvalue = styles.node[style];\n\t\t}\n\t\treturn !value\n\t\t\t\t? undefined\n\t\t\t\t: value === 'none'\n\t\t\t\t\t? null\n\t\t\t\t\t: value;\n\t}\n\n\tfunction applyAttributes(item, node, isRoot) {\n\t\tvar styles = {\n\t\t\tnode: DomElement.getStyles(node) || {},\n\t\t\tparent: !isRoot && DomElement.getStyles(node.parentNode) || {}\n\t\t};\n\t\tBase.each(attributes, function(apply, name) {\n\t\t\tvar value = getAttribute(node, name, styles);\n\t\t\tif (value !== undefined)\n\t\t\t\titem = Base.pick(apply(item, value, name, node, styles), item);\n\t\t});\n\t\treturn item;\n\t}\n\n\tvar definitions = {};\n\tfunction getDefinition(value) {\n\t\tvar match = value && value.match(/\\((?:#|)([^)']+)/);\n\t\treturn match && definitions[match[1]];\n\t}\n\n\tfunction importSVG(source, options, isRoot) {\n\t\tif (!source)\n\t\t\treturn null;\n\t\tif (!options) {\n\t\t\toptions = {};\n\t\t} else if (typeof options === 'function') {\n\t\t\toptions = { onLoad: options };\n\t\t}\n\n\t\tvar node = source,\n\t\t\tscope = paper;\n\n\t\tfunction onLoadCallback(svg) {\n\t\t\tpaper = scope;\n\t\t\tvar item = importSVG(svg, options, isRoot),\n\t\t\t\tonLoad = options.onLoad,\n\t\t\t\tview = scope.project && scope.getView();\n\t\t\tif (onLoad)\n\t\t\t\tonLoad.call(this, item);\n\t\t\tview.update();\n\t\t}\n\n\t\tif (isRoot) {\n\t\t\tif (typeof source === 'string' && !/^.*</.test(source)) {\n\t\t\t\tnode = document.getElementById(source);\n\t\t\t\tif (node) {\n\t\t\t\t\tsource = null;\n\t\t\t\t} else {\n\t\t\t\t\treturn Http.request('get', source, onLoadCallback);\n\t\t\t\t}\n\t\t\t} else if (typeof File !== 'undefined' && source instanceof File) {\n\t\t\t\tvar reader = new FileReader();\n\t\t\t\treader.onload = function() {\n\t\t\t\t\tonLoadCallback(reader.result);\n\t\t\t\t};\n\t\t\t\treturn reader.readAsText(source);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof source === 'string')\n\t\t\tnode = new DOMParser().parseFromString(source, 'image/svg+xml');\n\t\tif (!node.nodeName)\n\t\t\tthrow new Error('Unsupported SVG source: ' + source);\n\t\tvar type = node.nodeName.toLowerCase(),\n\t\t\timporter = importers[type],\n\t\t\titem,\n\t\t\tdata = node.getAttribute && node.getAttribute('data-paper-data'),\n\t\t\tsettings = scope.settings,\n\t\t\tapplyMatrix = settings.applyMatrix;\n\t\tsettings.applyMatrix = false;\n\t\titem = importer && importer(node, type, options, isRoot) || null;\n\t\tsettings.applyMatrix = applyMatrix;\n\t\tif (item) {\n\t\t\tif (type !== '#document' && !(item instanceof Group))\n\t\t\t\titem = applyAttributes(item, node, isRoot);\n\t\t\tvar onImport = options.onImport;\n\t\t\tif (onImport)\n\t\t\t\titem = onImport(node, item, options) || item;\n\t\t\tif (options.expandShapes && item instanceof Shape) {\n\t\t\t\titem.remove();\n\t\t\t\titem = item.toPath();\n\t\t\t}\n\t\t\tif (data)\n\t\t\t\titem._data = JSON.parse(data);\n\t\t}\n\t\tif (isRoot) {\n\t\t\tdefinitions = {};\n\t\t\tif (item && Base.pick(options.applyMatrix, applyMatrix))\n\t\t\t\titem.matrix.apply(true, true);\n\t\t}\n\t\treturn item;\n\t}\n\n\tItem.inject({\n\t\timportSVG: function(node, options) {\n\t\t\treturn this.addChild(importSVG(node, options, true));\n\t\t}\n\t});\n\n\tProject.inject({\n\t\timportSVG: function(node, options) {\n\t\t\tthis.activate();\n\t\t\treturn importSVG(node, options, true);\n\t\t}\n\t});\n};\n\nBase.exports.PaperScript = (function() {\n\tvar exports, define,\n\t\tscope = this;\n!function(e,r){return\"object\"==typeof exports&&\"object\"==typeof module?r(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],r):(r(e.acorn||(e.acorn={})),void 0)}(this,function(e){\"use strict\";function r(e){fr=e||{};for(var r in mr)Object.prototype.hasOwnProperty.call(fr,r)||(fr[r]=mr[r]);hr=fr.sourceFile||null}function t(e,r){var t=vr(dr,e);r+=\" (\"+t.line+\":\"+t.column+\")\";var n=new SyntaxError(r);throw n.pos=e,n.loc=t,n.raisedAt=br,n}function n(e){function r(e){if(1==e.length)return t+=\"return str === \"+JSON.stringify(e[0])+\";\";t+=\"switch(str){\";for(var r=0;r<e.length;++r)t+=\"case \"+JSON.stringify(e[r])+\":\";t+=\"return true}return false;\"}e=e.split(\" \");var t=\"\",n=[];e:for(var a=0;a<e.length;++a){for(var o=0;o<n.length;++o)if(n[o][0].length==e[a].length){n[o].push(e[a]);continue e}n.push([e[a]])}if(n.length>3){n.sort(function(e,r){return r.length-e.length}),t+=\"switch(str.length){\";for(var a=0;a<n.length;++a){var i=n[a];t+=\"case \"+i[0].length+\":\",r(i)}t+=\"}\"}else r(e);return new Function(\"str\",t)}function a(){this.line=Ar,this.column=br-Sr}function o(){Ar=1,br=Sr=0,Er=!0,u()}function i(e,r){gr=br,fr.locations&&(kr=new a),wr=e,u(),Cr=r,Er=e.beforeExpr}function s(){var e=fr.onComment&&fr.locations&&new a,r=br,n=dr.indexOf(\"*/\",br+=2);if(-1===n&&t(br-2,\"Unterminated comment\"),br=n+2,fr.locations){Kt.lastIndex=r;for(var o;(o=Kt.exec(dr))&&o.index<br;)++Ar,Sr=o.index+o[0].length}fr.onComment&&fr.onComment(!0,dr.slice(r+2,n),r,br,e,fr.locations&&new a)}function c(){for(var e=br,r=fr.onComment&&fr.locations&&new a,t=dr.charCodeAt(br+=2);pr>br&&10!==t&&13!==t&&8232!==t&&8233!==t;)++br,t=dr.charCodeAt(br);fr.onComment&&fr.onComment(!1,dr.slice(e+2,br),e,br,r,fr.locations&&new a)}function u(){for(;pr>br;){var e=dr.charCodeAt(br);if(32===e)++br;else if(13===e){++br;var r=dr.charCodeAt(br);10===r&&++br,fr.locations&&(++Ar,Sr=br)}else if(10===e||8232===e||8233===e)++br,fr.locations&&(++Ar,Sr=br);else if(e>8&&14>e)++br;else if(47===e){var r=dr.charCodeAt(br+1);if(42===r)s();else{if(47!==r)break;c()}}else if(160===e)++br;else{if(!(e>=5760&&Jt.test(String.fromCharCode(e))))break;++br}}}function l(){var e=dr.charCodeAt(br+1);return e>=48&&57>=e?E(!0):(++br,i(xt))}function f(){var e=dr.charCodeAt(br+1);return Er?(++br,k()):61===e?x(Et,2):x(wt,1)}function d(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Dt,1)}function p(e){var r=dr.charCodeAt(br+1);return r===e?x(124===e?Lt:Ut,2):61===r?x(Et,2):x(124===e?Rt:Tt,1)}function h(){var e=dr.charCodeAt(br+1);return 61===e?x(Et,2):x(Vt,1)}function m(e){var r=dr.charCodeAt(br+1);return r===e?45==r&&62==dr.charCodeAt(br+2)&&Gt.test(dr.slice(Lr,br))?(br+=3,c(),u(),g()):x(St,2):61===r?x(Et,2):x(At,1)}function v(e){var r=dr.charCodeAt(br+1),t=1;return r===e?(t=62===e&&62===dr.charCodeAt(br+2)?3:2,61===dr.charCodeAt(br+t)?x(Et,t+1):x(jt,t)):33==r&&60==e&&45==dr.charCodeAt(br+2)&&45==dr.charCodeAt(br+3)?(br+=4,c(),u(),g()):(61===r&&(t=61===dr.charCodeAt(br+2)?3:2),x(Ot,t))}function b(e){var r=dr.charCodeAt(br+1);return 61===r?x(qt,61===dr.charCodeAt(br+2)?3:2):x(61===e?Ct:It,1)}function y(e){switch(e){case 46:return l();case 40:return++br,i(mt);case 41:return++br,i(vt);case 59:return++br,i(yt);case 44:return++br,i(bt);case 91:return++br,i(ft);case 93:return++br,i(dt);case 123:return++br,i(pt);case 125:return++br,i(ht);case 58:return++br,i(gt);case 63:return++br,i(kt);case 48:var r=dr.charCodeAt(br+1);if(120===r||88===r)return C();case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:return E(!1);case 34:case 39:return A(e);case 47:return f(e);case 37:case 42:return d();case 124:case 38:return p(e);case 94:return h();case 43:case 45:return m(e);case 60:case 62:return v(e);case 61:case 33:return b(e);case 126:return x(It,1)}return!1}function g(e){if(e?br=yr+1:yr=br,fr.locations&&(xr=new a),e)return k();if(br>=pr)return i(Br);var r=dr.charCodeAt(br);if(Qt(r)||92===r)return L();var n=y(r);if(n===!1){var o=String.fromCharCode(r);if(\"\\\\\"===o||$t.test(o))return L();t(br,\"Unexpected character '\"+o+\"'\")}return n}function x(e,r){var t=dr.slice(br,br+r);br+=r,i(e,t)}function k(){for(var e,r,n=\"\",a=br;;){br>=pr&&t(a,\"Unterminated regular expression\");var o=dr.charAt(br);if(Gt.test(o)&&t(a,\"Unterminated regular expression\"),e)e=!1;else{if(\"[\"===o)r=!0;else if(\"]\"===o&&r)r=!1;else if(\"/\"===o&&!r)break;e=\"\\\\\"===o}++br}var n=dr.slice(a,br);++br;var s=I();return s&&!/^[gmsiy]*$/.test(s)&&t(a,\"Invalid regexp flag\"),i(jr,new RegExp(n,s))}function w(e,r){for(var t=br,n=0,a=0,o=null==r?1/0:r;o>a;++a){var i,s=dr.charCodeAt(br);if(i=s>=97?s-97+10:s>=65?s-65+10:s>=48&&57>=s?s-48:1/0,i>=e)break;++br,n=n*e+i}return br===t||null!=r&&br-t!==r?null:n}function C(){br+=2;var e=w(16);return null==e&&t(yr+2,\"Expected hexadecimal number\"),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\"),i(Or,e)}function E(e){var r=br,n=!1,a=48===dr.charCodeAt(br);e||null!==w(10)||t(r,\"Invalid number\"),46===dr.charCodeAt(br)&&(++br,w(10),n=!0);var o=dr.charCodeAt(br);(69===o||101===o)&&(o=dr.charCodeAt(++br),(43===o||45===o)&&++br,null===w(10)&&t(r,\"Invalid number\"),n=!0),Qt(dr.charCodeAt(br))&&t(br,\"Identifier directly after number\");var s,c=dr.slice(r,br);return n?s=parseFloat(c):a&&1!==c.length?/[89]/.test(c)||Tr?t(r,\"Invalid number\"):s=parseInt(c,8):s=parseInt(c,10),i(Or,s)}function A(e){br++;for(var r=\"\";;){br>=pr&&t(yr,\"Unterminated string constant\");var n=dr.charCodeAt(br);if(n===e)return++br,i(Dr,r);if(92===n){n=dr.charCodeAt(++br);var a=/^[0-7]+/.exec(dr.slice(br,br+3));for(a&&(a=a[0]);a&&parseInt(a,8)>255;)a=a.slice(0,a.length-1);if(\"0\"===a&&(a=null),++br,a)Tr&&t(br-2,\"Octal literal in strict mode\"),r+=String.fromCharCode(parseInt(a,8)),br+=a.length-1;else switch(n){case 110:r+=\"\\n\";break;case 114:r+=\"\\r\";break;case 120:r+=String.fromCharCode(S(2));break;case 117:r+=String.fromCharCode(S(4));break;case 85:r+=String.fromCharCode(S(8));break;case 116:r+=\"\t\";break;case 98:r+=\"\\b\";break;case 118:r+=\"\u000b\";break;case 102:r+=\"\\f\";break;case 48:r+=\"\\0\";break;case 13:10===dr.charCodeAt(br)&&++br;case 10:fr.locations&&(Sr=br,++Ar);break;default:r+=String.fromCharCode(n)}}else(13===n||10===n||8232===n||8233===n)&&t(yr,\"Unterminated string constant\"),r+=String.fromCharCode(n),++br}}function S(e){var r=w(16,e);return null===r&&t(yr,\"Bad character escape sequence\"),r}function I(){Bt=!1;for(var e,r=!0,n=br;;){var a=dr.charCodeAt(br);if(Yt(a))Bt&&(e+=dr.charAt(br)),++br;else{if(92!==a)break;Bt||(e=dr.slice(n,br)),Bt=!0,117!=dr.charCodeAt(++br)&&t(br,\"Expecting Unicode escape sequence \\\\uXXXX\"),++br;var o=S(4),i=String.fromCharCode(o);i||t(br-1,\"Invalid Unicode escape\"),(r?Qt(o):Yt(o))||t(br-4,\"Invalid Unicode escape\"),e+=i}r=!1}return Bt?e:dr.slice(n,br)}function L(){var e=I(),r=Fr;return Bt||(Wt(e)?r=lt[e]:(fr.forbidReserved&&(3===fr.ecmaVersion?Mt:zt)(e)||Tr&&Xt(e))&&t(yr,\"The keyword '\"+e+\"' is reserved\")),i(r,e)}function U(){Ir=yr,Lr=gr,Ur=kr,g()}function R(e){if(Tr=e,br=Lr,fr.locations)for(;Sr>br;)Sr=dr.lastIndexOf(\"\\n\",Sr-2)+1,--Ar;u(),g()}function V(){this.type=null,this.start=yr,this.end=null}function T(){this.start=xr,this.end=null,null!==hr&&(this.source=hr)}function q(){var e=new V;return fr.locations&&(e.loc=new T),fr.ranges&&(e.range=[yr,0]),e}function O(e){var r=new V;return r.start=e.start,fr.locations&&(r.loc=new T,r.loc.start=e.loc.start),fr.ranges&&(r.range=[e.range[0],0]),r}function j(e,r){return e.type=r,e.end=Lr,fr.locations&&(e.loc.end=Ur),fr.ranges&&(e.range[1]=Lr),e}function D(e){return fr.ecmaVersion>=5&&\"ExpressionStatement\"===e.type&&\"Literal\"===e.expression.type&&\"use strict\"===e.expression.value}function F(e){return wr===e?(U(),!0):void 0}function B(){return!fr.strictSemicolons&&(wr===Br||wr===ht||Gt.test(dr.slice(Lr,yr)))}function M(){F(yt)||B()||X()}function z(e){wr===e?U():X()}function X(){t(yr,\"Unexpected token\")}function N(e){\"Identifier\"!==e.type&&\"MemberExpression\"!==e.type&&t(e.start,\"Assigning to rvalue\"),Tr&&\"Identifier\"===e.type&&Nt(e.name)&&t(e.start,\"Assigning to \"+e.name+\" in strict mode\")}function W(e){Ir=Lr=br,fr.locations&&(Ur=new a),Rr=Tr=null,Vr=[],g();var r=e||q(),t=!0;for(e||(r.body=[]);wr!==Br;){var n=J();r.body.push(n),t&&D(n)&&R(!0),t=!1}return j(r,\"Program\")}function J(){(wr===wt||wr===Et&&\"/=\"==Cr)&&g(!0);var e=wr,r=q();switch(e){case Mr:case Nr:U();var n=e===Mr;F(yt)||B()?r.label=null:wr!==Fr?X():(r.label=lr(),M());for(var a=0;a<Vr.length;++a){var o=Vr[a];if(null==r.label||o.name===r.label.name){if(null!=o.kind&&(n||\"loop\"===o.kind))break;if(r.label&&n)break}}return a===Vr.length&&t(r.start,\"Unsyntactic \"+e.keyword),j(r,n?\"BreakStatement\":\"ContinueStatement\");case Wr:return U(),M(),j(r,\"DebuggerStatement\");case Pr:return U(),Vr.push(Zt),r.body=J(),Vr.pop(),z(tt),r.test=P(),M(),j(r,\"DoWhileStatement\");case _r:if(U(),Vr.push(Zt),z(mt),wr===yt)return $(r,null);if(wr===rt){var i=q();return U(),G(i,!0),j(i,\"VariableDeclaration\"),1===i.declarations.length&&F(ut)?_(r,i):$(r,i)}var i=K(!1,!0);return F(ut)?(N(i),_(r,i)):$(r,i);case Gr:return U(),cr(r,!0);case Kr:return U(),r.test=P(),r.consequent=J(),r.alternate=F(Hr)?J():null,j(r,\"IfStatement\");case Qr:return Rr||t(yr,\"'return' outside of function\"),U(),F(yt)||B()?r.argument=null:(r.argument=K(),M()),j(r,\"ReturnStatement\");case Yr:U(),r.discriminant=P(),r.cases=[],z(pt),Vr.push(en);for(var s,c;wr!=ht;)if(wr===zr||wr===Jr){var u=wr===zr;s&&j(s,\"SwitchCase\"),r.cases.push(s=q()),s.consequent=[],U(),u?s.test=K():(c&&t(Ir,\"Multiple default clauses\"),c=!0,s.test=null),z(gt)}else s||X(),s.consequent.push(J());return s&&j(s,\"SwitchCase\"),U(),Vr.pop(),j(r,\"SwitchStatement\");case Zr:return U(),Gt.test(dr.slice(Lr,yr))&&t(Lr,\"Illegal newline after throw\"),r.argument=K(),M(),j(r,\"ThrowStatement\");case et:if(U(),r.block=H(),r.handler=null,wr===Xr){var l=q();U(),z(mt),l.param=lr(),Tr&&Nt(l.param.name)&&t(l.param.start,\"Binding \"+l.param.name+\" in strict mode\"),z(vt),l.guard=null,l.body=H(),r.handler=j(l,\"CatchClause\")}return r.guardedHandlers=qr,r.finalizer=F($r)?H():null,r.handler||r.finalizer||t(r.start,\"Missing catch or finally clause\"),j(r,\"TryStatement\");case rt:return U(),G(r),M(),j(r,\"VariableDeclaration\");case tt:return U(),r.test=P(),Vr.push(Zt),r.body=J(),Vr.pop(),j(r,\"WhileStatement\");case nt:return Tr&&t(yr,\"'with' in strict mode\"),U(),r.object=P(),r.body=J(),j(r,\"WithStatement\");case pt:return H();case yt:return U(),j(r,\"EmptyStatement\");default:var f=Cr,d=K();if(e===Fr&&\"Identifier\"===d.type&&F(gt)){for(var a=0;a<Vr.length;++a)Vr[a].name===f&&t(d.start,\"Label '\"+f+\"' is already declared\");var p=wr.isLoop?\"loop\":wr===Yr?\"switch\":null;return Vr.push({name:f,kind:p}),r.body=J(),Vr.pop(),r.label=d,j(r,\"LabeledStatement\")}return r.expression=d,M(),j(r,\"ExpressionStatement\")}}function P(){z(mt);var e=K();return z(vt),e}function H(e){var r,t=q(),n=!0,a=!1;for(t.body=[],z(pt);!F(ht);){var o=J();t.body.push(o),n&&e&&D(o)&&(r=a,R(a=!0)),n=!1}return a&&!r&&R(!1),j(t,\"BlockStatement\")}function $(e,r){return e.init=r,z(yt),e.test=wr===yt?null:K(),z(yt),e.update=wr===vt?null:K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForStatement\")}function _(e,r){return e.left=r,e.right=K(),z(vt),e.body=J(),Vr.pop(),j(e,\"ForInStatement\")}function G(e,r){for(e.declarations=[],e.kind=\"var\";;){var n=q();if(n.id=lr(),Tr&&Nt(n.id.name)&&t(n.id.start,\"Binding \"+n.id.name+\" in strict mode\"),n.init=F(Ct)?K(!0,r):null,e.declarations.push(j(n,\"VariableDeclarator\")),!F(bt))break}return e}function K(e,r){var t=Q(r);if(!e&&wr===bt){var n=O(t);for(n.expressions=[t];F(bt);)n.expressions.push(Q(r));return j(n,\"SequenceExpression\")}return t}function Q(e){var r=Y(e);if(wr.isAssign){var t=O(r);return t.operator=Cr,t.left=r,U(),t.right=Q(e),N(r),j(t,\"AssignmentExpression\")}return r}function Y(e){var r=Z(e);if(F(kt)){var t=O(r);return t.test=r,t.consequent=K(!0),z(gt),t.alternate=K(!0,e),j(t,\"ConditionalExpression\")}return r}function Z(e){return er(rr(),-1,e)}function er(e,r,t){var n=wr.binop;if(null!=n&&(!t||wr!==ut)&&n>r){var a=O(e);a.left=e,a.operator=Cr,U(),a.right=er(rr(),n,t);var o=j(a,/&&|\\|\\|/.test(a.operator)?\"LogicalExpression\":\"BinaryExpression\");return er(o,r,t)}return e}function rr(){if(wr.prefix){var e=q(),r=wr.isUpdate;return e.operator=Cr,e.prefix=!0,Er=!0,U(),e.argument=rr(),r?N(e.argument):Tr&&\"delete\"===e.operator&&\"Identifier\"===e.argument.type&&t(e.start,\"Deleting local variable in strict mode\"),j(e,r?\"UpdateExpression\":\"UnaryExpression\")}for(var n=tr();wr.postfix&&!B();){var e=O(n);e.operator=Cr,e.prefix=!1,e.argument=n,N(n),U(),n=j(e,\"UpdateExpression\")}return n}function tr(){return nr(ar())}function nr(e,r){if(F(xt)){var t=O(e);return t.object=e,t.property=lr(!0),t.computed=!1,nr(j(t,\"MemberExpression\"),r)}if(F(ft)){var t=O(e);return t.object=e,t.property=K(),t.computed=!0,z(dt),nr(j(t,\"MemberExpression\"),r)}if(!r&&F(mt)){var t=O(e);return t.callee=e,t.arguments=ur(vt,!1),nr(j(t,\"CallExpression\"),r)}return e}function ar(){switch(wr){case ot:var e=q();return U(),j(e,\"ThisExpression\");case Fr:return lr();case Or:case Dr:case jr:var e=q();return e.value=Cr,e.raw=dr.slice(yr,gr),U(),j(e,\"Literal\");case it:case st:case ct:var e=q();return e.value=wr.atomValue,e.raw=wr.keyword,U(),j(e,\"Literal\");case mt:var r=xr,t=yr;U();var n=K();return n.start=t,n.end=gr,fr.locations&&(n.loc.start=r,n.loc.end=kr),fr.ranges&&(n.range=[t,gr]),z(vt),n;case ft:var e=q();return U(),e.elements=ur(dt,!0,!0),j(e,\"ArrayExpression\");case pt:return ir();case Gr:var e=q();return U(),cr(e,!1);case at:return or();default:X()}}function or(){var e=q();return U(),e.callee=nr(ar(),!0),e.arguments=F(mt)?ur(vt,!1):qr,j(e,\"NewExpression\")}function ir(){var e=q(),r=!0,n=!1;for(e.properties=[],U();!F(ht);){if(r)r=!1;else if(z(bt),fr.allowTrailingCommas&&F(ht))break;var a,o={key:sr()},i=!1;if(F(gt)?(o.value=K(!0),a=o.kind=\"init\"):fr.ecmaVersion>=5&&\"Identifier\"===o.key.type&&(\"get\"===o.key.name||\"set\"===o.key.name)?(i=n=!0,a=o.kind=o.key.name,o.key=sr(),wr!==mt&&X(),o.value=cr(q(),!1)):X(),\"Identifier\"===o.key.type&&(Tr||n))for(var s=0;s<e.properties.length;++s){var c=e.properties[s];if(c.key.name===o.key.name){var u=a==c.kind||i&&\"init\"===c.kind||\"init\"===a&&(\"get\"===c.kind||\"set\"===c.kind);u&&!Tr&&\"init\"===a&&\"init\"===c.kind&&(u=!1),u&&t(o.key.start,\"Redefinition of property\")}}e.properties.push(o)}return j(e,\"ObjectExpression\")}function sr(){return wr===Or||wr===Dr?ar():lr(!0)}function cr(e,r){wr===Fr?e.id=lr():r?X():e.id=null,e.params=[];var n=!0;for(z(mt);!F(vt);)n?n=!1:z(bt),e.params.push(lr());var a=Rr,o=Vr;if(Rr=!0,Vr=[],e.body=H(!0),Rr=a,Vr=o,Tr||e.body.body.length&&D(e.body.body[0]))for(var i=e.id?-1:0;i<e.params.length;++i){var s=0>i?e.id:e.params[i];if((Xt(s.name)||Nt(s.name))&&t(s.start,\"Defining '\"+s.name+\"' in strict mode\"),i>=0)for(var c=0;i>c;++c)s.name===e.params[c].name&&t(s.start,\"Argument name clash in strict mode\")}return j(e,r?\"FunctionDeclaration\":\"FunctionExpression\")}function ur(e,r,t){for(var n=[],a=!0;!F(e);){if(a)a=!1;else if(z(bt),r&&fr.allowTrailingCommas&&F(e))break;t&&wr===bt?n.push(null):n.push(K(!0))}return n}function lr(e){var r=q();return r.name=wr===Fr?Cr:e&&!fr.forbidReserved&&wr.keyword||X(),Er=!1,U(),j(r,\"Identifier\")}e.version=\"0.4.0\";var fr,dr,pr,hr;e.parse=function(e,t){return dr=String(e),pr=dr.length,r(t),o(),W(fr.program)};var mr=e.defaultOptions={ecmaVersion:5,strictSemicolons:!1,allowTrailingCommas:!0,forbidReserved:!1,locations:!1,onComment:null,ranges:!1,program:null,sourceFile:null},vr=e.getLineInfo=function(e,r){for(var t=1,n=0;;){Kt.lastIndex=n;var a=Kt.exec(e);if(!(a&&a.index<r))break;++t,n=a.index+a[0].length}return{line:t,column:r-n}};e.tokenize=function(e,t){function n(e){return g(e),a.start=yr,a.end=gr,a.startLoc=xr,a.endLoc=kr,a.type=wr,a.value=Cr,a}dr=String(e),pr=dr.length,r(t),o();var a={};return n.jumpTo=function(e,r){if(br=e,fr.locations){Ar=1,Sr=Kt.lastIndex=0;for(var t;(t=Kt.exec(dr))&&t.index<e;)++Ar,Sr=t.index+t[0].length}Er=r,u()},n};var br,yr,gr,xr,kr,wr,Cr,Er,Ar,Sr,Ir,Lr,Ur,Rr,Vr,Tr,qr=[],Or={type:\"num\"},jr={type:\"regexp\"},Dr={type:\"string\"},Fr={type:\"name\"},Br={type:\"eof\"},Mr={keyword:\"break\"},zr={keyword:\"case\",beforeExpr:!0},Xr={keyword:\"catch\"},Nr={keyword:\"continue\"},Wr={keyword:\"debugger\"},Jr={keyword:\"default\"},Pr={keyword:\"do\",isLoop:!0},Hr={keyword:\"else\",beforeExpr:!0},$r={keyword:\"finally\"},_r={keyword:\"for\",isLoop:!0},Gr={keyword:\"function\"},Kr={keyword:\"if\"},Qr={keyword:\"return\",beforeExpr:!0},Yr={keyword:\"switch\"},Zr={keyword:\"throw\",beforeExpr:!0},et={keyword:\"try\"},rt={keyword:\"var\"},tt={keyword:\"while\",isLoop:!0},nt={keyword:\"with\"},at={keyword:\"new\",beforeExpr:!0},ot={keyword:\"this\"},it={keyword:\"null\",atomValue:null},st={keyword:\"true\",atomValue:!0},ct={keyword:\"false\",atomValue:!1},ut={keyword:\"in\",binop:7,beforeExpr:!0},lt={\"break\":Mr,\"case\":zr,\"catch\":Xr,\"continue\":Nr,\"debugger\":Wr,\"default\":Jr,\"do\":Pr,\"else\":Hr,\"finally\":$r,\"for\":_r,\"function\":Gr,\"if\":Kr,\"return\":Qr,\"switch\":Yr,\"throw\":Zr,\"try\":et,\"var\":rt,\"while\":tt,\"with\":nt,\"null\":it,\"true\":st,\"false\":ct,\"new\":at,\"in\":ut,\"instanceof\":{keyword:\"instanceof\",binop:7,beforeExpr:!0},\"this\":ot,\"typeof\":{keyword:\"typeof\",prefix:!0,beforeExpr:!0},\"void\":{keyword:\"void\",prefix:!0,beforeExpr:!0},\"delete\":{keyword:\"delete\",prefix:!0,beforeExpr:!0}},ft={type:\"[\",beforeExpr:!0},dt={type:\"]\"},pt={type:\"{\",beforeExpr:!0},ht={type:\"}\"},mt={type:\"(\",beforeExpr:!0},vt={type:\")\"},bt={type:\",\",beforeExpr:!0},yt={type:\";\",beforeExpr:!0},gt={type:\":\",beforeExpr:!0},xt={type:\".\"},kt={type:\"?\",beforeExpr:!0},wt={binop:10,beforeExpr:!0},Ct={isAssign:!0,beforeExpr:!0},Et={isAssign:!0,beforeExpr:!0},At={binop:9,prefix:!0,beforeExpr:!0},St={postfix:!0,prefix:!0,isUpdate:!0},It={prefix:!0,beforeExpr:!0},Lt={binop:1,beforeExpr:!0},Ut={binop:2,beforeExpr:!0},Rt={binop:3,beforeExpr:!0},Vt={binop:4,beforeExpr:!0},Tt={binop:5,beforeExpr:!0},qt={binop:6,beforeExpr:!0},Ot={binop:7,beforeExpr:!0},jt={binop:8,beforeExpr:!0},Dt={binop:10,beforeExpr:!0};e.tokTypes={bracketL:ft,bracketR:dt,braceL:pt,braceR:ht,parenL:mt,parenR:vt,comma:bt,semi:yt,colon:gt,dot:xt,question:kt,slash:wt,eq:Ct,name:Fr,eof:Br,num:Or,regexp:jr,string:Dr};for(var Ft in lt)e.tokTypes[\"_\"+Ft]=lt[Ft];var Bt,Mt=n(\"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\"),zt=n(\"class enum extends super const export import\"),Xt=n(\"implements interface let package private protected public static yield\"),Nt=n(\"eval arguments\"),Wt=n(\"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\"),Jt=/[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/,Pt=\"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u0527\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05d0-\\u05ea\\u05f0-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u08a0\\u08a2-\\u08ac\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0977\\u0979-\\u097f\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c33\\u0c35-\\u0c39\\u0c3d\\u0c58\\u0c59\\u0c60\\u0c61\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d60\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f4\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f0\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1877\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191c\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19c1-\\u19c7\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312d\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua697\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua78e\\ua790-\\ua793\\ua7a0-\\ua7aa\\ua7f8-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa80-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uabc0-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\",Ht=\"\\u0300-\\u036f\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u0620-\\u0649\\u0672-\\u06d3\\u06e7-\\u06e8\\u06fb-\\u06fc\\u0730-\\u074a\\u0800-\\u0814\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0840-\\u0857\\u08e4-\\u08fe\\u0900-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962-\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09d7\\u09df-\\u09e0\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2-\\u0ae3\\u0ae6-\\u0aef\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b5f-\\u0b60\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c01-\\u0c03\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62-\\u0c63\\u0c66-\\u0c6f\\u0c82\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2-\\u0ce3\\u0ce6-\\u0cef\\u0d02\\u0d03\\u0d46-\\u0d48\\u0d57\\u0d62-\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0df2\\u0df3\\u0e34-\\u0e3a\\u0e40-\\u0e45\\u0e50-\\u0e59\\u0eb4-\\u0eb9\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f41-\\u0f47\\u0f71-\\u0f84\\u0f86-\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1029\\u1040-\\u1049\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u170e-\\u1710\\u1720-\\u1730\\u1740-\\u1750\\u1772\\u1773\\u1780-\\u17b2\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u1920-\\u192b\\u1930-\\u193b\\u1951-\\u196d\\u19b0-\\u19c0\\u19c8-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a15\\u1a20-\\u1a53\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1b46-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c00-\\u1c22\\u1c40-\\u1c49\\u1c5b-\\u1c7d\\u1cd0-\\u1cd2\\u1d00-\\u1dbe\\u1e01-\\u1f15\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2d81-\\u2d96\\u2de0-\\u2dff\\u3021-\\u3028\\u3099\\u309a\\ua640-\\ua66d\\ua674-\\ua67d\\ua69f\\ua6f0-\\ua6f1\\ua7f8-\\ua800\\ua806\\ua80b\\ua823-\\ua827\\ua880-\\ua881\\ua8b4-\\ua8c4\\ua8d0-\\ua8d9\\ua8f3-\\ua8f7\\ua900-\\ua909\\ua926-\\ua92d\\ua930-\\ua945\\ua980-\\ua983\\ua9b3-\\ua9c0\\uaa00-\\uaa27\\uaa40-\\uaa41\\uaa4c-\\uaa4d\\uaa50-\\uaa59\\uaa7b\\uaae0-\\uaae9\\uaaf2-\\uaaf3\\uabc0-\\uabe1\\uabec\\uabed\\uabf0-\\uabf9\\ufb20-\\ufb28\\ufe00-\\ufe0f\\ufe20-\\ufe26\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\",$t=new RegExp(\"[\"+Pt+\"]\"),_t=new RegExp(\"[\"+Pt+Ht+\"]\"),Gt=/[\\n\\r\\u2028\\u2029]/,Kt=/\\r\\n|[\\n\\r\\u2028\\u2029]/g,Qt=e.isIdentifierStart=function(e){return 65>e?36===e:91>e?!0:97>e?95===e:123>e?!0:e>=170&&$t.test(String.fromCharCode(e))},Yt=e.isIdentifierChar=function(e){return 48>e?36===e:58>e?!0:65>e?!1:91>e?!0:97>e?95===e:123>e?!0:e>=170&&_t.test(String.fromCharCode(e))},Zt={kind:\"loop\"},en={kind:\"switch\"}});\n\n\tvar binaryOperators = {\n\t\t'+': '__add',\n\t\t'-': '__subtract',\n\t\t'*': '__multiply',\n\t\t'/': '__divide',\n\t\t'%': '__modulo',\n\t\t'==': 'equals',\n\t\t'!=': 'equals'\n\t};\n\n\tvar unaryOperators = {\n\t\t'-': '__negate',\n\t\t'+': null\n\t};\n\n\tvar fields = Base.each(\n\t\t['add', 'subtract', 'multiply', 'divide', 'modulo', 'negate'],\n\t\tfunction(name) {\n\t\t\tthis['__' + name] = '#' + name;\n\t\t},\n\t\t{}\n\t);\n\tPoint.inject(fields);\n\tSize.inject(fields);\n\tColor.inject(fields);\n\n\tfunction __$__(left, operator, right) {\n\t\tvar handler = binaryOperators[operator];\n\t\tif (left && left[handler]) {\n\t\t\tvar res = left[handler](right);\n\t\t\treturn operator === '!=' ? !res : res;\n\t\t}\n\t\tswitch (operator) {\n\t\tcase '+': return left + right;\n\t\tcase '-': return left - right;\n\t\tcase '*': return left * right;\n\t\tcase '/': return left / right;\n\t\tcase '%': return left % right;\n\t\tcase '==': return left == right;\n\t\tcase '!=': return left != right;\n\t\t}\n\t}\n\n\tfunction $__(operator, value) {\n\t\tvar handler = unaryOperators[operator];\n\t\tif (handler && value && value[handler])\n\t\t\treturn value[handler]();\n\t\tswitch (operator) {\n\t\tcase '+': return +value;\n\t\tcase '-': return -value;\n\t\t}\n\t}\n\n\tfunction parse(code, options) {\n\t\treturn scope.acorn.parse(code, options);\n\t}\n\n\tfunction compile(code, url, options) {\n\t\tif (!code)\n\t\t\treturn '';\n\t\toptions = options || {};\n\t\turl = url || '';\n\n\t\tvar insertions = [];\n\n\t\tfunction getOffset(offset) {\n\t\t\tfor (var i = 0, l = insertions.length; i < l; i++) {\n\t\t\t\tvar insertion = insertions[i];\n\t\t\t\tif (insertion[0] >= offset)\n\t\t\t\t\tbreak;\n\t\t\t\toffset += insertion[1];\n\t\t\t}\n\t\t\treturn offset;\n\t\t}\n\n\t\tfunction getCode(node) {\n\t\t\treturn code.substring(getOffset(node.range[0]),\n\t\t\t\t\tgetOffset(node.range[1]));\n\t\t}\n\n\t\tfunction getBetween(left, right) {\n\t\t\treturn code.substring(getOffset(left.range[1]),\n\t\t\t\t\tgetOffset(right.range[0]));\n\t\t}\n\n\t\tfunction replaceCode(node, str) {\n\t\t\tvar start = getOffset(node.range[0]),\n\t\t\t\tend = getOffset(node.range[1]),\n\t\t\t\tinsert = 0;\n\t\t\tfor (var i = insertions.length - 1; i >= 0; i--) {\n\t\t\t\tif (start > insertions[i][0]) {\n\t\t\t\t\tinsert = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tinsertions.splice(insert, 0, [start, str.length - end + start]);\n\t\t\tcode = code.substring(0, start) + str + code.substring(end);\n\t\t}\n\n\t\tfunction walkAST(node, parent) {\n\t\t\tif (!node)\n\t\t\t\treturn;\n\t\t\tfor (var key in node) {\n\t\t\t\tif (key === 'range' || key === 'loc')\n\t\t\t\t\tcontinue;\n\t\t\t\tvar value = node[key];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (var i = 0, l = value.length; i < l; i++)\n\t\t\t\t\t\twalkAST(value[i], node);\n\t\t\t\t} else if (value && typeof value === 'object') {\n\t\t\t\t\twalkAST(value, node);\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch (node.type) {\n\t\t\tcase 'UnaryExpression':\n\t\t\t\tif (node.operator in unaryOperators\n\t\t\t\t\t\t&& node.argument.type !== 'Literal') {\n\t\t\t\t\tvar arg = getCode(node.argument);\n\t\t\t\t\treplaceCode(node, '$__(\"' + node.operator + '\", '\n\t\t\t\t\t\t\t+ arg + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'BinaryExpression':\n\t\t\t\tif (node.operator in binaryOperators\n\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\tright = getCode(node.right),\n\t\t\t\t\t\tbetween = getBetween(node.left, node.right),\n\t\t\t\t\t\toperator = node.operator;\n\t\t\t\t\treplaceCode(node, '__$__(' + left + ','\n\t\t\t\t\t\t\t+ between.replace(new RegExp('\\\\' + operator),\n\t\t\t\t\t\t\t\t'\"' + operator + '\"')\n\t\t\t\t\t\t\t+ ', ' + right + ')');\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'UpdateExpression':\n\t\t\tcase 'AssignmentExpression':\n\t\t\t\tvar parentType = parent && parent.type;\n\t\t\t\tif (!(\n\t\t\t\t\t\tparentType === 'ForStatement'\n\t\t\t\t\t\t|| parentType === 'BinaryExpression'\n\t\t\t\t\t\t\t&& /^[=!<>]/.test(parent.operator)\n\t\t\t\t\t\t|| parentType === 'MemberExpression' && parent.computed\n\t\t\t\t)) {\n\t\t\t\t\tif (node.type === 'UpdateExpression') {\n\t\t\t\t\t\tvar arg = getCode(node.argument),\n\t\t\t\t\t\t\texp = '__$__(' + arg + ', \"' + node.operator[0]\n\t\t\t\t\t\t\t\t\t+ '\", 1)',\n\t\t\t\t\t\t\tstr = arg + ' = ' + exp;\n\t\t\t\t\t\tif (!node.prefix\n\t\t\t\t\t\t\t\t&& (parentType === 'AssignmentExpression'\n\t\t\t\t\t\t\t\t\t|| parentType === 'VariableDeclarator')) {\n\t\t\t\t\t\t\tif (getCode(parent.left || parent.id) === arg)\n\t\t\t\t\t\t\t\tstr = exp;\n\t\t\t\t\t\t\tstr = arg + '; ' + str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treplaceCode(node, str);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (/^.=$/.test(node.operator)\n\t\t\t\t\t\t\t\t&& node.left.type !== 'Literal') {\n\t\t\t\t\t\t\tvar left = getCode(node.left),\n\t\t\t\t\t\t\t\tright = getCode(node.right);\n\t\t\t\t\t\t\treplaceCode(node, left + ' = __$__(' + left + ', \"'\n\t\t\t\t\t\t\t\t\t+ node.operator[0] + '\", ' + right + ')');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar sourceMap = null,\n\t\t\tbrowser = paper.browser,\n\t\t\tversion = browser.versionNumber,\n\t\t\tlineBreaks = /\\r\\n|\\n|\\r/mg;\n\t\tif (browser.chrome && version >= 30\n\t\t\t\t|| browser.webkit && version >= 537.76\n\t\t\t\t|| browser.firefox && version >= 23) {\n\t\t\tvar offset = 0;\n\t\t\tif (window.location.href.indexOf(url) === 0) {\n\t\t\t\tvar html = document.getElementsByTagName('html')[0].innerHTML;\n\t\t\t\toffset = html.substr(0, html.indexOf(code) + 1).match(\n\t\t\t\t\t\tlineBreaks).length + 1;\n\t\t\t}\n\t\t\tvar mappings = ['AAAA'];\n\t\t\tmappings.length = (code.match(lineBreaks) || []).length + 1 + offset;\n\t\t\tsourceMap = {\n\t\t\t\tversion: 3,\n\t\t\t\tfile: url,\n\t\t\t\tnames:[],\n\t\t\t\tmappings: mappings.join(';AACA'),\n\t\t\t\tsourceRoot: '',\n\t\t\t\tsources: [url]\n\t\t\t};\n\t\t\tvar source = options.source || !url && code;\n\t\t\tif (source)\n\t\t\t\tsourceMap.sourcesContent = [source];\n\t\t}\n\t\twalkAST(parse(code, { ranges: true }));\n\t\tif (sourceMap) {\n\t\t\tcode = new Array(offset + 1).join('\\n') + code\n\t\t\t\t\t+ \"\\n//# sourceMappingURL=data:application/json;base64,\"\n\t\t\t\t\t+ (btoa(unescape(encodeURIComponent(\n\t\t\t\t\t\tJSON.stringify(sourceMap)))))\n\t\t\t\t\t+ \"\\n//# sourceURL=\" + (url || 'paperscript');\n\t\t}\n\t\treturn code;\n\t}\n\n\tfunction execute(code, scope, url, options) {\n\t\tpaper = scope;\n\t\tvar view = scope.getView(),\n\t\t\ttool = /\\s+on(?:Key|Mouse)(?:Up|Down|Move|Drag)\\b/.test(code)\n\t\t\t\t\t? new Tool()\n\t\t\t\t\t: null,\n\t\t\ttoolHandlers = tool ? tool._events : [],\n\t\t\thandlers = ['onFrame', 'onResize'].concat(toolHandlers),\n\t\t\tparams = [],\n\t\t\targs = [],\n\t\t\tfunc;\n\t\tcode = compile(code, url, options);\n\t\tfunction expose(scope, hidden) {\n\t\t\tfor (var key in scope) {\n\t\t\t\tif ((hidden || !/^_/.test(key)) && new RegExp('([\\\\b\\\\s\\\\W]|^)'\n\t\t\t\t\t\t+ key.replace(/\\$/g, '\\\\$') + '\\\\b').test(code)) {\n\t\t\t\t\tparams.push(key);\n\t\t\t\t\targs.push(scope[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\texpose({ __$__: __$__, $__: $__, paper: scope, view: view, tool: tool },\n\t\t\t\ttrue);\n\t\texpose(scope);\n\t\thandlers = Base.each(handlers, function(key) {\n\t\t\tif (new RegExp('\\\\s+' + key + '\\\\b').test(code)) {\n\t\t\t\tparams.push(key);\n\t\t\t\tthis.push(key + ': ' + key);\n\t\t\t}\n\t\t}, []).join(', ');\n\t\tif (handlers)\n\t\t\tcode += '\\nreturn { ' + handlers + ' };';\n\t\tvar browser = paper.browser;\n\t\tif (browser.chrome || browser.firefox) {\n\t\t\tvar script = document.createElement('script'),\n\t\t\t\thead = document.head || document.getElementsByTagName('head')[0];\n\t\t\tif (browser.firefox)\n\t\t\t\tcode = '\\n' + code;\n\t\t\tscript.appendChild(document.createTextNode(\n\t\t\t\t'paper._execute = function(' + params + ') {' + code + '\\n}'\n\t\t\t));\n\t\t\thead.appendChild(script);\n\t\t\tfunc = paper._execute;\n\t\t\tdelete paper._execute;\n\t\t\thead.removeChild(script);\n\t\t} else {\n\t\t\tfunc = Function(params, code);\n\t\t}\n\t\tvar res = func.apply(scope, args) || {};\n\t\tBase.each(toolHandlers, function(key) {\n\t\t\tvar value = res[key];\n\t\t\tif (value)\n\t\t\t\ttool[key] = value;\n\t\t});\n\t\tif (view) {\n\t\t\tif (res.onResize)\n\t\t\t\tview.setOnResize(res.onResize);\n\t\t\tview.emit('resize', {\n\t\t\t\tsize: view.size,\n\t\t\t\tdelta: new Point()\n\t\t\t});\n\t\t\tif (res.onFrame)\n\t\t\t\tview.setOnFrame(res.onFrame);\n\t\t\tview.update();\n\t\t}\n\t}\n\n\tfunction loadScript(script) {\n\t\tif (/^text\\/(?:x-|)paperscript$/.test(script.type)\n\t\t\t\t&& PaperScope.getAttribute(script, 'ignore') !== 'true') {\n\t\t\tvar canvasId = PaperScope.getAttribute(script, 'canvas'),\n\t\t\t\tcanvas = document.getElementById(canvasId),\n\t\t\t\tsrc = script.src || script.getAttribute('data-src'),\n\t\t\t\tasync = PaperScope.hasAttribute(script, 'async'),\n\t\t\t\tscopeAttribute = 'data-paper-scope';\n\t\t\tif (!canvas)\n\t\t\t\tthrow new Error('Unable to find canvas with id \"'\n\t\t\t\t\t\t+ canvasId + '\"');\n\t\t\tvar scope = PaperScope.get(canvas.getAttribute(scopeAttribute))\n\t\t\t\t\t\t|| new PaperScope().setup(canvas);\n\t\t\tcanvas.setAttribute(scopeAttribute, scope._id);\n\t\t\tif (src) {\n\t\t\t\tHttp.request('get', src, function(code) {\n\t\t\t\t\texecute(code, scope, src);\n\t\t\t\t}, async);\n\t\t\t} else {\n\t\t\t\texecute(script.innerHTML, scope, script.baseURI);\n\t\t\t}\n\t\t\tscript.setAttribute('data-paper-ignore', 'true');\n\t\t\treturn scope;\n\t\t}\n\t}\n\n\tfunction loadAll() {\n\t\tBase.each(document.getElementsByTagName('script'), loadScript);\n\t}\n\n\tfunction load(script) {\n\t\treturn script ? loadScript(script) : loadAll();\n\t}\n\n\tif (document.readyState === 'complete') {\n\t\tsetTimeout(loadAll);\n\t} else {\n\t\tDomEvent.add(window, { load: loadAll });\n\t}\n\n\treturn {\n\t\tcompile: compile,\n\t\texecute: execute,\n\t\tload: load,\n\t\tparse: parse\n\t};\n\n}).call(this);\n\npaper = new (PaperScope.inject(Base.exports, {\n\tenumerable: true,\n\tBase: Base,\n\tNumerical: Numerical,\n\tKey: Key\n}))();\n\nif (typeof define === 'function' && define.amd) {\n\tdefine('paper', paper);\n} else if (typeof module === 'object' && module) {\n\tmodule.exports = paper;\n}\n\nreturn paper;\n};\n","/* ========================================================================\n * Bootstrap: transition.js v3.3.5\n * http://getbootstrap.com/javascript/#transitions\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)\n  // ============================================================\n\n  function transitionEnd() {\n    var el = document.createElement('bootstrap')\n\n    var transEndEventNames = {\n      WebkitTransition : 'webkitTransitionEnd',\n      MozTransition    : 'transitionend',\n      OTransition      : 'oTransitionEnd otransitionend',\n      transition       : 'transitionend'\n    }\n\n    for (var name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return { end: transEndEventNames[name] }\n      }\n    }\n\n    return false // explicit for ie8 (  ._.)\n  }\n\n  // http://blog.alexmaccaw.com/css-transitions\n  $.fn.emulateTransitionEnd = function (duration) {\n    var called = false\n    var $el = this\n    $(this).one('bsTransitionEnd', function () { called = true })\n    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }\n    setTimeout(callback, duration)\n    return this\n  }\n\n  $(function () {\n    $.support.transition = transitionEnd()\n\n    if (!$.support.transition) return\n\n    $.event.special.bsTransitionEnd = {\n      bindType: $.support.transition.end,\n      delegateType: $.support.transition.end,\n      handle: function (e) {\n        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\n      }\n    }\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: alert.js v3.3.5\n * http://getbootstrap.com/javascript/#alerts\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // ALERT CLASS DEFINITION\n  // ======================\n\n  var dismiss = '[data-dismiss=\"alert\"]'\n  var Alert   = function (el) {\n    $(el).on('click', dismiss, this.close)\n  }\n\n  Alert.VERSION = '3.3.5'\n\n  Alert.TRANSITION_DURATION = 150\n\n  Alert.prototype.close = function (e) {\n    var $this    = $(this)\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = $(selector)\n\n    if (e) e.preventDefault()\n\n    if (!$parent.length) {\n      $parent = $this.closest('.alert')\n    }\n\n    $parent.trigger(e = $.Event('close.bs.alert'))\n\n    if (e.isDefaultPrevented()) return\n\n    $parent.removeClass('in')\n\n    function removeElement() {\n      // detach from parent, fire event then clean up data\n      $parent.detach().trigger('closed.bs.alert').remove()\n    }\n\n    $.support.transition && $parent.hasClass('fade') ?\n      $parent\n        .one('bsTransitionEnd', removeElement)\n        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :\n      removeElement()\n  }\n\n\n  // ALERT PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.alert')\n\n      if (!data) $this.data('bs.alert', (data = new Alert(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.alert\n\n  $.fn.alert             = Plugin\n  $.fn.alert.Constructor = Alert\n\n\n  // ALERT NO CONFLICT\n  // =================\n\n  $.fn.alert.noConflict = function () {\n    $.fn.alert = old\n    return this\n  }\n\n\n  // ALERT DATA-API\n  // ==============\n\n  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: button.js v3.3.5\n * http://getbootstrap.com/javascript/#buttons\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // BUTTON PUBLIC CLASS DEFINITION\n  // ==============================\n\n  var Button = function (element, options) {\n    this.$element  = $(element)\n    this.options   = $.extend({}, Button.DEFAULTS, options)\n    this.isLoading = false\n  }\n\n  Button.VERSION  = '3.3.5'\n\n  Button.DEFAULTS = {\n    loadingText: 'loading...'\n  }\n\n  Button.prototype.setState = function (state) {\n    var d    = 'disabled'\n    var $el  = this.$element\n    var val  = $el.is('input') ? 'val' : 'html'\n    var data = $el.data()\n\n    state += 'Text'\n\n    if (data.resetText == null) $el.data('resetText', $el[val]())\n\n    // push to event loop to allow forms to submit\n    setTimeout($.proxy(function () {\n      $el[val](data[state] == null ? this.options[state] : data[state])\n\n      if (state == 'loadingText') {\n        this.isLoading = true\n        $el.addClass(d).attr(d, d)\n      } else if (this.isLoading) {\n        this.isLoading = false\n        $el.removeClass(d).removeAttr(d)\n      }\n    }, this), 0)\n  }\n\n  Button.prototype.toggle = function () {\n    var changed = true\n    var $parent = this.$element.closest('[data-toggle=\"buttons\"]')\n\n    if ($parent.length) {\n      var $input = this.$element.find('input')\n      if ($input.prop('type') == 'radio') {\n        if ($input.prop('checked')) changed = false\n        $parent.find('.active').removeClass('active')\n        this.$element.addClass('active')\n      } else if ($input.prop('type') == 'checkbox') {\n        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false\n        this.$element.toggleClass('active')\n      }\n      $input.prop('checked', this.$element.hasClass('active'))\n      if (changed) $input.trigger('change')\n    } else {\n      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))\n      this.$element.toggleClass('active')\n    }\n  }\n\n\n  // BUTTON PLUGIN DEFINITION\n  // ========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.button')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.button', (data = new Button(this, options)))\n\n      if (option == 'toggle') data.toggle()\n      else if (option) data.setState(option)\n    })\n  }\n\n  var old = $.fn.button\n\n  $.fn.button             = Plugin\n  $.fn.button.Constructor = Button\n\n\n  // BUTTON NO CONFLICT\n  // ==================\n\n  $.fn.button.noConflict = function () {\n    $.fn.button = old\n    return this\n  }\n\n\n  // BUTTON DATA-API\n  // ===============\n\n  $(document)\n    .on('click.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      var $btn = $(e.target)\n      if (!$btn.hasClass('btn')) $btn = $btn.closest('.btn')\n      Plugin.call($btn, 'toggle')\n      if (!($(e.target).is('input[type=\"radio\"]') || $(e.target).is('input[type=\"checkbox\"]'))) e.preventDefault()\n    })\n    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^=\"button\"]', function (e) {\n      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))\n    })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: carousel.js v3.3.5\n * http://getbootstrap.com/javascript/#carousel\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // CAROUSEL CLASS DEFINITION\n  // =========================\n\n  var Carousel = function (element, options) {\n    this.$element    = $(element)\n    this.$indicators = this.$element.find('.carousel-indicators')\n    this.options     = options\n    this.paused      = null\n    this.sliding     = null\n    this.interval    = null\n    this.$active     = null\n    this.$items      = null\n\n    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))\n\n    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element\n      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))\n      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))\n  }\n\n  Carousel.VERSION  = '3.3.5'\n\n  Carousel.TRANSITION_DURATION = 600\n\n  Carousel.DEFAULTS = {\n    interval: 5000,\n    pause: 'hover',\n    wrap: true,\n    keyboard: true\n  }\n\n  Carousel.prototype.keydown = function (e) {\n    if (/input|textarea/i.test(e.target.tagName)) return\n    switch (e.which) {\n      case 37: this.prev(); break\n      case 39: this.next(); break\n      default: return\n    }\n\n    e.preventDefault()\n  }\n\n  Carousel.prototype.cycle = function (e) {\n    e || (this.paused = false)\n\n    this.interval && clearInterval(this.interval)\n\n    this.options.interval\n      && !this.paused\n      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))\n\n    return this\n  }\n\n  Carousel.prototype.getItemIndex = function (item) {\n    this.$items = item.parent().children('.item')\n    return this.$items.index(item || this.$active)\n  }\n\n  Carousel.prototype.getItemForDirection = function (direction, active) {\n    var activeIndex = this.getItemIndex(active)\n    var willWrap = (direction == 'prev' && activeIndex === 0)\n                || (direction == 'next' && activeIndex == (this.$items.length - 1))\n    if (willWrap && !this.options.wrap) return active\n    var delta = direction == 'prev' ? -1 : 1\n    var itemIndex = (activeIndex + delta) % this.$items.length\n    return this.$items.eq(itemIndex)\n  }\n\n  Carousel.prototype.to = function (pos) {\n    var that        = this\n    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))\n\n    if (pos > (this.$items.length - 1) || pos < 0) return\n\n    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, \"slid\"\n    if (activeIndex == pos) return this.pause().cycle()\n\n    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))\n  }\n\n  Carousel.prototype.pause = function (e) {\n    e || (this.paused = true)\n\n    if (this.$element.find('.next, .prev').length && $.support.transition) {\n      this.$element.trigger($.support.transition.end)\n      this.cycle(true)\n    }\n\n    this.interval = clearInterval(this.interval)\n\n    return this\n  }\n\n  Carousel.prototype.next = function () {\n    if (this.sliding) return\n    return this.slide('next')\n  }\n\n  Carousel.prototype.prev = function () {\n    if (this.sliding) return\n    return this.slide('prev')\n  }\n\n  Carousel.prototype.slide = function (type, next) {\n    var $active   = this.$element.find('.item.active')\n    var $next     = next || this.getItemForDirection(type, $active)\n    var isCycling = this.interval\n    var direction = type == 'next' ? 'left' : 'right'\n    var that      = this\n\n    if ($next.hasClass('active')) return (this.sliding = false)\n\n    var relatedTarget = $next[0]\n    var slideEvent = $.Event('slide.bs.carousel', {\n      relatedTarget: relatedTarget,\n      direction: direction\n    })\n    this.$element.trigger(slideEvent)\n    if (slideEvent.isDefaultPrevented()) return\n\n    this.sliding = true\n\n    isCycling && this.pause()\n\n    if (this.$indicators.length) {\n      this.$indicators.find('.active').removeClass('active')\n      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])\n      $nextIndicator && $nextIndicator.addClass('active')\n    }\n\n    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, \"slid\"\n    if ($.support.transition && this.$element.hasClass('slide')) {\n      $next.addClass(type)\n      $next[0].offsetWidth // force reflow\n      $active.addClass(direction)\n      $next.addClass(direction)\n      $active\n        .one('bsTransitionEnd', function () {\n          $next.removeClass([type, direction].join(' ')).addClass('active')\n          $active.removeClass(['active', direction].join(' '))\n          that.sliding = false\n          setTimeout(function () {\n            that.$element.trigger(slidEvent)\n          }, 0)\n        })\n        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)\n    } else {\n      $active.removeClass('active')\n      $next.addClass('active')\n      this.sliding = false\n      this.$element.trigger(slidEvent)\n    }\n\n    isCycling && this.cycle()\n\n    return this\n  }\n\n\n  // CAROUSEL PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.carousel')\n      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)\n      var action  = typeof option == 'string' ? option : options.slide\n\n      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))\n      if (typeof option == 'number') data.to(option)\n      else if (action) data[action]()\n      else if (options.interval) data.pause().cycle()\n    })\n  }\n\n  var old = $.fn.carousel\n\n  $.fn.carousel             = Plugin\n  $.fn.carousel.Constructor = Carousel\n\n\n  // CAROUSEL NO CONFLICT\n  // ====================\n\n  $.fn.carousel.noConflict = function () {\n    $.fn.carousel = old\n    return this\n  }\n\n\n  // CAROUSEL DATA-API\n  // =================\n\n  var clickHandler = function (e) {\n    var href\n    var $this   = $(this)\n    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '')) // strip for ie7\n    if (!$target.hasClass('carousel')) return\n    var options = $.extend({}, $target.data(), $this.data())\n    var slideIndex = $this.attr('data-slide-to')\n    if (slideIndex) options.interval = false\n\n    Plugin.call($target, options)\n\n    if (slideIndex) {\n      $target.data('bs.carousel').to(slideIndex)\n    }\n\n    e.preventDefault()\n  }\n\n  $(document)\n    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)\n    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)\n\n  $(window).on('load', function () {\n    $('[data-ride=\"carousel\"]').each(function () {\n      var $carousel = $(this)\n      Plugin.call($carousel, $carousel.data())\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: collapse.js v3.3.5\n * http://getbootstrap.com/javascript/#collapse\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse = function (element, options) {\n    this.$element      = $(element)\n    this.options       = $.extend({}, Collapse.DEFAULTS, options)\n    this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + element.id + '\"],' +\n                           '[data-toggle=\"collapse\"][data-target=\"#' + element.id + '\"]')\n    this.transitioning = null\n\n    if (this.options.parent) {\n      this.$parent = this.getParent()\n    } else {\n      this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n    }\n\n    if (this.options.toggle) this.toggle()\n  }\n\n  Collapse.VERSION  = '3.3.5'\n\n  Collapse.TRANSITION_DURATION = 350\n\n  Collapse.DEFAULTS = {\n    toggle: true\n  }\n\n  Collapse.prototype.dimension = function () {\n    var hasWidth = this.$element.hasClass('width')\n    return hasWidth ? 'width' : 'height'\n  }\n\n  Collapse.prototype.show = function () {\n    if (this.transitioning || this.$element.hasClass('in')) return\n\n    var activesData\n    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')\n\n    if (actives && actives.length) {\n      activesData = actives.data('bs.collapse')\n      if (activesData && activesData.transitioning) return\n    }\n\n    var startEvent = $.Event('show.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    if (actives && actives.length) {\n      Plugin.call(actives, 'hide')\n      activesData || actives.data('bs.collapse', null)\n    }\n\n    var dimension = this.dimension()\n\n    this.$element\n      .removeClass('collapse')\n      .addClass('collapsing')[dimension](0)\n      .attr('aria-expanded', true)\n\n    this.$trigger\n      .removeClass('collapsed')\n      .attr('aria-expanded', true)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse in')[dimension]('')\n      this.transitioning = 0\n      this.$element\n        .trigger('shown.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    var scrollSize = $.camelCase(['scroll', dimension].join('-'))\n\n    this.$element\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])\n  }\n\n  Collapse.prototype.hide = function () {\n    if (this.transitioning || !this.$element.hasClass('in')) return\n\n    var startEvent = $.Event('hide.bs.collapse')\n    this.$element.trigger(startEvent)\n    if (startEvent.isDefaultPrevented()) return\n\n    var dimension = this.dimension()\n\n    this.$element[dimension](this.$element[dimension]())[0].offsetHeight\n\n    this.$element\n      .addClass('collapsing')\n      .removeClass('collapse in')\n      .attr('aria-expanded', false)\n\n    this.$trigger\n      .addClass('collapsed')\n      .attr('aria-expanded', false)\n\n    this.transitioning = 1\n\n    var complete = function () {\n      this.transitioning = 0\n      this.$element\n        .removeClass('collapsing')\n        .addClass('collapse')\n        .trigger('hidden.bs.collapse')\n    }\n\n    if (!$.support.transition) return complete.call(this)\n\n    this.$element\n      [dimension](0)\n      .one('bsTransitionEnd', $.proxy(complete, this))\n      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n  }\n\n  Collapse.prototype.toggle = function () {\n    this[this.$element.hasClass('in') ? 'hide' : 'show']()\n  }\n\n  Collapse.prototype.getParent = function () {\n    return $(this.options.parent)\n      .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n      .each($.proxy(function (i, element) {\n        var $element = $(element)\n        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n      }, this))\n      .end()\n  }\n\n  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {\n    var isOpen = $element.hasClass('in')\n\n    $element.attr('aria-expanded', isOpen)\n    $trigger\n      .toggleClass('collapsed', !isOpen)\n      .attr('aria-expanded', isOpen)\n  }\n\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n\n\n  // COLLAPSE PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.collapse')\n      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false\n      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.collapse\n\n  $.fn.collapse             = Plugin\n  $.fn.collapse.Constructor = Collapse\n\n\n  // COLLAPSE NO CONFLICT\n  // ====================\n\n  $.fn.collapse.noConflict = function () {\n    $.fn.collapse = old\n    return this\n  }\n\n\n  // COLLAPSE DATA-API\n  // =================\n\n  $(document).on('click.bs.collapse.data-api', '[data-toggle=\"collapse\"]', function (e) {\n    var $this   = $(this)\n\n    if (!$this.attr('data-target')) e.preventDefault()\n\n    var $target = getTargetFromTrigger($this)\n    var data    = $target.data('bs.collapse')\n    var option  = data ? 'toggle' : $this.data()\n\n    Plugin.call($target, option)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: dropdown.js v3.3.5\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.5'\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\n    })\n  }\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $(document.createElement('div'))\n          .addClass('dropdown-backdrop')\n          .insertAfter($(this))\n          .on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger('shown.bs.dropdown', relatedTarget)\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if (!isActive && e.which != 27 || isActive && e.which == 27) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.disabled):visible a'\n    var $items = $parent.find('.dropdown-menu' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--         // up\n    if (e.which == 40 && index < $items.length - 1) index++         // down\n    if (!~index)                                    index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: modal.js v3.3.5\n * http://getbootstrap.com/javascript/#modals\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // MODAL CLASS DEFINITION\n  // ======================\n\n  var Modal = function (element, options) {\n    this.options             = options\n    this.$body               = $(document.body)\n    this.$element            = $(element)\n    this.$dialog             = this.$element.find('.modal-dialog')\n    this.$backdrop           = null\n    this.isShown             = null\n    this.originalBodyPad     = null\n    this.scrollbarWidth      = 0\n    this.ignoreBackdropClick = false\n\n    if (this.options.remote) {\n      this.$element\n        .find('.modal-content')\n        .load(this.options.remote, $.proxy(function () {\n          this.$element.trigger('loaded.bs.modal')\n        }, this))\n    }\n  }\n\n  Modal.VERSION  = '3.3.5'\n\n  Modal.TRANSITION_DURATION = 300\n  Modal.BACKDROP_TRANSITION_DURATION = 150\n\n  Modal.DEFAULTS = {\n    backdrop: true,\n    keyboard: true,\n    show: true\n  }\n\n  Modal.prototype.toggle = function (_relatedTarget) {\n    return this.isShown ? this.hide() : this.show(_relatedTarget)\n  }\n\n  Modal.prototype.show = function (_relatedTarget) {\n    var that = this\n    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })\n\n    this.$element.trigger(e)\n\n    if (this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = true\n\n    this.checkScrollbar()\n    this.setScrollbar()\n    this.$body.addClass('modal-open')\n\n    this.escape()\n    this.resize()\n\n    this.$element.on('click.dismiss.bs.modal', '[data-dismiss=\"modal\"]', $.proxy(this.hide, this))\n\n    this.$dialog.on('mousedown.dismiss.bs.modal', function () {\n      that.$element.one('mouseup.dismiss.bs.modal', function (e) {\n        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true\n      })\n    })\n\n    this.backdrop(function () {\n      var transition = $.support.transition && that.$element.hasClass('fade')\n\n      if (!that.$element.parent().length) {\n        that.$element.appendTo(that.$body) // don't move modals dom position\n      }\n\n      that.$element\n        .show()\n        .scrollTop(0)\n\n      that.adjustDialog()\n\n      if (transition) {\n        that.$element[0].offsetWidth // force reflow\n      }\n\n      that.$element.addClass('in')\n\n      that.enforceFocus()\n\n      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })\n\n      transition ?\n        that.$dialog // wait for modal to slide in\n          .one('bsTransitionEnd', function () {\n            that.$element.trigger('focus').trigger(e)\n          })\n          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n        that.$element.trigger('focus').trigger(e)\n    })\n  }\n\n  Modal.prototype.hide = function (e) {\n    if (e) e.preventDefault()\n\n    e = $.Event('hide.bs.modal')\n\n    this.$element.trigger(e)\n\n    if (!this.isShown || e.isDefaultPrevented()) return\n\n    this.isShown = false\n\n    this.escape()\n    this.resize()\n\n    $(document).off('focusin.bs.modal')\n\n    this.$element\n      .removeClass('in')\n      .off('click.dismiss.bs.modal')\n      .off('mouseup.dismiss.bs.modal')\n\n    this.$dialog.off('mousedown.dismiss.bs.modal')\n\n    $.support.transition && this.$element.hasClass('fade') ?\n      this.$element\n        .one('bsTransitionEnd', $.proxy(this.hideModal, this))\n        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :\n      this.hideModal()\n  }\n\n  Modal.prototype.enforceFocus = function () {\n    $(document)\n      .off('focusin.bs.modal') // guard against infinite focus loop\n      .on('focusin.bs.modal', $.proxy(function (e) {\n        if (this.$element[0] !== e.target && !this.$element.has(e.target).length) {\n          this.$element.trigger('focus')\n        }\n      }, this))\n  }\n\n  Modal.prototype.escape = function () {\n    if (this.isShown && this.options.keyboard) {\n      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {\n        e.which == 27 && this.hide()\n      }, this))\n    } else if (!this.isShown) {\n      this.$element.off('keydown.dismiss.bs.modal')\n    }\n  }\n\n  Modal.prototype.resize = function () {\n    if (this.isShown) {\n      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))\n    } else {\n      $(window).off('resize.bs.modal')\n    }\n  }\n\n  Modal.prototype.hideModal = function () {\n    var that = this\n    this.$element.hide()\n    this.backdrop(function () {\n      that.$body.removeClass('modal-open')\n      that.resetAdjustments()\n      that.resetScrollbar()\n      that.$element.trigger('hidden.bs.modal')\n    })\n  }\n\n  Modal.prototype.removeBackdrop = function () {\n    this.$backdrop && this.$backdrop.remove()\n    this.$backdrop = null\n  }\n\n  Modal.prototype.backdrop = function (callback) {\n    var that = this\n    var animate = this.$element.hasClass('fade') ? 'fade' : ''\n\n    if (this.isShown && this.options.backdrop) {\n      var doAnimate = $.support.transition && animate\n\n      this.$backdrop = $(document.createElement('div'))\n        .addClass('modal-backdrop ' + animate)\n        .appendTo(this.$body)\n\n      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {\n        if (this.ignoreBackdropClick) {\n          this.ignoreBackdropClick = false\n          return\n        }\n        if (e.target !== e.currentTarget) return\n        this.options.backdrop == 'static'\n          ? this.$element[0].focus()\n          : this.hide()\n      }, this))\n\n      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow\n\n      this.$backdrop.addClass('in')\n\n      if (!callback) return\n\n      doAnimate ?\n        this.$backdrop\n          .one('bsTransitionEnd', callback)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callback()\n\n    } else if (!this.isShown && this.$backdrop) {\n      this.$backdrop.removeClass('in')\n\n      var callbackRemove = function () {\n        that.removeBackdrop()\n        callback && callback()\n      }\n      $.support.transition && this.$element.hasClass('fade') ?\n        this.$backdrop\n          .one('bsTransitionEnd', callbackRemove)\n          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :\n        callbackRemove()\n\n    } else if (callback) {\n      callback()\n    }\n  }\n\n  // these following methods are used to handle overflowing modals\n\n  Modal.prototype.handleUpdate = function () {\n    this.adjustDialog()\n  }\n\n  Modal.prototype.adjustDialog = function () {\n    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight\n\n    this.$element.css({\n      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',\n      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''\n    })\n  }\n\n  Modal.prototype.resetAdjustments = function () {\n    this.$element.css({\n      paddingLeft: '',\n      paddingRight: ''\n    })\n  }\n\n  Modal.prototype.checkScrollbar = function () {\n    var fullWindowWidth = window.innerWidth\n    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8\n      var documentElementRect = document.documentElement.getBoundingClientRect()\n      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)\n    }\n    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth\n    this.scrollbarWidth = this.measureScrollbar()\n  }\n\n  Modal.prototype.setScrollbar = function () {\n    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)\n    this.originalBodyPad = document.body.style.paddingRight || ''\n    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)\n  }\n\n  Modal.prototype.resetScrollbar = function () {\n    this.$body.css('padding-right', this.originalBodyPad)\n  }\n\n  Modal.prototype.measureScrollbar = function () { // thx walsh\n    var scrollDiv = document.createElement('div')\n    scrollDiv.className = 'modal-scrollbar-measure'\n    this.$body.append(scrollDiv)\n    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth\n    this.$body[0].removeChild(scrollDiv)\n    return scrollbarWidth\n  }\n\n\n  // MODAL PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option, _relatedTarget) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.modal')\n      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)\n\n      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))\n      if (typeof option == 'string') data[option](_relatedTarget)\n      else if (options.show) data.show(_relatedTarget)\n    })\n  }\n\n  var old = $.fn.modal\n\n  $.fn.modal             = Plugin\n  $.fn.modal.Constructor = Modal\n\n\n  // MODAL NO CONFLICT\n  // =================\n\n  $.fn.modal.noConflict = function () {\n    $.fn.modal = old\n    return this\n  }\n\n\n  // MODAL DATA-API\n  // ==============\n\n  $(document).on('click.bs.modal.data-api', '[data-toggle=\"modal\"]', function (e) {\n    var $this   = $(this)\n    var href    = $this.attr('href')\n    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\\s]+$)/, ''))) // strip for ie7\n    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())\n\n    if ($this.is('a')) e.preventDefault()\n\n    $target.one('show.bs.modal', function (showEvent) {\n      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown\n      $target.one('hidden.bs.modal', function () {\n        $this.is(':visible') && $this.trigger('focus')\n      })\n    })\n    Plugin.call($target, option, this)\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tooltip.js v3.3.5\n * http://getbootstrap.com/javascript/#tooltip\n * Inspired by the original jQuery.tipsy by Jason Frame\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TOOLTIP PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Tooltip = function (element, options) {\n    this.type       = null\n    this.options    = null\n    this.enabled    = null\n    this.timeout    = null\n    this.hoverState = null\n    this.$element   = null\n    this.inState    = null\n\n    this.init('tooltip', element, options)\n  }\n\n  Tooltip.VERSION  = '3.3.5'\n\n  Tooltip.TRANSITION_DURATION = 150\n\n  Tooltip.DEFAULTS = {\n    animation: true,\n    placement: 'top',\n    selector: false,\n    template: '<div class=\"tooltip\" role=\"tooltip\"><div class=\"tooltip-arrow\"></div><div class=\"tooltip-inner\"></div></div>',\n    trigger: 'hover focus',\n    title: '',\n    delay: 0,\n    html: false,\n    container: false,\n    viewport: {\n      selector: 'body',\n      padding: 0\n    }\n  }\n\n  Tooltip.prototype.init = function (type, element, options) {\n    this.enabled   = true\n    this.type      = type\n    this.$element  = $(element)\n    this.options   = this.getOptions(options)\n    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))\n    this.inState   = { click: false, hover: false, focus: false }\n\n    if (this.$element[0] instanceof document.constructor && !this.options.selector) {\n      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')\n    }\n\n    var triggers = this.options.trigger.split(' ')\n\n    for (var i = triggers.length; i--;) {\n      var trigger = triggers[i]\n\n      if (trigger == 'click') {\n        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))\n      } else if (trigger != 'manual') {\n        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'\n        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'\n\n        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))\n        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))\n      }\n    }\n\n    this.options.selector ?\n      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :\n      this.fixTitle()\n  }\n\n  Tooltip.prototype.getDefaults = function () {\n    return Tooltip.DEFAULTS\n  }\n\n  Tooltip.prototype.getOptions = function (options) {\n    options = $.extend({}, this.getDefaults(), this.$element.data(), options)\n\n    if (options.delay && typeof options.delay == 'number') {\n      options.delay = {\n        show: options.delay,\n        hide: options.delay\n      }\n    }\n\n    return options\n  }\n\n  Tooltip.prototype.getDelegateOptions = function () {\n    var options  = {}\n    var defaults = this.getDefaults()\n\n    this._options && $.each(this._options, function (key, value) {\n      if (defaults[key] != value) options[key] = value\n    })\n\n    return options\n  }\n\n  Tooltip.prototype.enter = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true\n    }\n\n    if (self.tip().hasClass('in') || self.hoverState == 'in') {\n      self.hoverState = 'in'\n      return\n    }\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'in'\n\n    if (!self.options.delay || !self.options.delay.show) return self.show()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'in') self.show()\n    }, self.options.delay.show)\n  }\n\n  Tooltip.prototype.isInStateTrue = function () {\n    for (var key in this.inState) {\n      if (this.inState[key]) return true\n    }\n\n    return false\n  }\n\n  Tooltip.prototype.leave = function (obj) {\n    var self = obj instanceof this.constructor ?\n      obj : $(obj.currentTarget).data('bs.' + this.type)\n\n    if (!self) {\n      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())\n      $(obj.currentTarget).data('bs.' + this.type, self)\n    }\n\n    if (obj instanceof $.Event) {\n      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false\n    }\n\n    if (self.isInStateTrue()) return\n\n    clearTimeout(self.timeout)\n\n    self.hoverState = 'out'\n\n    if (!self.options.delay || !self.options.delay.hide) return self.hide()\n\n    self.timeout = setTimeout(function () {\n      if (self.hoverState == 'out') self.hide()\n    }, self.options.delay.hide)\n  }\n\n  Tooltip.prototype.show = function () {\n    var e = $.Event('show.bs.' + this.type)\n\n    if (this.hasContent() && this.enabled) {\n      this.$element.trigger(e)\n\n      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])\n      if (e.isDefaultPrevented() || !inDom) return\n      var that = this\n\n      var $tip = this.tip()\n\n      var tipId = this.getUID(this.type)\n\n      this.setContent()\n      $tip.attr('id', tipId)\n      this.$element.attr('aria-describedby', tipId)\n\n      if (this.options.animation) $tip.addClass('fade')\n\n      var placement = typeof this.options.placement == 'function' ?\n        this.options.placement.call(this, $tip[0], this.$element[0]) :\n        this.options.placement\n\n      var autoToken = /\\s?auto?\\s?/i\n      var autoPlace = autoToken.test(placement)\n      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'\n\n      $tip\n        .detach()\n        .css({ top: 0, left: 0, display: 'block' })\n        .addClass(placement)\n        .data('bs.' + this.type, this)\n\n      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)\n      this.$element.trigger('inserted.bs.' + this.type)\n\n      var pos          = this.getPosition()\n      var actualWidth  = $tip[0].offsetWidth\n      var actualHeight = $tip[0].offsetHeight\n\n      if (autoPlace) {\n        var orgPlacement = placement\n        var viewportDim = this.getPosition(this.$viewport)\n\n        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :\n                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :\n                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :\n                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :\n                    placement\n\n        $tip\n          .removeClass(orgPlacement)\n          .addClass(placement)\n      }\n\n      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)\n\n      this.applyPlacement(calculatedOffset, placement)\n\n      var complete = function () {\n        var prevHoverState = that.hoverState\n        that.$element.trigger('shown.bs.' + that.type)\n        that.hoverState = null\n\n        if (prevHoverState == 'out') that.leave(that)\n      }\n\n      $.support.transition && this.$tip.hasClass('fade') ?\n        $tip\n          .one('bsTransitionEnd', complete)\n          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n        complete()\n    }\n  }\n\n  Tooltip.prototype.applyPlacement = function (offset, placement) {\n    var $tip   = this.tip()\n    var width  = $tip[0].offsetWidth\n    var height = $tip[0].offsetHeight\n\n    // manually read margins because getBoundingClientRect includes difference\n    var marginTop = parseInt($tip.css('margin-top'), 10)\n    var marginLeft = parseInt($tip.css('margin-left'), 10)\n\n    // we must check for NaN for ie 8/9\n    if (isNaN(marginTop))  marginTop  = 0\n    if (isNaN(marginLeft)) marginLeft = 0\n\n    offset.top  += marginTop\n    offset.left += marginLeft\n\n    // $.fn.offset doesn't round pixel values\n    // so we use setOffset directly with our own function B-0\n    $.offset.setOffset($tip[0], $.extend({\n      using: function (props) {\n        $tip.css({\n          top: Math.round(props.top),\n          left: Math.round(props.left)\n        })\n      }\n    }, offset), 0)\n\n    $tip.addClass('in')\n\n    // check to see if placing tip in new offset caused the tip to resize itself\n    var actualWidth  = $tip[0].offsetWidth\n    var actualHeight = $tip[0].offsetHeight\n\n    if (placement == 'top' && actualHeight != height) {\n      offset.top = offset.top + height - actualHeight\n    }\n\n    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)\n\n    if (delta.left) offset.left += delta.left\n    else offset.top += delta.top\n\n    var isVertical          = /top|bottom/.test(placement)\n    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight\n    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'\n\n    $tip.offset(offset)\n    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)\n  }\n\n  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {\n    this.arrow()\n      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')\n      .css(isVertical ? 'top' : 'left', '')\n  }\n\n  Tooltip.prototype.setContent = function () {\n    var $tip  = this.tip()\n    var title = this.getTitle()\n\n    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)\n    $tip.removeClass('fade in top bottom left right')\n  }\n\n  Tooltip.prototype.hide = function (callback) {\n    var that = this\n    var $tip = $(this.$tip)\n    var e    = $.Event('hide.bs.' + this.type)\n\n    function complete() {\n      if (that.hoverState != 'in') $tip.detach()\n      that.$element\n        .removeAttr('aria-describedby')\n        .trigger('hidden.bs.' + that.type)\n      callback && callback()\n    }\n\n    this.$element.trigger(e)\n\n    if (e.isDefaultPrevented()) return\n\n    $tip.removeClass('in')\n\n    $.support.transition && $tip.hasClass('fade') ?\n      $tip\n        .one('bsTransitionEnd', complete)\n        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :\n      complete()\n\n    this.hoverState = null\n\n    return this\n  }\n\n  Tooltip.prototype.fixTitle = function () {\n    var $e = this.$element\n    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {\n      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')\n    }\n  }\n\n  Tooltip.prototype.hasContent = function () {\n    return this.getTitle()\n  }\n\n  Tooltip.prototype.getPosition = function ($element) {\n    $element   = $element || this.$element\n\n    var el     = $element[0]\n    var isBody = el.tagName == 'BODY'\n\n    var elRect    = el.getBoundingClientRect()\n    if (elRect.width == null) {\n      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093\n      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })\n    }\n    var elOffset  = isBody ? { top: 0, left: 0 } : $element.offset()\n    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }\n    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null\n\n    return $.extend({}, elRect, scroll, outerDims, elOffset)\n  }\n\n  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {\n    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :\n           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :\n        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }\n\n  }\n\n  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {\n    var delta = { top: 0, left: 0 }\n    if (!this.$viewport) return delta\n\n    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0\n    var viewportDimensions = this.getPosition(this.$viewport)\n\n    if (/right|left/.test(placement)) {\n      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll\n      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight\n      if (topEdgeOffset < viewportDimensions.top) { // top overflow\n        delta.top = viewportDimensions.top - topEdgeOffset\n      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow\n        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset\n      }\n    } else {\n      var leftEdgeOffset  = pos.left - viewportPadding\n      var rightEdgeOffset = pos.left + viewportPadding + actualWidth\n      if (leftEdgeOffset < viewportDimensions.left) { // left overflow\n        delta.left = viewportDimensions.left - leftEdgeOffset\n      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow\n        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset\n      }\n    }\n\n    return delta\n  }\n\n  Tooltip.prototype.getTitle = function () {\n    var title\n    var $e = this.$element\n    var o  = this.options\n\n    title = $e.attr('data-original-title')\n      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)\n\n    return title\n  }\n\n  Tooltip.prototype.getUID = function (prefix) {\n    do prefix += ~~(Math.random() * 1000000)\n    while (document.getElementById(prefix))\n    return prefix\n  }\n\n  Tooltip.prototype.tip = function () {\n    if (!this.$tip) {\n      this.$tip = $(this.options.template)\n      if (this.$tip.length != 1) {\n        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')\n      }\n    }\n    return this.$tip\n  }\n\n  Tooltip.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))\n  }\n\n  Tooltip.prototype.enable = function () {\n    this.enabled = true\n  }\n\n  Tooltip.prototype.disable = function () {\n    this.enabled = false\n  }\n\n  Tooltip.prototype.toggleEnabled = function () {\n    this.enabled = !this.enabled\n  }\n\n  Tooltip.prototype.toggle = function (e) {\n    var self = this\n    if (e) {\n      self = $(e.currentTarget).data('bs.' + this.type)\n      if (!self) {\n        self = new this.constructor(e.currentTarget, this.getDelegateOptions())\n        $(e.currentTarget).data('bs.' + this.type, self)\n      }\n    }\n\n    if (e) {\n      self.inState.click = !self.inState.click\n      if (self.isInStateTrue()) self.enter(self)\n      else self.leave(self)\n    } else {\n      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)\n    }\n  }\n\n  Tooltip.prototype.destroy = function () {\n    var that = this\n    clearTimeout(this.timeout)\n    this.hide(function () {\n      that.$element.off('.' + that.type).removeData('bs.' + that.type)\n      if (that.$tip) {\n        that.$tip.detach()\n      }\n      that.$tip = null\n      that.$arrow = null\n      that.$viewport = null\n    })\n  }\n\n\n  // TOOLTIP PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.tooltip')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tooltip\n\n  $.fn.tooltip             = Plugin\n  $.fn.tooltip.Constructor = Tooltip\n\n\n  // TOOLTIP NO CONFLICT\n  // ===================\n\n  $.fn.tooltip.noConflict = function () {\n    $.fn.tooltip = old\n    return this\n  }\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: popover.js v3.3.5\n * http://getbootstrap.com/javascript/#popovers\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // POPOVER PUBLIC CLASS DEFINITION\n  // ===============================\n\n  var Popover = function (element, options) {\n    this.init('popover', element, options)\n  }\n\n  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')\n\n  Popover.VERSION  = '3.3.5'\n\n  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {\n    placement: 'right',\n    trigger: 'click',\n    content: '',\n    template: '<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-title\"></h3><div class=\"popover-content\"></div></div>'\n  })\n\n\n  // NOTE: POPOVER EXTENDS tooltip.js\n  // ================================\n\n  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)\n\n  Popover.prototype.constructor = Popover\n\n  Popover.prototype.getDefaults = function () {\n    return Popover.DEFAULTS\n  }\n\n  Popover.prototype.setContent = function () {\n    var $tip    = this.tip()\n    var title   = this.getTitle()\n    var content = this.getContent()\n\n    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)\n    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events\n      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'\n    ](content)\n\n    $tip.removeClass('fade top bottom left right in')\n\n    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do\n    // this manually by checking the contents.\n    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()\n  }\n\n  Popover.prototype.hasContent = function () {\n    return this.getTitle() || this.getContent()\n  }\n\n  Popover.prototype.getContent = function () {\n    var $e = this.$element\n    var o  = this.options\n\n    return $e.attr('data-content')\n      || (typeof o.content == 'function' ?\n            o.content.call($e[0]) :\n            o.content)\n  }\n\n  Popover.prototype.arrow = function () {\n    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))\n  }\n\n\n  // POPOVER PLUGIN DEFINITION\n  // =========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.popover')\n      var options = typeof option == 'object' && option\n\n      if (!data && /destroy|hide/.test(option)) return\n      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.popover\n\n  $.fn.popover             = Plugin\n  $.fn.popover.Constructor = Popover\n\n\n  // POPOVER NO CONFLICT\n  // ===================\n\n  $.fn.popover.noConflict = function () {\n    $.fn.popover = old\n    return this\n  }\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: scrollspy.js v3.3.5\n * http://getbootstrap.com/javascript/#scrollspy\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // SCROLLSPY CLASS DEFINITION\n  // ==========================\n\n  function ScrollSpy(element, options) {\n    this.$body          = $(document.body)\n    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)\n    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)\n    this.selector       = (this.options.target || '') + ' .nav li > a'\n    this.offsets        = []\n    this.targets        = []\n    this.activeTarget   = null\n    this.scrollHeight   = 0\n\n    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))\n    this.refresh()\n    this.process()\n  }\n\n  ScrollSpy.VERSION  = '3.3.5'\n\n  ScrollSpy.DEFAULTS = {\n    offset: 10\n  }\n\n  ScrollSpy.prototype.getScrollHeight = function () {\n    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)\n  }\n\n  ScrollSpy.prototype.refresh = function () {\n    var that          = this\n    var offsetMethod  = 'offset'\n    var offsetBase    = 0\n\n    this.offsets      = []\n    this.targets      = []\n    this.scrollHeight = this.getScrollHeight()\n\n    if (!$.isWindow(this.$scrollElement[0])) {\n      offsetMethod = 'position'\n      offsetBase   = this.$scrollElement.scrollTop()\n    }\n\n    this.$body\n      .find(this.selector)\n      .map(function () {\n        var $el   = $(this)\n        var href  = $el.data('target') || $el.attr('href')\n        var $href = /^#./.test(href) && $(href)\n\n        return ($href\n          && $href.length\n          && $href.is(':visible')\n          && [[$href[offsetMethod]().top + offsetBase, href]]) || null\n      })\n      .sort(function (a, b) { return a[0] - b[0] })\n      .each(function () {\n        that.offsets.push(this[0])\n        that.targets.push(this[1])\n      })\n  }\n\n  ScrollSpy.prototype.process = function () {\n    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset\n    var scrollHeight = this.getScrollHeight()\n    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()\n    var offsets      = this.offsets\n    var targets      = this.targets\n    var activeTarget = this.activeTarget\n    var i\n\n    if (this.scrollHeight != scrollHeight) {\n      this.refresh()\n    }\n\n    if (scrollTop >= maxScroll) {\n      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)\n    }\n\n    if (activeTarget && scrollTop < offsets[0]) {\n      this.activeTarget = null\n      return this.clear()\n    }\n\n    for (i = offsets.length; i--;) {\n      activeTarget != targets[i]\n        && scrollTop >= offsets[i]\n        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])\n        && this.activate(targets[i])\n    }\n  }\n\n  ScrollSpy.prototype.activate = function (target) {\n    this.activeTarget = target\n\n    this.clear()\n\n    var selector = this.selector +\n      '[data-target=\"' + target + '\"],' +\n      this.selector + '[href=\"' + target + '\"]'\n\n    var active = $(selector)\n      .parents('li')\n      .addClass('active')\n\n    if (active.parent('.dropdown-menu').length) {\n      active = active\n        .closest('li.dropdown')\n        .addClass('active')\n    }\n\n    active.trigger('activate.bs.scrollspy')\n  }\n\n  ScrollSpy.prototype.clear = function () {\n    $(this.selector)\n      .parentsUntil(this.options.target, '.active')\n      .removeClass('active')\n  }\n\n\n  // SCROLLSPY PLUGIN DEFINITION\n  // ===========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.scrollspy')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.scrollspy\n\n  $.fn.scrollspy             = Plugin\n  $.fn.scrollspy.Constructor = ScrollSpy\n\n\n  // SCROLLSPY NO CONFLICT\n  // =====================\n\n  $.fn.scrollspy.noConflict = function () {\n    $.fn.scrollspy = old\n    return this\n  }\n\n\n  // SCROLLSPY DATA-API\n  // ==================\n\n  $(window).on('load.bs.scrollspy.data-api', function () {\n    $('[data-spy=\"scroll\"]').each(function () {\n      var $spy = $(this)\n      Plugin.call($spy, $spy.data())\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: tab.js v3.3.5\n * http://getbootstrap.com/javascript/#tabs\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n  var Tab = function (element) {\n    // jscs:disable requireDollarBeforejQueryAssignment\n    this.element = $(element)\n    // jscs:enable requireDollarBeforejQueryAssignment\n  }\n\n  Tab.VERSION = '3.3.5'\n\n  Tab.TRANSITION_DURATION = 150\n\n  Tab.prototype.show = function () {\n    var $this    = this.element\n    var $ul      = $this.closest('ul:not(.dropdown-menu)')\n    var selector = $this.data('target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    if ($this.parent('li').hasClass('active')) return\n\n    var $previous = $ul.find('.active:last a')\n    var hideEvent = $.Event('hide.bs.tab', {\n      relatedTarget: $this[0]\n    })\n    var showEvent = $.Event('show.bs.tab', {\n      relatedTarget: $previous[0]\n    })\n\n    $previous.trigger(hideEvent)\n    $this.trigger(showEvent)\n\n    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n    var $target = $(selector)\n\n    this.activate($this.closest('li'), $ul)\n    this.activate($target, $target.parent(), function () {\n      $previous.trigger({\n        type: 'hidden.bs.tab',\n        relatedTarget: $this[0]\n      })\n      $this.trigger({\n        type: 'shown.bs.tab',\n        relatedTarget: $previous[0]\n      })\n    })\n  }\n\n  Tab.prototype.activate = function (element, container, callback) {\n    var $active    = container.find('> .active')\n    var transition = callback\n      && $.support.transition\n      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n    function next() {\n      $active\n        .removeClass('active')\n        .find('> .dropdown-menu > .active')\n          .removeClass('active')\n        .end()\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', false)\n\n      element\n        .addClass('active')\n        .find('[data-toggle=\"tab\"]')\n          .attr('aria-expanded', true)\n\n      if (transition) {\n        element[0].offsetWidth // reflow for transition\n        element.addClass('in')\n      } else {\n        element.removeClass('fade')\n      }\n\n      if (element.parent('.dropdown-menu').length) {\n        element\n          .closest('li.dropdown')\n            .addClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n      }\n\n      callback && callback()\n    }\n\n    $active.length && transition ?\n      $active\n        .one('bsTransitionEnd', next)\n        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n      next()\n\n    $active.removeClass('in')\n  }\n\n\n  // TAB PLUGIN DEFINITION\n  // =====================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.tab')\n\n      if (!data) $this.data('bs.tab', (data = new Tab(this)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.tab\n\n  $.fn.tab             = Plugin\n  $.fn.tab.Constructor = Tab\n\n\n  // TAB NO CONFLICT\n  // ===============\n\n  $.fn.tab.noConflict = function () {\n    $.fn.tab = old\n    return this\n  }\n\n\n  // TAB DATA-API\n  // ============\n\n  var clickHandler = function (e) {\n    e.preventDefault()\n    Plugin.call($(this), 'show')\n  }\n\n  $(document)\n    .on('click.bs.tab.data-api', '[data-toggle=\"tab\"]', clickHandler)\n    .on('click.bs.tab.data-api', '[data-toggle=\"pill\"]', clickHandler)\n\n}(jQuery);\n","/* ========================================================================\n * Bootstrap: affix.js v3.3.5\n * http://getbootstrap.com/javascript/#affix\n * ========================================================================\n * Copyright 2011-2015 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // AFFIX CLASS DEFINITION\n  // ======================\n\n  var Affix = function (element, options) {\n    this.options = $.extend({}, Affix.DEFAULTS, options)\n\n    this.$target = $(this.options.target)\n      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))\n      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))\n\n    this.$element     = $(element)\n    this.affixed      = null\n    this.unpin        = null\n    this.pinnedOffset = null\n\n    this.checkPosition()\n  }\n\n  Affix.VERSION  = '3.3.5'\n\n  Affix.RESET    = 'affix affix-top affix-bottom'\n\n  Affix.DEFAULTS = {\n    offset: 0,\n    target: window\n  }\n\n  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {\n    var scrollTop    = this.$target.scrollTop()\n    var position     = this.$element.offset()\n    var targetHeight = this.$target.height()\n\n    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false\n\n    if (this.affixed == 'bottom') {\n      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'\n      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'\n    }\n\n    var initializing   = this.affixed == null\n    var colliderTop    = initializing ? scrollTop : position.top\n    var colliderHeight = initializing ? targetHeight : height\n\n    if (offsetTop != null && scrollTop <= offsetTop) return 'top'\n    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'\n\n    return false\n  }\n\n  Affix.prototype.getPinnedOffset = function () {\n    if (this.pinnedOffset) return this.pinnedOffset\n    this.$element.removeClass(Affix.RESET).addClass('affix')\n    var scrollTop = this.$target.scrollTop()\n    var position  = this.$element.offset()\n    return (this.pinnedOffset = position.top - scrollTop)\n  }\n\n  Affix.prototype.checkPositionWithEventLoop = function () {\n    setTimeout($.proxy(this.checkPosition, this), 1)\n  }\n\n  Affix.prototype.checkPosition = function () {\n    if (!this.$element.is(':visible')) return\n\n    var height       = this.$element.height()\n    var offset       = this.options.offset\n    var offsetTop    = offset.top\n    var offsetBottom = offset.bottom\n    var scrollHeight = Math.max($(document).height(), $(document.body).height())\n\n    if (typeof offset != 'object')         offsetBottom = offsetTop = offset\n    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)\n    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)\n\n    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)\n\n    if (this.affixed != affix) {\n      if (this.unpin != null) this.$element.css('top', '')\n\n      var affixType = 'affix' + (affix ? '-' + affix : '')\n      var e         = $.Event(affixType + '.bs.affix')\n\n      this.$element.trigger(e)\n\n      if (e.isDefaultPrevented()) return\n\n      this.affixed = affix\n      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null\n\n      this.$element\n        .removeClass(Affix.RESET)\n        .addClass(affixType)\n        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')\n    }\n\n    if (affix == 'bottom') {\n      this.$element.offset({\n        top: scrollHeight - height - offsetBottom\n      })\n    }\n  }\n\n\n  // AFFIX PLUGIN DEFINITION\n  // =======================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this   = $(this)\n      var data    = $this.data('bs.affix')\n      var options = typeof option == 'object' && option\n\n      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))\n      if (typeof option == 'string') data[option]()\n    })\n  }\n\n  var old = $.fn.affix\n\n  $.fn.affix             = Plugin\n  $.fn.affix.Constructor = Affix\n\n\n  // AFFIX NO CONFLICT\n  // =================\n\n  $.fn.affix.noConflict = function () {\n    $.fn.affix = old\n    return this\n  }\n\n\n  // AFFIX DATA-API\n  // ==============\n\n  $(window).on('load', function () {\n    $('[data-spy=\"affix\"]').each(function () {\n      var $spy = $(this)\n      var data = $spy.data()\n\n      data.offset = data.offset || {}\n\n      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom\n      if (data.offsetTop    != null) data.offset.top    = data.offsetTop\n\n      Plugin.call($spy, data)\n    })\n  })\n\n}(jQuery);\n","/* ========================================================================\n * DOM-based Routing\n * Based on http://goo.gl/EUTi53 by Paul Irish\n *\n * Only fires on body classes that match. If a body class contains a dash,\n * replace the dash with an underscore when adding it to the object below.\n *\n * .noConflict()\n * The routing is enclosed within an anonymous function so that you can\n * always reference jQuery with $, even when in .noConflict() mode.\n * ======================================================================== */\n\n(function($) {\n\n  // Use this variable to set up the common and page specific functions. If you\n  // rename this variable, you will also need to rename the namespace below.\n  var Sage = {\n    // All pages\n    'common': {\n      init: function() {\n        // JavaScript to be fired on all pages\n      },\n      finalize: function() {\n        // JavaScript to be fired on all pages, after page specific JS is fired\n      }\n    },\n    // Home page\n    'home': {\n      init: function() {\n        // JavaScript to be fired on the home page\n      },\n      finalize: function() {\n        // JavaScript to be fired on the home page, after the init JS\n      }\n    },\n    // About us page, note the change from about-us to about_us.\n    'about_us': {\n      init: function() {\n        // JavaScript to be fired on the about us page\n      }\n    }\n  };\n\n  // The routing fires all common scripts, followed by the page specific scripts.\n  // Add additional events for more control over timing e.g. a finalize event\n  var UTIL = {\n    fire: function(func, funcname, args) {\n      var fire;\n      var namespace = Sage;\n      funcname = (funcname === undefined) ? 'init' : funcname;\n      fire = func !== '';\n      fire = fire && namespace[func];\n      fire = fire && typeof namespace[func][funcname] === 'function';\n\n      if (fire) {\n        namespace[func][funcname](args);\n      }\n    },\n    loadEvents: function() {\n      // Fire common init JS\n      UTIL.fire('common');\n\n      // Fire page-specific init JS, and then finalize JS\n      $.each(document.body.className.replace(/-/g, '_').split(/\\s+/), function(i, classnm) {\n        UTIL.fire(classnm);\n        UTIL.fire(classnm, 'finalize');\n      });\n\n      // Fire common finalize JS\n      UTIL.fire('common', 'finalize');\n    }\n  };\n\n  // Load Events\n  $(document).ready(UTIL.loadEvents);\n\n})(jQuery); // Fully reference jQuery after this point.\n"],"sourceRoot":"assets/scripts/"}